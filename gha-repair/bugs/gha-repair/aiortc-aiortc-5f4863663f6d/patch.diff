diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml
index dd13fa0..28ea542 100644
--- a/.github/workflows/tests.yml
+++ b/.github/workflows/tests.yml
@@ -20,28 +20,39 @@ jobs:
           black --check --diff examples src tests
           mypy src
 
-  test-linux:
-    runs-on: ubuntu-latest
+  test:
+    runs-on: ${{ matrix.os }}
     strategy:
       matrix:
+        os: [ubuntu-latest, macos-latest]
         python: [3.8, 3.7, 3.6]
     steps:
       - uses: actions/checkout@v1
       - uses: actions/setup-python@v1
         with:
           python-version: ${{ matrix.python }}
+      - name: Install OS packages and disable firewall
+        if: matrix.os == 'macos-latest'
+        run: |
+          brew update
+          brew install ffmpeg opus pkg-config libvpx
+          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
       - name: Install OS packages
+        if: matrix.os == 'ubuntu-latest'
         run: |
           sudo apt-get update
           sudo apt-get install libmp3lame-dev libopus-dev libvpx-dev libx264-dev yasm
+          echo "::set-env name=LD_LIBRARY_PATH::$HOME/.local/lib"
+          echo "::set-env name=PKG_CONFIG_PATH::$HOME/.local/lib/pkgconfig"
       - name: Cache FFmpeg
+        if: matrix.os == 'ubuntu-latest'
         uses: actions/cache@v1
         id: cache-ffmpeg
         with:
           path: ~/.local
           key: ${{ runner.os }}-ffmpeg-4.1
       - name: Build FFmpeg
-        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
+        if: matrix.os == 'ubuntu-latest' && steps.cache-ffmpeg.outputs.cache-hit != 'true'
         run: |
           curl http://www.ffmpeg.org/releases/ffmpeg-4.1.3.tar.xz | tar xJ
           cd ffmpeg-4.1.3
@@ -55,37 +66,6 @@ jobs:
           cd ..
       - name: Run tests
         run: |
-          export LD_LIBRARY_PATH=$HOME/.local/lib
-          export PKG_CONFIG_PATH=$HOME/.local/lib/pkgconfig
-          pip install -U pip setuptools wheel
-          pip install aiohttp coverage opencv-python websockets
-          pip install .
-          coverage run -m unittest discover -v
-          coverage xml
-      - name: Upload coverage report
-        uses: codecov/codecov-action@v1
-        with:
-          token: ${{ secrets.CODECOV_TOKEN }}
-
-  test-osx:
-    runs-on: macos-latest
-    strategy:
-      matrix:
-        python: [3.8, 3.7, 3.6]
-    steps:
-      - uses: actions/checkout@v1
-      - uses: actions/setup-python@v1
-        with:
-          python-version: ${{ matrix.python }}
-      - name: Install OS packages
-        run: |
-          brew update
-          brew install ffmpeg opus pkg-config libvpx
-      - name: Disable firewall
-        run: |
-          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
-      - name: Run tests
-        run: |
           pip install -U pip setuptools wheel
           pip install aiohttp coverage opencv-python websockets
           pip install .
@@ -98,7 +78,7 @@ jobs:
 
   package:
     runs-on: ubuntu-latest
-    needs: [lint, test-linux, test-osx]
+    needs: [lint, test]
     steps:
       - uses: actions/checkout@v1
       - uses: actions/setup-python@v1
