diff --git a/.github/workflows/develop.yml b/.github/workflows/develop.yml
index 8f27a59..cb49a15 100644
--- a/.github/workflows/develop.yml
+++ b/.github/workflows/develop.yml
@@ -1,64 +1,78 @@
-name: Development
+name: Build and upload to PyPI
 
-on:
-  # Triggers the workflow on push or pull request events but only for the master branch
-  # TODO remove master
-  push:
-    branches: [master, develop]
-  pull_request:
-    branches: [master, develop]
-
-env:
-  CIBW_BUILD: "cp37-*"
-
-  # Allows you to run this workflow manually from the Actions tab
-  workflow_dispatch:
+# Build on every branch push, tag push, and pull request change:
+on: [push, pull_request]
+# Alternatively, to publish when a (published) GitHub Release is created, use the following:
+# on:
+#   push:
+#   pull_request:
+#   release:
+#     types:
+#       - published
 
 jobs:
-  build_and_test:
-    #name: ${{matrix.os}} with py ${{ matrix.python-version }}
-    name: ${{matrix.os}} with py 3.7
-    runs-on: ${{matrix.os}}
+  build_wheels:
+    name: Build wheels on ${{ matrix.os }}
+    runs-on: ${{ matrix.os }}
     strategy:
-      # TODO set to false
-      fail-fast: true
       matrix:
-        #os: [ubuntu-latest, windows-latest, macos-latest]
-        os: [ubuntu-latest, windows-latest]
-        #python-version: [3.5, 3.6, 3.7, 3.8]
-        #python-version: [3.7, 3.8]
+        os: [ubuntu-18.04, windows-latest]
 
     steps:
       - uses: actions/checkout@v2
 
-      #- name: Set up Python ${{ matrix.python-version }}
-      - name: Set up Python 3.7
-        uses: actions\setup-python@v2
+      - uses: actions/setup-python@v2
+        name: Install Python
         with:
-          #python-version: ${{ matrix.python-version }}
-          python-version: "3.7"
+          python-version: '3.7'
 
-      - name: Install dependencies
+      - name: Install cibuildwheel
         run: |
-          python -m pip install --upgrade pip
-          pip install -r requirements_setup.txt
-          pip install -r requirements.txt
-          pip install -r requirements_test.txt
-
+          python -m pip install cibuildwheel==1.7.0
+      - name: Install Visual C++ for Python 2.7
+        if: runner.os == 'Windows'
+        run: |
+          choco install vcpython27 -f -y
       - name: Build wheels
         run: |
-          pip install cython>=0.28.3
-          python -m cibuildwheel --output-dir dist
-
+          python -m cibuildwheel --output-dir wheelhouse
       - uses: actions/upload-artifact@v2
         with:
-          path: .dist/*.whl
+          path: ./wheelhouse/*.whl
+
+  build_sdist:
+    name: Build source distribution
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v2
+
+      - uses: actions/setup-python@v2
+        name: Install Python
+        with:
+          python-version: '3.7'
 
       - name: Build sdist
-        run: |
-          python setup.py sdist -d dist
-          python setup.py --openmp build_ext --inplace
+        run: python setup.py sdist
 
-      - name: Run tests
-        run: |
-          python -m pytest --cov gstools --cov-report term-missing -v tests/
+      - uses: actions/upload-artifact@v2
+        with:
+          path: dist/*.tar.gz
+
+  upload_pypi:
+    needs: [build_wheels, build_sdist]
+    runs-on: ubuntu-latest
+    # upload to PyPI on every tag starting with 'v'
+    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
+    # alternatively, to publish when a GitHub Release is created, use the following rule:
+    # if: github.event_name == 'release' && github.event.action == 'published'
+    steps:
+      - uses: actions/download-artifact@v2
+        with:
+          name: artifact
+          path: dist
+
+      - uses: pypa/gh-action-pypi-publish@master
+        with:
+          user: __token__
+          password: ${{ secrets.pypi_password }}
+          repository_url: https://test.pypi.org/legacy/
