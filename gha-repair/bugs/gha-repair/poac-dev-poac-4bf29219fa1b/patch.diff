diff --git a/.github/disabled_workflows/codeql-analysis.yml b/.github/disabled_workflows/codeql-analysis.yml
new file mode 100644
index 0000000..205aee8
--- /dev/null
+++ b/.github/disabled_workflows/codeql-analysis.yml
@@ -0,0 +1,73 @@
+# For most projects, this workflow file will not need changing; you simply need
+# to commit it to your repository.
+#
+# You may wish to alter this file to override the set of languages analyzed,
+# or to provide custom queries or build logic.
+#
+# ******** NOTE ********
+# We have attempted to detect the languages in your repository. Please check
+# the `language` matrix defined below to confirm you have the correct set of
+# supported CodeQL languages.
+#
+name: "CodeQL"
+
+concurrency:
+  group: ${{ github.workflow }}-${{ github.ref }}
+  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
+
+on:
+  push:
+    branches: [ main ]
+  pull_request:
+    # The branches below must be a subset of the branches above
+    branches: [ main ]
+  schedule:
+    - cron: '20 20 * * 4'
+
+jobs:
+  analyze:
+    name: Analyze
+    runs-on: ubuntu-22.04
+    permissions:
+      actions: read
+      contents: read
+      security-events: write
+
+    strategy:
+      fail-fast: false
+      matrix:
+        language: [ 'cpp' ]
+        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
+        # Learn more:
+        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed
+
+    steps:
+    - name: Checkout repository
+      uses: actions/checkout@v3
+
+    - name: Install dependencies
+      run: |
+        sudo apt-get -qq update
+        sudo apt-get install -y        \
+          ninja-build libboost-all-dev \
+          libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
+
+    # Initializes the CodeQL tools for scanning.
+    - name: Initialize CodeQL
+      uses: github/codeql-action/init@v2
+      with:
+        languages: ${{ matrix.language }}
+        # If you wish to specify custom queries, you can do so here or in a config file.
+        # By default, queries listed here will override any specified in a config file.
+        # Prefix the list here with "+" to use these queries and those in the config file.
+        # queries: ./path/to/local/query, your-org/your-repo/queries@main
+
+    - name: Run CMake
+      run: cmake -B build -G Ninja -DPOAC_CLANG_TIDY=OFF
+
+    - name: Build Poac
+      run: ninja
+      working-directory: build
+
+    - name: Perform CodeQL Analysis
+      uses: github/codeql-action/analyze@v2
diff --git a/.github/disabled_workflows/linux.yml b/.github/disabled_workflows/linux.yml
new file mode 100644
index 0000000..01be200
--- /dev/null
+++ b/.github/disabled_workflows/linux.yml
@@ -0,0 +1,135 @@
+name: Linux
+
+on:
+  push:
+    branches: [ main ]
+  pull_request:
+
+concurrency:
+  group: ${{ github.workflow }}-${{ github.ref }}
+  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
+
+permissions:
+  contents: read
+
+jobs:
+  build-and-test:
+    name: "build & test"
+    runs-on: ubuntu-22.04
+    strategy:
+      fail-fast: false
+      matrix:
+        build_type: [ Debug, Release ]
+        coverage: [ off ]
+        compiler:
+          - cc: clang-12
+            cxx: clang++-12
+            subpackage: lld-12
+          - cc: clang-13
+            cxx: clang++-13
+            subpackage: lld-13
+          - cc: clang-14
+            cxx: clang++-14
+            subpackage: lld-14
+          - cc: gcc-11
+            cxx: g++-11
+          - cc: gcc-12
+            cxx: g++-12
+        include:
+          - build_type: Debug
+            coverage: on
+            compiler:
+              cc: gcc-12
+              cxx: g++-12
+              subpackage: lcov
+    env:
+      CC: ${{ matrix.compiler.cc }}
+      CXX: ${{ matrix.compiler.cxx }}
+    steps:
+      - uses: actions/checkout@v3
+
+      - name: Setup GCC
+        if: startsWith(matrix.compiler.cc, 'gcc')
+        run: sudo apt-get install -y ${{ matrix.compiler.cxx }}
+
+      - name: Setup Clang
+        if: startsWith(matrix.compiler.cc, 'clang')
+        run: sudo apt-get install -y ${{ matrix.compiler.cc }}
+
+      - name: Install dependencies
+        run: |
+          sudo apt-get -qq update
+          sudo apt-get install -y             \
+            ${{ matrix.compiler.subpackage }} \
+            ninja-build libboost-all-dev      \
+            libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
+
+      - name: Run CMake
+        run: |
+          cmake -B build -G Ninja                       \
+            -DPOAC_CLANG_TIDY=OFF                       \
+            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
+            -DPOAC_ENABLE_COVERAGE=${{ matrix.coverage }}
+
+      - name: Build Poac
+        run: ninja
+        working-directory: build
+
+      - name: Test Poac
+        run: ctest --output-on-failure --verbose
+        working-directory: build
+
+      - name: Uninstall optional software for some commands
+        run: sudo apt-get purge -y clang-format
+
+      - name: Test Poac more
+        run: ctest --output-on-failure --verbose
+        working-directory: build
+
+      - name: Print info of the executable file
+        run: file ./poac
+        working-directory: build
+
+      - name: Print help
+        run: ./poac --help
+        working-directory: build
+
+      - name: Test binary
+        # FIXME: memory leak on Ninja
+        # https://github.com/poac-dev/poac/runs/6859118992?check_suite_focus=true#step:16:21
+        if: matrix.build_type == 'Release'
+        run: |
+          ./poac create hello_world
+          cd hello_world
+          ../poac run
+        working-directory: build
+
+      - name: Install Conan
+        id: conan
+        uses: turtlebrowser/get-conan@main
+        with:
+          version: 1.59.0
+
+      - name: Test conan dependency
+        # FIXME: memory leak on Ninja
+        # https://github.com/poacpm/poac/runs/6859118992?check_suite_focus=true#step:16:21
+        if: matrix.build_type == 'Release'
+        run: |
+          git clone https://github.com/wx257osn2/poac-conan-demo.git
+          cd poac-conan-demo
+          ../build/poac build
+
+      - name: Print coverage
+        if: success() && matrix.coverage == 'on'
+        run: |
+          lcov --directory . --capture --output-file coverage.info --gcov-tool "${CC_PATH/gcc/gcov}"
+          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
+          lcov --list coverage.info
+        env:
+          CC_PATH: /usr/bin/${{ env.CC }}
+
+      - name: Upload coverage to Codecov
+        if: success() && matrix.coverage == 'on'
+        uses: codecov/codecov-action@v3
+        with:
+          files: coverage.info
diff --git a/.github/workflows/codeql-analysis.yml b/.github/workflows/codeql-analysis.yml
deleted file mode 100644
index 205aee8..0000000
--- a/.github/workflows/codeql-analysis.yml
+++ /dev/null
@@ -1,73 +0,0 @@
-# For most projects, this workflow file will not need changing; you simply need
-# to commit it to your repository.
-#
-# You may wish to alter this file to override the set of languages analyzed,
-# or to provide custom queries or build logic.
-#
-# ******** NOTE ********
-# We have attempted to detect the languages in your repository. Please check
-# the `language` matrix defined below to confirm you have the correct set of
-# supported CodeQL languages.
-#
-name: "CodeQL"
-
-concurrency:
-  group: ${{ github.workflow }}-${{ github.ref }}
-  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
-
-on:
-  push:
-    branches: [ main ]
-  pull_request:
-    # The branches below must be a subset of the branches above
-    branches: [ main ]
-  schedule:
-    - cron: '20 20 * * 4'
-
-jobs:
-  analyze:
-    name: Analyze
-    runs-on: ubuntu-22.04
-    permissions:
-      actions: read
-      contents: read
-      security-events: write
-
-    strategy:
-      fail-fast: false
-      matrix:
-        language: [ 'cpp' ]
-        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
-        # Learn more:
-        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed
-
-    steps:
-    - name: Checkout repository
-      uses: actions/checkout@v3
-
-    - name: Install dependencies
-      run: |
-        sudo apt-get -qq update
-        sudo apt-get install -y        \
-          ninja-build libboost-all-dev \
-          libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
-
-    # Initializes the CodeQL tools for scanning.
-    - name: Initialize CodeQL
-      uses: github/codeql-action/init@v2
-      with:
-        languages: ${{ matrix.language }}
-        # If you wish to specify custom queries, you can do so here or in a config file.
-        # By default, queries listed here will override any specified in a config file.
-        # Prefix the list here with "+" to use these queries and those in the config file.
-        # queries: ./path/to/local/query, your-org/your-repo/queries@main
-
-    - name: Run CMake
-      run: cmake -B build -G Ninja -DPOAC_CLANG_TIDY=OFF
-
-    - name: Build Poac
-      run: ninja
-      working-directory: build
-
-    - name: Perform CodeQL Analysis
-      uses: github/codeql-action/analyze@v2
diff --git a/.github/workflows/cpp.yml b/.github/workflows/cpp.yml
index cb42bb0..9bc7a29 100644
--- a/.github/workflows/cpp.yml
+++ b/.github/workflows/cpp.yml
@@ -9,25 +9,25 @@ permissions:
   contents: read
 
 jobs:
-  clang-tidy:
-    runs-on: ubuntu-22.04
-    steps:
-      - uses: actions/checkout@v3
-
-      - name: Install dependencies
-        run: |
-          sudo apt-get -qq update
-          sudo apt-get install -y        \
-            clang-14 lld-14              \
-            ninja-build libboost-all-dev \
-            libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
-
-      - name: Run CMake
-        run: cmake -B build -G Ninja
-
-      - name: Run clang-tidy
-        run: ninja
-        working-directory: build
+#  clang-tidy:
+#    runs-on: ubuntu-22.04
+#    steps:
+#      - uses: actions/checkout@v3
+#
+#      - name: Install dependencies
+#        run: |
+#          sudo apt-get -qq update
+#          sudo apt-get install -y        \
+#            clang-14 lld-14              \
+#            ninja-build libboost-all-dev \
+#            libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
+#
+#      - name: Run CMake
+#        run: cmake -B build -G Ninja
+#
+#      - name: Run clang-tidy
+#        run: ninja
+#        working-directory: build
 
   format:
     runs-on: ubuntu-22.04
diff --git a/.github/workflows/linux.yml b/.github/workflows/linux.yml
deleted file mode 100644
index 01be200..0000000
--- a/.github/workflows/linux.yml
+++ /dev/null
@@ -1,135 +0,0 @@
-name: Linux
-
-on:
-  push:
-    branches: [ main ]
-  pull_request:
-
-concurrency:
-  group: ${{ github.workflow }}-${{ github.ref }}
-  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
-
-permissions:
-  contents: read
-
-jobs:
-  build-and-test:
-    name: "build & test"
-    runs-on: ubuntu-22.04
-    strategy:
-      fail-fast: false
-      matrix:
-        build_type: [ Debug, Release ]
-        coverage: [ off ]
-        compiler:
-          - cc: clang-12
-            cxx: clang++-12
-            subpackage: lld-12
-          - cc: clang-13
-            cxx: clang++-13
-            subpackage: lld-13
-          - cc: clang-14
-            cxx: clang++-14
-            subpackage: lld-14
-          - cc: gcc-11
-            cxx: g++-11
-          - cc: gcc-12
-            cxx: g++-12
-        include:
-          - build_type: Debug
-            coverage: on
-            compiler:
-              cc: gcc-12
-              cxx: g++-12
-              subpackage: lcov
-    env:
-      CC: ${{ matrix.compiler.cc }}
-      CXX: ${{ matrix.compiler.cxx }}
-    steps:
-      - uses: actions/checkout@v3
-
-      - name: Setup GCC
-        if: startsWith(matrix.compiler.cc, 'gcc')
-        run: sudo apt-get install -y ${{ matrix.compiler.cxx }}
-
-      - name: Setup Clang
-        if: startsWith(matrix.compiler.cc, 'clang')
-        run: sudo apt-get install -y ${{ matrix.compiler.cc }}
-
-      - name: Install dependencies
-        run: |
-          sudo apt-get -qq update
-          sudo apt-get install -y             \
-            ${{ matrix.compiler.subpackage }} \
-            ninja-build libboost-all-dev      \
-            libfmt-dev libarchive-dev libgit2-dev libspdlog-dev
-
-      - name: Run CMake
-        run: |
-          cmake -B build -G Ninja                       \
-            -DPOAC_CLANG_TIDY=OFF                       \
-            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
-            -DPOAC_ENABLE_COVERAGE=${{ matrix.coverage }}
-
-      - name: Build Poac
-        run: ninja
-        working-directory: build
-
-      - name: Test Poac
-        run: ctest --output-on-failure --verbose
-        working-directory: build
-
-      - name: Uninstall optional software for some commands
-        run: sudo apt-get purge -y clang-format
-
-      - name: Test Poac more
-        run: ctest --output-on-failure --verbose
-        working-directory: build
-
-      - name: Print info of the executable file
-        run: file ./poac
-        working-directory: build
-
-      - name: Print help
-        run: ./poac --help
-        working-directory: build
-
-      - name: Test binary
-        # FIXME: memory leak on Ninja
-        # https://github.com/poac-dev/poac/runs/6859118992?check_suite_focus=true#step:16:21
-        if: matrix.build_type == 'Release'
-        run: |
-          ./poac create hello_world
-          cd hello_world
-          ../poac run
-        working-directory: build
-
-      - name: Install Conan
-        id: conan
-        uses: turtlebrowser/get-conan@main
-        with:
-          version: 1.59.0
-
-      - name: Test conan dependency
-        # FIXME: memory leak on Ninja
-        # https://github.com/poacpm/poac/runs/6859118992?check_suite_focus=true#step:16:21
-        if: matrix.build_type == 'Release'
-        run: |
-          git clone https://github.com/wx257osn2/poac-conan-demo.git
-          cd poac-conan-demo
-          ../build/poac build
-
-      - name: Print coverage
-        if: success() && matrix.coverage == 'on'
-        run: |
-          lcov --directory . --capture --output-file coverage.info --gcov-tool "${CC_PATH/gcc/gcov}"
-          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
-          lcov --list coverage.info
-        env:
-          CC_PATH: /usr/bin/${{ env.CC }}
-
-      - name: Upload coverage to Codecov
-        if: success() && matrix.coverage == 'on'
-        uses: codecov/codecov-action@v3
-        with:
-          files: coverage.info
