diff --git a/.github/workflows/CodeCoverage.yml b/.github/workflows/CodeCoverage.yml
new file mode 100644
index 0000000..52e6088
--- /dev/null
+++ b/.github/workflows/CodeCoverage.yml
@@ -0,0 +1,35 @@
+name: code coverage
+
+on:
+  push:
+    branches:
+      - master
+    paths:
+      - 'source/DefaultEcs/**'
+      - 'source/DefaultEcs.Test/**'
+
+jobs:
+  code_coverage:
+    runs-on: windows-latest
+    steps:
+    - name: Checkout
+      uses: actions/checkout@master
+
+    - name: Set up dotnet
+      uses: actions/setup-dotnet@v1
+      with:
+        dotnet-version: '3.0.100'
+
+    - name: Build netcoreapp3.0
+      run: dotnet build source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f netcoreapp3.0
+
+    - name: Install coverlet tool
+      run: dotnet tool install --tool-path . --version 1.6.0 coverlet.console
+
+    - name: Create coverage file
+      run: dotnet .store\coverlet.console\1.6.0\coverlet.console\1.6.0\tools\netcoreapp2.2\any\coverlet.console.dll source\DefaultEcs.Test\bin\Release\netcoreapp3.0\DefaultEcs.Test.dll -t "dotnet" -a "vstest source\DefaultEcs.Test\bin\Release\netcoreapp3.0\DefaultEcs.Test.dll" -o coverage\lcov.info -f lcov --exclude "[*]DefaultEcs.Technical.Debug*"
+
+    - name: Upload to coverall
+      uses: coverallsapp/github-action@master
+      with:
+        github-token: ${{ secrets.GITHUB_TOKEN }}
diff --git a/.github/workflows/ContinuousIntegration.yml b/.github/workflows/ContinuousIntegration.yml
index 24ff5f6..81da507 100644
--- a/.github/workflows/ContinuousIntegration.yml
+++ b/.github/workflows/ContinuousIntegration.yml
@@ -1,50 +1,38 @@
-name: continuous integration
-
-on:
-  push:
-    branches:
-      - master
-    paths:
-      - 'source/DefaultEcs/**'
-      - 'source/DefaultEcs.Test/**'
-
-jobs:
-  continuous_integration:
-    runs-on: windows-latest
-    steps:
-    - name: Checkout
-      uses: actions/checkout@master
-
-    - name: Set up dotnet
-      uses: actions/setup-dotnet@v1
-      with:
-        dotnet-version: '3.0.100'
-        source-url: https://nuget.pkg.github.com/Doraku/index.json
-      env:
-        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
-
-    - name: Run tests net452
-      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f net452
-
-    - name: Run tests net48
-      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f net48
-
-    - name: Run tests netcoreapp3.0
-      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f netcoreapp3.0
-
-    - name: Create package
-      run: dotnet pack source\DefaultEcs\DefaultEcs.csproj -c Release -o package -p:PackageReleaseNotes="${{ github.sha }}"
-
-    - name: Publish package
-      run: nuget push package\*.nupkg
-
-    - name: Install coverlet tool
-      run: dotnet tool install --tool-path . --version 1.6.0 coverlet.console
-
-    - name: Create coverage file
-      run: dotnet .store\coverlet.console\1.6.0\coverlet.console\1.6.0\tools\netcoreapp2.2\any\coverlet.console.dll source\DefaultEcs.Test\bin\Release\netcoreapp3.0\DefaultEcs.Test.dll -t "dotnet" -a "vstest source\DefaultEcs.Test\bin\Release\netcoreapp3.0\DefaultEcs.Test.dll" -o coverage\lcov.info -f lcov --exclude "[*]DefaultEcs.Technical.Debug*"
-
-    - name: Upload to coverall
-      uses: coverallsapp/github-action@master
-      with:
-        github-token: ${{ secrets.GITHUB_TOKEN }}
+name: continuous integration
+
+on:
+  push:
+    branches:
+      - master
+    paths:
+      - 'source/DefaultEcs/**'
+
+jobs:
+  continuous_integration:
+    runs-on: windows-latest
+    steps:
+    - name: Checkout
+      uses: actions/checkout@master
+
+    - name: Set up dotnet
+      uses: actions/setup-dotnet@v1
+      with:
+        dotnet-version: '3.0.100'
+        source-url: https://nuget.pkg.github.com/Doraku/index.json
+      env:
+        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
+
+    - name: Run tests net452
+      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f net452
+
+    - name: Run tests net48
+      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f net48
+
+    - name: Run tests netcoreapp3.0
+      run: dotnet test source\DefaultEcs.Test\DefaultEcs.Test.csproj -c Release -f netcoreapp3.0
+
+    - name: Create package
+      run: dotnet pack source\DefaultEcs\DefaultEcs.csproj -c Release -o package -p:PackageReleaseNotes="${{ github.sha }}"
+
+    - name: Publish package
+      run: nuget push package\*.nupkg
