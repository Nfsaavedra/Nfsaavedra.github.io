diff --git a/.github/workflows/linux.yml b/.github/workflows/linux.yml
index 242dcd4..b9f2963 100644
--- a/.github/workflows/linux.yml
+++ b/.github/workflows/linux.yml
@@ -23,6 +23,102 @@ env:
   TZ: UTC
 
 jobs:
+  ubuntu_22_04:
+    runs-on: ubuntu-22.04
+
+    strategy:
+      fail-fast: false
+      matrix:
+        compiler:
+          - cc:  gcc-10
+            cxx: g++-10
+          - cc:  gcc-9
+            cxx: g++-9
+          #- cc:  clang-12
+          #  cxx: clang++-12
+          - cc:  clang-11
+            cxx: clang++-11
+          #- cc:  clang-10
+          #  cxx: clang++-10
+        flags:
+          #- name: Gcrypt
+          #  flags: "--with-gcrypt"
+          - name: OpenSSL
+            flags: ""
+
+    name: Ubuntu 22.04 ${{ matrix.compiler.cc }} using ${{ matrix.flags.name }}
+
+    steps:
+      - uses: actions/checkout@v2
+        with:
+          fetch-depth: 750
+          submodules: 'recursive'
+
+      - uses: actions/cache@v2
+        id: cache
+        if: ${{ env.ACT != 'true' }}
+        with:
+          path: |
+            /home/runner/.ccache
+          key: ${{ runner.os }}-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}-${{ hashFiles('.github/workflows/linux.yml') }}
+          restore-keys: ${{ runner.os }}-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
+
+      - name: Install dependencies
+        run: |
+          apt update -q
+          apt-get install -y git ${{ matrix.compiler.cc }} ${{ matrix.compiler.cxx }} autoconf automake build-essential ccache ethtool expect hostapd iw lcov libcmocka-dev libgcrypt20-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libpcap-dev libpcre3-dev libsqlite3-dev libssl-dev libtool pkg-config rfkill screen shtool tcpdump usbutils wpasupplicant zlib1g-dev
+
+      - name: Ccache stats before builds
+        run: |
+          ccache -s
+
+      - name: Build with ${{ matrix.compiler.cc }} using ${{ matrix.flags.name }}
+        env:
+          AM_COLOR_TESTS: always
+        run: |
+          CPUS=$(nproc)
+          export CC="ccache ${{ matrix.compiler.cc }}"
+          export CXX="ccache ${{ matrix.compiler.cxx }}"
+          echo "::group::make distclean"
+          make distclean || :
+          echo "::endgroup::"
+          echo "::group::autoreconf"
+          autoreconf -vif
+          echo "::endgroup::"
+          echo "::group::configure"
+          mkdir linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
+          cd linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
+          echo ">> Configure with $CC, $CXX, and ${{ matrix.flags.flags }}"
+          ../configure --without-opt --with-experimental --enable-maintainer-mode ${{ matrix.flags.flags }} || { cat config.log; exit 1; }
+          echo "::endgroup::"
+          echo "::group::build"
+          echo ">> Build using ${CPUS} jobs"
+          make -j ${CPUS}
+          echo "::endgroup::"
+          echo "::group::run tests"
+          make -j ${CPUS} check || { find . -name 'test-suite.log' -exec cat {} ';' && exit 1; }
+          echo "::endgroup::"
+          cd ..
+
+      - name: Ccache stats after builds
+        run: |
+          ccache -s
+
+      - name: Archive artifacts
+        if: ${{ env.ACT != 'true' }}
+        uses: actions/upload-artifact@v2
+        with:
+          name: linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
+          path: |
+            linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/.deps
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/.dirstamp
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/*.a
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/*.la
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/*.lai
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/*.o
+            !linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}/**/*.lo
+
   ubuntu_20_04:
     runs-on: ubuntu-20.04
 
@@ -58,6 +154,7 @@ jobs:
 
       - uses: actions/cache@v2
         id: cache
+        if: ${{ env.ACT != 'true' }}
         with:
           path: |
             /home/runner/.ccache
@@ -66,8 +163,8 @@ jobs:
 
       - name: Install dependencies
         run: |
-          sudo apt update
-          sudo apt-get install autoconf automake build-essential ccache ethtool expect hostapd iw lcov libcmocka-dev libgcrypt20-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libpcap-dev libpcre3-dev libsqlite3-dev libssl-dev libtool pkg-config rfkill screen shtool tcpdump usbutils wpasupplicant zlib1g-dev
+          sudo apt update -q
+          sudo apt-get install -y autoconf automake build-essential ccache ethtool expect hostapd iw lcov libcmocka-dev libgcrypt20-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libpcap-dev libpcre3-dev libsqlite3-dev libssl-dev libtool pkg-config rfkill screen shtool tcpdump usbutils wpasupplicant zlib1g-dev
 
       - name: Ccache stats before builds
         run: |
@@ -107,6 +204,7 @@ jobs:
 
       - name: Archive artifacts
         uses: actions/upload-artifact@v2
+        if: ${{ env.ACT != 'true' }}
         with:
           name: linux-${{ matrix.compiler.cc }}-${{ matrix.flags.name }}
           path: |
