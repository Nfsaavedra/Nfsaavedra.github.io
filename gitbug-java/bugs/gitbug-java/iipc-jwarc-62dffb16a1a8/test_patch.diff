diff --git a/test/org/netpreserve/jwarc/WarcParserTest.java b/test/org/netpreserve/jwarc/WarcParserTest.java
index 6c9b431..4216591 100644
--- a/test/org/netpreserve/jwarc/WarcParserTest.java
+++ b/test/org/netpreserve/jwarc/WarcParserTest.java
@@ -11,11 +11,21 @@ import static org.junit.Assert.*;
 public class WarcParserTest {
     @Test
     public void testParsingArcWithBogusMime() {
-        String input = "http://example.com/ 1.2.3.4 20110104111607 @[=*ï¿½Content-Type] 494\n";
+        WarcParser parser = parse("http://example.com/ 1.2.3.4 20110104111607 @[=*ï¿½Content-Type] 494\n");
+        assertEquals(Optional.of("494"), parser.headers().sole("Content-Length"));
+        parser = parse("http://example.com/ 1.2.3.4 20110104111607 charset=foo 494\n");
+        assertEquals(Optional.of("494"), parser.headers().sole("Content-Length"));
+        parser = parse("http://example.com/ 1.2.3.4 20110104111607 image(jpeg) 494\n");
+        assertEquals(Optional.of("494"), parser.headers().sole("Content-Length"));
+        parser = parse("http://example.com/ 1.2.3.4 20110104111607 ERROR: 494\n");
+        assertEquals(Optional.of("494"), parser.headers().sole("Content-Length"));
+    }
+
+    private static WarcParser parse(String input) {
         WarcParser parser = new WarcParser();
         parser.parse(ByteBuffer.wrap(input.getBytes(StandardCharsets.ISO_8859_1)));
         assertFalse(parser.isError());
         assertTrue(parser.isFinished());
-        assertEquals(Optional.of("494"), parser.headers().sole("Content-Length"));
+        return parser;
     }
 }
\ No newline at end of file
