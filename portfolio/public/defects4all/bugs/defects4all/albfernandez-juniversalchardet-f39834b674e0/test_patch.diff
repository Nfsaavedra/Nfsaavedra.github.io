diff --git a/src/test/java/org/mozilla/universalchardet/GB18030SMFalsePositiveTest.java b/src/test/java/org/mozilla/universalchardet/GB18030SMFalsePositiveTest.java
index 91c7c1d..72a3f00 100644
--- a/src/test/java/org/mozilla/universalchardet/GB18030SMFalsePositiveTest.java
+++ b/src/test/java/org/mozilla/universalchardet/GB18030SMFalsePositiveTest.java
@@ -4,7 +4,7 @@ import static org.junit.Assert.assertEquals;
 
 import java.io.UnsupportedEncodingException;
 
-import org.junit.Ignore;
+import org.junit.Assert;
 import org.junit.Test;
 
 /**
@@ -16,11 +16,14 @@ public class GB18030SMFalsePositiveTest
 {
 	
 	@Test
-	@Ignore("not yet fixed")
-	public void testFalsePositive() throws UnsupportedEncodingException
+	public void testFalsePositiveBug11() throws UnsupportedEncodingException
 	{
-		UniversalDetector detector = new UniversalDetector(null);
-		byte[] buf = new byte[]{91, -80, 52, -80, 48, -80, 84, -80, 67, -80, 67, -80, 48, -80, 67, -80, 84};
+		String testString = "[°4°0°T°C°C°0°C°T";
+		byte[] testBuf = new byte[]{91, -80, 52, -80, 48, -80, 84, -80, 67, -80, 67, -80, 48, -80, 67, -80, 84};
+		byte[] buf = testString.getBytes("WINDOWS-1252");
+		Assert.assertArrayEquals(testBuf, buf);
+
+		UniversalDetector detector = new UniversalDetector();
 		detector.handleData(buf, 0, buf.length);
 		detector.dataEnd();
 		
@@ -28,4 +31,19 @@ public class GB18030SMFalsePositiveTest
 		detector.reset();
 		assertEquals("WINDOWS-1252", encoding);
 	}
+	
+	@Test
+	public void testFalsePositiveBug9() throws UnsupportedEncodingException {
+		String testString = "Wykamol,£588.95,0.18,0.12,testingSpecialised Products for DIY and Professionals£12";
+		byte[] buf = testString.getBytes("WINDOWS-1252");
+		
+		UniversalDetector detector = new UniversalDetector();
+		detector.handleData(buf);
+		detector.dataEnd();
+		
+		String encoding = detector.getDetectedCharset();
+		detector.reset();
+		
+		assertEquals("WINDOWS-1252", encoding);
+	}
 }
\ No newline at end of file
