diff --git a/src/test/java/com/googlecode/aviator/AviatorEvaluatorInstanceUnitTest.java b/src/test/java/com/googlecode/aviator/AviatorEvaluatorInstanceUnitTest.java
index 2268c70..dd9a2fe 100644
--- a/src/test/java/com/googlecode/aviator/AviatorEvaluatorInstanceUnitTest.java
+++ b/src/test/java/com/googlecode/aviator/AviatorEvaluatorInstanceUnitTest.java
@@ -40,6 +40,7 @@ import com.googlecode.aviator.runtime.type.AviatorBoolean;
 import com.googlecode.aviator.runtime.type.AviatorFunction;
 import com.googlecode.aviator.runtime.type.AviatorObject;
 import com.googlecode.aviator.runtime.type.AviatorString;
+import com.googlecode.aviator.utils.Constants;
 import com.googlecode.aviator.utils.TestUtils;
 
 
@@ -146,6 +147,18 @@ public class AviatorEvaluatorInstanceUnitTest {
   }
 
   @Test
+  public void testInternalVars() {
+    Map<String, Object> env = new HashMap<>();
+
+    Map<String, Object> theEnv = (Map<String, Object>) this.instance.execute("__env__", env);
+    assertTrue(env.isEmpty());
+    assertNotNull(theEnv.get(Constants.EXP_VAR));
+    assertSame(this.instance, theEnv.get(Constants.INSTANCE_VAR));
+    assertSame(theEnv, theEnv.get(Constants.ENV_VAR));
+    System.out.println(theEnv);
+  }
+
+  @Test
   public void testEnableDisableFeature() {
     assertTrue(
         this.instance.getOptionValue(Options.FEATURE_SET).featureSet.contains(Feature.Assignment));
diff --git a/src/test/java/com/googlecode/aviator/LambdaUnitTest.java b/src/test/java/com/googlecode/aviator/LambdaUnitTest.java
index f22a714..58b2173 100644
--- a/src/test/java/com/googlecode/aviator/LambdaUnitTest.java
+++ b/src/test/java/com/googlecode/aviator/LambdaUnitTest.java
@@ -107,7 +107,7 @@ public class LambdaUnitTest {
 
     Map<String, Object> result = (Map<String, Object>) AviatorEvaluator.execute("#__env__", env);
 
-    assertEquals(4, result.size());
+    assertEquals(3, result.size());
     assertEquals("a", result.get("a"));
     assertEquals(3.2, result.get("b"));
     assertSame(c, result.get("c"));
diff --git a/src/test/java/com/googlecode/aviator/test/function/GrammarUnitTest.java b/src/test/java/com/googlecode/aviator/test/function/GrammarUnitTest.java
index a7ea067..6baa2a1 100644
--- a/src/test/java/com/googlecode/aviator/test/function/GrammarUnitTest.java
+++ b/src/test/java/com/googlecode/aviator/test/function/GrammarUnitTest.java
@@ -211,7 +211,7 @@ public class GrammarUnitTest {
     String r1 = "result=true;v1='test1';if(!result) {return 'ok';} v2='test2'; result";
     Map<String, Object> env = new HashMap<>();
     Assert.assertTrue((boolean) AviatorEvaluator.execute(r1, env));
-    assertEquals(4, env.size());
+    assertEquals(3, env.size());
     assertEquals(true, env.get("result"));
     assertEquals("test1", env.get("v1"));
     assertEquals("test2", env.get("v2"));
