diff --git a/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectOperation.java b/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectOperation.java
index 0896264..5b9d43a 100644
--- a/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectOperation.java
+++ b/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectOperation.java
@@ -12,7 +12,10 @@ import org.slf4j.LoggerFactory;
 import rx.Observable;
 import rx.Observable.OnSubscribe;
 import rx.Subscriber;
+import rx.Subscription;
+import rx.functions.Action0;
 import rx.functions.Func1;
+import rx.subscriptions.Subscriptions;
 
 final class QuerySelectOperation {
 
@@ -64,6 +67,16 @@ final class QuerySelectOperation {
                 executeQuery(subscriber);
                 subscriber
                         .setProducer(new QuerySelectProducer<T>(function, subscriber, con, ps, rs));
+                // this is required for the case when
+                // "select count(*) from tbl".take(1) is called which enables
+                // the backpressure path and 1 is requested and end of result
+                // set is is not detected so onComplete action of closing does not happen.
+                subscriber.add(Subscriptions.create(new Action0() {
+                    @Override
+                    public void call() {
+                        closeQuietly();
+                    }
+                }));
             } catch (Exception e) {
                 try {
                     closeQuietly();
diff --git a/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectProducer.java b/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectProducer.java
index 4cf4e9e..a204031 100644
--- a/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectProducer.java
+++ b/src/main/java/com/github/davidmoten/rx/jdbc/QuerySelectProducer.java
@@ -75,8 +75,9 @@ class QuerySelectProducer<T> implements Producer {
                         processRow(subscriber);
                     }
                     if (keepGoing) {
-                        if (requested.addAndGet(-r) == 0)
+                        if (requested.addAndGet(-r) == 0) {
                             return;
+                        }
                     } else {
                         closeQuietly();
                         complete(subscriber);
