diff --git a/src/main/java/com/projecty/projectyweb/message/Message.java b/src/main/java/com/projecty/projectyweb/message/Message.java
index 940cdc4..08bdf7c 100644
--- a/src/main/java/com/projecty/projectyweb/message/Message.java
+++ b/src/main/java/com/projecty/projectyweb/message/Message.java
@@ -40,6 +40,10 @@ public class Message {
     )
     private List<Attachment> attachments;
 
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "reply_to_message_id")
+    private Message replyToMessage;
+
     public Long getId() {
         return id;
     }
@@ -103,4 +107,12 @@ public class Message {
     public void setAttachments(List<Attachment> attachments) {
         this.attachments = attachments;
     }
+
+    public Message getReplyToMessage() {
+        return replyToMessage;
+    }
+
+    public void setReplyToMessage(Message replyToMessage) {
+        this.replyToMessage = replyToMessage;
+    }
 }
diff --git a/src/main/java/com/projecty/projectyweb/message/MessageController.java b/src/main/java/com/projecty/projectyweb/message/MessageController.java
index 6f04a18..7dd75ab 100644
--- a/src/main/java/com/projecty/projectyweb/message/MessageController.java
+++ b/src/main/java/com/projecty/projectyweb/message/MessageController.java
@@ -93,4 +93,18 @@ public class MessageController {
     public int getUnreadMessageCount() {
         return messageService.getUnreadMessageCountForCurrentUser();
     }
+
+    @PostMapping("{replyToMessageId}/reply")
+    public void reply(
+            @PathVariable(name = "replyToMessageId") Long replyToMessageId,
+            @ModelAttribute Message message,
+            BindingResult bindingResult,
+            @RequestParam(required = false) List<MultipartFile> multipartFiles
+
+    ) throws BindException {
+        messageService.reply(replyToMessageId, message, bindingResult, multipartFiles);
+        if (bindingResult.hasErrors()) {
+            throw new BindException(bindingResult);
+        }
+    }
 }
diff --git a/src/main/java/com/projecty/projectyweb/message/MessageService.java b/src/main/java/com/projecty/projectyweb/message/MessageService.java
index 94a7537..d510dfe 100644
--- a/src/main/java/com/projecty/projectyweb/message/MessageService.java
+++ b/src/main/java/com/projecty/projectyweb/message/MessageService.java
@@ -6,10 +6,12 @@ import com.projecty.projectyweb.user.UserRepository;
 import com.projecty.projectyweb.user.UserService;
 import org.springframework.context.MessageSource;
 import org.springframework.context.i18n.LocaleContextHolder;
+import org.springframework.http.HttpStatus;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.BindingResult;
 import org.springframework.validation.ObjectError;
 import org.springframework.web.multipart.MultipartFile;
+import org.springframework.web.server.ResponseStatusException;
 
 import java.sql.Timestamp;
 import java.util.List;
@@ -74,4 +76,20 @@ public class MessageService {
         }
     }
 
+    public void reply(Long replyToMessageId,
+                      Message message,
+                      BindingResult bindingResult,
+                      List<MultipartFile> multipartFiles) {
+        Optional<Message> replyToMessage = messageRepository.findById(replyToMessageId);
+        if(replyToMessage.isPresent()) {
+            message.setReplyToMessage(replyToMessage.get());
+            sendMessage(
+                    replyToMessage.get().getSender().getUsername(),
+                    message,
+                    bindingResult,
+                    multipartFiles);
+        } else {
+            throw new ResponseStatusException(HttpStatus.NOT_FOUND);
+        }
+    }
 }
