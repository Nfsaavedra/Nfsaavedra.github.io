diff --git a/CHANGELOG.md b/CHANGELOG.md
index ee0e107..814c788 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -6,6 +6,8 @@ The format is based on [Keep a Changelog](http://keepachangelog.com/)
 and this project adheres to [Semantic Versioning](http://semver.org/).
 
 ## In Development
+### Fixed
+- All URL-encoded PUT and POST requests are now UTF-8 instead of ISO-8859-1.
 ### Added
 - Number Insight now supports the `cnam` parameter for Standard and Advanced requests.
 
diff --git a/src/main/java/com/nexmo/client/voice/endpoints/AbstractMethod.java b/src/main/java/com/nexmo/client/voice/endpoints/AbstractMethod.java
index e6c540c..7c57b63 100644
--- a/src/main/java/com/nexmo/client/voice/endpoints/AbstractMethod.java
+++ b/src/main/java/com/nexmo/client/voice/endpoints/AbstractMethod.java
@@ -27,8 +27,11 @@ import com.nexmo.client.NexmoUnexpectedException;
 import com.nexmo.client.auth.AuthMethod;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpEntityEnclosingRequest;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.HttpClient;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
 import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;
 import org.apache.http.client.methods.HttpUriRequest;
 import org.apache.http.client.methods.RequestBuilder;
@@ -36,6 +39,7 @@ import org.apache.http.util.EntityUtils;
 
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
+import java.nio.charset.Charset;
 import java.util.HashSet;
 import java.util.Set;
 
@@ -73,7 +77,26 @@ public abstract class AbstractMethod<RequestT, ResultT> implements Method<Reques
     // TODO: Consider wrapping IOException in a nexmo-specific transport exception.
     public ResultT execute(RequestT request) throws IOException, NexmoClientException {
         try {
-            HttpUriRequest httpRequest = applyAuth(makeRequest(request)).build();
+            RequestBuilder requestBuilder = applyAuth(makeRequest(request));
+            HttpUriRequest httpRequest = requestBuilder.build();
+
+            // If we have a URL Encoded form entity, we may need to regenerate it as UTF-8
+            // due to a bug (or two!) in RequestBuilder:
+            //
+            // This fix can be removed when HttpClient is upgraded to 4.5, although 4.5 also
+            // has a bug where RequestBuilder.put(uri) and RequestBuilder.post(uri) use the
+            // wrong encoding, whereas RequestBuilder.put().setUri(uri) uses UTF-8.
+            // - MS 2017-04-12
+            if (httpRequest instanceof HttpEntityEnclosingRequest) {
+                HttpEntityEnclosingRequest entityRequest =
+                        (HttpEntityEnclosingRequest) httpRequest;
+                HttpEntity entity = entityRequest.getEntity();
+                if (entity != null && entity instanceof UrlEncodedFormEntity) {
+                    entityRequest.setEntity(new UrlEncodedFormEntity(
+                            requestBuilder.getParameters(),
+                            Charset.forName("UTF-8")));
+                }
+            }
             LOG.debug("Request: " + httpRequest);
             if (LOG.isDebugEnabled() && httpRequest instanceof HttpEntityEnclosingRequestBase) {
                 HttpEntityEnclosingRequestBase enclosingRequest = (HttpEntityEnclosingRequestBase) httpRequest;
