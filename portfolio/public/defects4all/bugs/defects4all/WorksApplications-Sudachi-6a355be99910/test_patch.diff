diff --git a/src/test/java/com/worksap/nlp/sudachi/RegexOovProviderTest.kt b/src/test/java/com/worksap/nlp/sudachi/RegexOovProviderTest.kt
index 0b7330a..8a4e03b 100644
--- a/src/test/java/com/worksap/nlp/sudachi/RegexOovProviderTest.kt
+++ b/src/test/java/com/worksap/nlp/sudachi/RegexOovProviderTest.kt
@@ -20,37 +20,40 @@ import kotlin.test.Test
 import kotlin.test.assertEquals
 
 class RegexOovProviderTest {
-  private val analyzer =
-      kotlin.run {
-        val cfg = Config.empty()
-        cfg.addOovProviderPlugin(SimpleOovProviderPlugin::class.java)
+  private fun analyzer(
+      block: (Config, Config.PluginConf<RegexOovProvider>) -> Unit = { _, _ -> }
+  ): Tokenizer {
+    val cfg = Config.empty()
+    cfg.addOovProviderPlugin(SimpleOovProviderPlugin::class.java)
+    val pluginCfg =
         cfg.addOovProviderPlugin(RegexOovProvider::class.java)
             .add("regex", """[0-9a-z-]+""")
             .add("cost", 3500)
             .add("leftId", 5)
             .add("rightId", 5)
             .addList("pos", "名詞", "普通名詞", "一般", "*", "*", "*")
-        // prepend our OOV configuration to the main configuration
-        DictionaryFactory().create(cfg.withFallback(TestDictionary.user0Cfg())).create()
-      }
+    @Suppress("UNCHECKED_CAST") block(cfg, pluginCfg as Config.PluginConf<RegexOovProvider>)
+    // prepend our OOV configuration to the main configuration
+    return DictionaryFactory().create(cfg.withFallback(TestDictionary.user0Cfg())).create()
+  }
 
   @Test
   fun noOtherWords() {
-    val tokens = analyzer.tokenize("XAG-2F")
+    val tokens = analyzer().tokenize("XAG-2F")
     assertEquals(1, tokens.size)
     assertEquals("XAG-2F", tokens[0].surface())
   }
 
   @Test
   fun hasOtherWords() {
-    val tokens = analyzer.tokenize("京都XAG-2F東京")
+    val tokens = analyzer().tokenize("京都XAG-2F東京")
     assertEquals(3, tokens.size)
     assertEquals("XAG-2F", tokens[1].surface())
   }
 
   @Test
   fun hasOtherConflictingWords() {
-    val tokens = analyzer.tokenize("２つXＡＧ-2F")
+    val tokens = analyzer().tokenize("２つXＡＧ-2F")
     assertEquals(3, tokens.size)
     assertEquals("XＡＧ-2F", tokens[2].surface())
     assertEquals("xag-2f", tokens[2].normalizedForm())
@@ -59,7 +62,7 @@ class RegexOovProviderTest {
 
   @Test
   fun singleMultibyte() {
-    val tokens = analyzer.tokenize("２つＧ")
+    val tokens = analyzer().tokenize("２つＧ")
     assertEquals(3, tokens.size)
     assertEquals("Ｇ", tokens[2].surface())
     assertEquals("g", tokens[2].normalizedForm())
@@ -67,8 +70,25 @@ class RegexOovProviderTest {
 
   @Test
   fun noOtherWordsWithDigitsInMiddle() {
-    val tokens = analyzer.tokenize("AVX512-F")
+    val tokens = analyzer().tokenize("AVX512-F")
     assertEquals(1, tokens.size)
     assertEquals("AVX512-F", tokens[0].surface())
   }
+
+  @Test
+  fun maxLength6() {
+    val tokenizer = analyzer { _, cfg -> cfg.add("maxLength", 6) }
+    val tokens = tokenizer.tokenize("六三四XAG-2FFASD東京")
+    assertEquals(5, tokens.size)
+    assertEquals("XAG", tokens[1].surface())
+    assertEquals("-", tokens[2].surface())
+    assertEquals("2FFASD", tokens[3].surface())
+  }
+
+  @Test
+  fun veryLongAlreadyPresentWord() {
+    val tokens = analyzer { _, cfg -> cfg.add("maxLength", 500) }.tokenize("0123456789".repeat(30))
+    assertEquals(1, tokens.size)
+    assertEquals("数詞", tokens[0].partOfSpeech()[1])
+  }
 }
diff --git a/src/test/resources/dict/lex.csv b/src/test/resources/dict/lex.csv
index 6b8fb50..c3888d4 100644
--- a/src/test/resources/dict/lex.csv
+++ b/src/test/resources/dict/lex.csv
@@ -34,6 +34,6 @@
 六三四,6,6,0,六三四,名詞,固有名詞,地名,一般,*,*,ムサシ,六三四,*,A,*,*,*,*
 いく,4,4,5105,いく,動詞,非自立可能,*,*,五段-カ行,終止形-一般,イク,行く,*,A,*,*,*,*
 いっ,5,5,5122,いっ,動詞,非自立可能,*,*,五段-カ行,連用形-促音便,イッ,行く,34,A,*,*,*,*
-012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,9,9,2478,012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,名詞,数詞,*,*,*,*,ゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウ,012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,*,A,*,*,*,*
+012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,9,9,-9000,012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,名詞,数詞,*,*,*,*,ゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウゼロイチニサンヨンゴロクナナハチキュウ,012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789,*,A,*,*,*,*
 特a,8,8,2914,特a,名詞,普通名詞,一般,*,*,*,トクエー,特a,*,A,*,*,*,*
 な。な,8,8,2914,な。な,名詞,普通名詞,一般,*,*,*,ナナ,な。な,*,A,*,*,*,*
\ No newline at end of file
