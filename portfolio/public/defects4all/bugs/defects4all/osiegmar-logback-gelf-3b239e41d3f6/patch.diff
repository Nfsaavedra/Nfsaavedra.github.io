diff --git a/build.gradle b/build.gradle
index b6f0ca5..29291fe 100644
--- a/build.gradle
+++ b/build.gradle
@@ -8,7 +8,7 @@ plugins {
 
 group = "de.siegmar"
 archivesBaseName = "logback-gelf"
-version = "2.1.2"
+version = "2.2.0-SNAPSHOT"
 
 sourceCompatibility = 1.7
 
diff --git a/src/main/java/de/siegmar/logbackgelf/GelfEncoder.java b/src/main/java/de/siegmar/logbackgelf/GelfEncoder.java
index 0fde215..29e784b 100644
--- a/src/main/java/de/siegmar/logbackgelf/GelfEncoder.java
+++ b/src/main/java/de/siegmar/logbackgelf/GelfEncoder.java
@@ -23,6 +23,7 @@ import java.net.UnknownHostException;
 import java.nio.charset.StandardCharsets;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.Map;
 import java.util.Objects;
 import java.util.regex.Pattern;
@@ -358,7 +359,7 @@ public class GelfEncoder extends EncoderBase<ILoggingEvent> {
         if (includeMarker) {
             final Marker marker = event.getMarker();
             if (marker != null) {
-                additionalFields.put("marker", marker.getName());
+                additionalFields.put("marker", buildMarkerStr(marker));
             }
         }
 
@@ -381,6 +382,21 @@ public class GelfEncoder extends EncoderBase<ILoggingEvent> {
         return additionalFields;
     }
 
+    private static String buildMarkerStr(final Marker marker) {
+        if (!marker.hasReferences()) {
+            return marker.getName();
+        }
+
+        final StringBuilder sb = new StringBuilder(marker.getName());
+
+        final Iterator<Marker> it = marker.iterator();
+        do {
+            sb.append(", ").append(it.next().getName());
+        } while (it.hasNext());
+
+        return sb.toString();
+    }
+
     private Map<String, Object> buildMdcData(final Map<String, String> mdcProperties) {
         if (mdcProperties == null || mdcProperties.isEmpty()) {
             return Collections.emptyMap();
