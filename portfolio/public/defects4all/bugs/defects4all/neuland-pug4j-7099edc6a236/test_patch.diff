diff --git a/src/test/java/de/neuland/pug4j/exceptions/PugExceptionTest.java b/src/test/java/de/neuland/pug4j/exceptions/PugExceptionTest.java
index b32fb8c..603fba0 100644
--- a/src/test/java/de/neuland/pug4j/exceptions/PugExceptionTest.java
+++ b/src/test/java/de/neuland/pug4j/exceptions/PugExceptionTest.java
@@ -25,7 +25,7 @@ public class PugExceptionTest {
 		String errorJade = TestFileHelper.getCompilerResourcePath("exceptions/error.jade");
 		String exceptionHtml = TestFileHelper.getCompilerResourcePath("exceptions/error.html");
 		try {
-			Pug4J.render(errorJade, new HashMap<String, Object>());
+			final String render = Pug4J.render(errorJade, new HashMap<String, Object>());
 			fail();
 		} catch (PugException e) {
 			assertTrue(e.getMessage().startsWith("unable to evaluate [non.existing.query()]"));
diff --git a/src/test/java/de/neuland/pug4j/expression/JexlExpressionHandlerTest.java b/src/test/java/de/neuland/pug4j/expression/JexlExpressionHandlerTest.java
index 03e829d..1bc0b70 100644
--- a/src/test/java/de/neuland/pug4j/expression/JexlExpressionHandlerTest.java
+++ b/src/test/java/de/neuland/pug4j/expression/JexlExpressionHandlerTest.java
@@ -2,6 +2,8 @@ package de.neuland.pug4j.expression;
 
 import de.neuland.pug4j.compiler.IndentWriter;
 import de.neuland.pug4j.exceptions.ExpressionException;
+import de.neuland.pug4j.helper.beans.Level2TestBean;
+import de.neuland.pug4j.helper.beans.TestBean;
 import de.neuland.pug4j.model.PugModel;
 import de.neuland.pug4j.parser.node.BlockNode;
 import de.neuland.pug4j.template.PugTemplate;
@@ -158,5 +160,23 @@ public class JexlExpressionHandlerTest {
         Object what = pugModel.get("x");
     }
 
+    @Test
+    public void testAntishHashMapAccess() throws ExpressionException {
+        final HashMap<String, String> level1 = new HashMap<>();
+        level1.put("level2","value");
+        pugModel.put("level1", level1);
+        final String value = jexlExpressionHandler.evaluateStringExpression("level1.level2", pugModel);
+        assertEquals("value",value);
+    }
 
+    @Test
+    public void testAntishObjectAccess() throws ExpressionException {
+        TestBean b = new TestBean();
+        Level2TestBean b2 = new Level2TestBean();
+        b2.setName("value");
+        b.setLevel2(b2);
+        pugModel.put("level1", b);
+        final String value = jexlExpressionHandler.evaluateStringExpression("level1.level2.name", pugModel);
+        assertEquals("value",value);
+    }
 }
\ No newline at end of file
diff --git a/src/test/resources/compiler/exceptions/error.html b/src/test/resources/compiler/exceptions/error.html
index dd71b7d..2b69b9a 100644
--- a/src/test/resources/compiler/exceptions/error.html
+++ b/src/test/resources/compiler/exceptions/error.html
@@ -125,7 +125,7 @@
   </head>
   <body>
     <h1>Pug Compiler Exception</h1>
-    <p id="detail">unable to evaluate [non.existing.query()] - JexlException de.neuland.pug4j.expression.JexlExpressionHandler.evaluateExpression@87 JEXL error : attempting to call method on null</p>
+    <p id="detail">unable to evaluate [non.existing.query()] - JexlException de.neuland.pug4j.expression.JexlExpressionHandler.evaluateExpression@149 JEXL error : attempting to call method on null</p>
     <h2>In error.jade at line 9, column 0.</h2>
     <div>
       <pre><span class="line">5</span><span class="code">    body {</span></pre>
