diff --git a/src/test/java/com/whatsapp/api/examples/SendTemplateTextMessageExample.java b/src/test/java/com/whatsapp/api/examples/SendTemplateTextMessageExample.java
index 1595c61..6b2e1f4 100644
--- a/src/test/java/com/whatsapp/api/examples/SendTemplateTextMessageExample.java
+++ b/src/test/java/com/whatsapp/api/examples/SendTemplateTextMessageExample.java
@@ -34,5 +34,7 @@ public class SendTemplateTextMessageExample {
                 );
 
         whatsappBusinessCloudApi.sendMessage(PHONE_NUMBER_ID, message);
+
+
     }
 }
diff --git a/src/test/java/com/whatsapp/api/impl/WhatsappBusinessCloudApiTest.java b/src/test/java/com/whatsapp/api/impl/WhatsappBusinessCloudApiTest.java
index d24e59a..4fd7d84 100644
--- a/src/test/java/com/whatsapp/api/impl/WhatsappBusinessCloudApiTest.java
+++ b/src/test/java/com/whatsapp/api/impl/WhatsappBusinessCloudApiTest.java
@@ -5,12 +5,18 @@ import com.whatsapp.api.TestConstants;
 import com.whatsapp.api.WhatsappApiFactory;
 import com.whatsapp.api.domain.media.FileType;
 import com.whatsapp.api.domain.messages.AudioMessage;
+import com.whatsapp.api.domain.messages.Component;
 import com.whatsapp.api.domain.messages.DocumentMessage;
 import com.whatsapp.api.domain.messages.ImageMessage;
+import com.whatsapp.api.domain.messages.Language;
 import com.whatsapp.api.domain.messages.Message.MessageBuilder;
 import com.whatsapp.api.domain.messages.StickerMessage;
+import com.whatsapp.api.domain.messages.TemplateMessage;
 import com.whatsapp.api.domain.messages.TextMessage;
+import com.whatsapp.api.domain.messages.TextParameter;
 import com.whatsapp.api.domain.messages.VideoMessage;
+import com.whatsapp.api.domain.templates.type.ComponentType;
+import com.whatsapp.api.domain.templates.type.LanguageType;
 import com.whatsapp.api.exception.WhatsappApiException;
 import com.whatsapp.api.exception.utils.Formatter;
 import mockwebserver3.MockResponse;
@@ -91,6 +97,41 @@ public class WhatsappBusinessCloudApiTest extends MockServerUtilsTest {
     }
 
     @Test
+    void testSendTemplateTextMessage() throws IOException, URISyntaxException, InterruptedException {
+        mockWebServer.enqueue(new MockResponse().setResponseCode(200).setBody(fromResource("/message.json")));
+
+        WhatsappApiFactory factory = WhatsappApiFactory.newInstance(TestConstants.TOKEN);
+
+        WhatsappBusinessCloudApi whatsappBusinessCloudApi = factory.newBusinessCloudApi();
+
+
+        var templateMessage = new TemplateMessage()//
+                .setLanguage(new Language(LanguageType.PT_BR))//
+                .setName("number_confirmation")//
+                .addComponent(//
+                        new Component(ComponentType.BODY)//
+                                .addParameter(new TextParameter("18754269072")//
+                                ));
+
+        var message = MessageBuilder.builder()//
+                .setTo(TestConstants.PHONE_NUMBER_1)//
+                .buildTemplateMessage(templateMessage);
+
+        whatsappBusinessCloudApi.sendMessage(PHONE_NUMBER_ID, message);
+
+        RecordedRequest recordedRequest = mockWebServer.takeRequest();
+        Assertions.assertEquals("POST", recordedRequest.getMethod());
+        Assertions.assertEquals("/" + API_VERSION + "/" + PHONE_NUMBER_ID + "/messages", recordedRequest.getPath());
+
+        var expectedBody = """
+                {"messaging_product":"whatsapp","recipient_type":"individual","to":"%s","type":"template","template":{"components":[{"type":"BODY","parameters":[{"type":"text","text":"18754269072"}]}],"name":"number_confirmation","language":{"code":"pt_BR"}}}""";
+
+        Assertions.assertEquals(String.format(expectedBody, PHONE_NUMBER_1), recordedRequest.getBody().readUtf8());
+
+    }
+
+
+    @Test
     void testSendAudioMessage() throws IOException, URISyntaxException, InterruptedException {
         mockWebServer.enqueue(new MockResponse().setResponseCode(200).setBody(fromResource("/message.json")));
 
