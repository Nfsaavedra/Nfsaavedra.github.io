diff --git a/src/main/java/io/r2dbc/pool/OptionMapper.java b/src/main/java/io/r2dbc/pool/OptionMapper.java
index b2e5388..728a727 100644
--- a/src/main/java/io/r2dbc/pool/OptionMapper.java
+++ b/src/main/java/io/r2dbc/pool/OptionMapper.java
@@ -103,6 +103,22 @@ final class OptionMapper {
     }
 
     /**
+     * Parse an {@link Option} to {@link boolean}.
+     */
+    static boolean toBoolean(Object value) {
+
+        if (value instanceof Boolean) {
+            return ((Boolean) value);
+        }
+
+        if (value instanceof String) {
+            return Boolean.parseBoolean(value.toString());
+        }
+
+        throw new IllegalArgumentException(String.format("Cannot convert value %s into Boolean", value));
+    }
+
+    /**
      * Parse an ISO-8601 formatted {@link Option} to {@link Duration}.
      */
     static Duration toDuration(Object value) {
diff --git a/src/main/java/io/r2dbc/pool/PoolingConnectionFactoryProvider.java b/src/main/java/io/r2dbc/pool/PoolingConnectionFactoryProvider.java
index 1708805..abb4b7c 100644
--- a/src/main/java/io/r2dbc/pool/PoolingConnectionFactoryProvider.java
+++ b/src/main/java/io/r2dbc/pool/PoolingConnectionFactoryProvider.java
@@ -164,7 +164,7 @@ public class PoolingConnectionFactoryProvider implements ConnectionFactoryProvid
         mapper.from(MAX_IDLE_TIME).as(OptionMapper::toDuration).to(builder::maxIdleTime);
         mapper.from(MAX_CREATE_CONNECTION_TIME).as(OptionMapper::toDuration).to(builder::maxCreateConnectionTime);
         mapper.from(POOL_NAME).to(builder::name);
-        mapper.from(REGISTER_JMX).as(registerJmx -> registerJmx.equals("true")).to(builder::registerJmx);
+        mapper.from(REGISTER_JMX).as(OptionMapper::toBoolean).to(builder::registerJmx);
         mapper.from(VALIDATION_QUERY).to(builder::validationQuery);
         mapper.from(VALIDATION_DEPTH).as(validationDepth -> OptionMapper.toEnum(validationDepth, ValidationDepth.class)).to(builder::validationDepth);
 
