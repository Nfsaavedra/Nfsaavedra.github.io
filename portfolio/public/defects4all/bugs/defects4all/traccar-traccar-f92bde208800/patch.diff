diff --git a/src/main/java/org/traccar/protocol/AtrackProtocolDecoder.java b/src/main/java/org/traccar/protocol/AtrackProtocolDecoder.java
index 3406417..aa19e9e 100644
--- a/src/main/java/org/traccar/protocol/AtrackProtocolDecoder.java
+++ b/src/main/java/org/traccar/protocol/AtrackProtocolDecoder.java
@@ -429,6 +429,191 @@ public class AtrackProtocolDecoder extends BaseProtocolDecoder {
                 case "MP":
                     buf.readUnsignedByte(); // manifold absolute pressure
                     break;
+                case "EO":
+                    position.set(Position.KEY_ODOMETER, UnitsConverter.metersFromMiles(buf.readUnsignedInt()));
+                    break;
+                case "EH":
+                    position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 360000);
+                    break;
+                case "ZO1":
+                    buf.readUnsignedByte(); // brake stroke status
+                    break;
+                case "ZO2":
+                    buf.readUnsignedByte(); // warning indicator status
+                    break;
+                case "ZO3":
+                    buf.readUnsignedByte(); // abs control status
+                    break;
+                case "ZO4":
+                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 0.4);
+                    break;
+                case "ZO5":
+                    buf.readUnsignedByte(); // parking brake status
+                    break;
+                case "ZO6":
+                    position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);
+                    break;
+                case "ZO7":
+                    buf.readUnsignedByte(); // cruise control status
+                    break;
+                case "ZO8":
+                    buf.readUnsignedByte(); // accelector pedal position
+                    break;
+                case "ZO9":
+                    position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 0.5);
+                    break;
+                case "ZO10":
+                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.5);
+                    break;
+                case "ZO11":
+                    buf.readUnsignedByte(); // engine oil pressure
+                    break;
+                case "ZO12":
+                    buf.readUnsignedByte(); // boost pressure
+                    break;
+                case "ZO13":
+                    buf.readUnsignedByte(); // intake temperature
+                    break;
+                case "ZO14":
+                    position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte());
+                    break;
+                case "ZO15":
+                    buf.readUnsignedByte(); // brake application pressure
+                    break;
+                case "ZO16":
+                    buf.readUnsignedByte(); // brake primary pressure
+                    break;
+                case "ZO17":
+                    buf.readUnsignedByte(); // brake secondary pressure
+                    break;
+                case "ZH1":
+                    buf.readUnsignedShort(); // cargo weight
+                    break;
+                case "ZH2":
+                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 16.428 / 3600);
+                    break;
+                case "ZH3":
+                    position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.25);
+                    break;
+                case "ZL1":
+                    buf.readUnsignedInt(); // fuel used (natural gas)
+                    break;
+                case "ZL2":
+                    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 161);
+                    break;
+                case "ZL3":
+                    buf.readUnsignedInt(); // vehicle hours
+                    break;
+                case "ZL4":
+                    position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
+                    break;
+                case "ZS1":
+                    position.set(Position.KEY_VIN, readString(buf));
+                    break;
+                case "JO1":
+                    buf.readUnsignedByte(); // pedals
+                    break;
+                case "JO2":
+                    buf.readUnsignedByte(); // power takeoff device
+                    break;
+                case "JO3":
+                    buf.readUnsignedByte(); // accelector pedal position
+                    break;
+                case "JO4":
+                    position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte());
+                    break;
+                case "JO5":
+                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);
+                    break;
+                case "JO6":
+                    buf.readUnsignedByte(); // fms vehicle interface
+                    break;
+                case "JO7":
+                    buf.readUnsignedByte(); // driver 2
+                    break;
+                case "JO8":
+                    buf.readUnsignedByte(); // driver 1
+                    break;
+                case "JO9":
+                    buf.readUnsignedByte(); // drivers
+                    break;
+                case "JO10":
+                    buf.readUnsignedByte(); // system information
+                    break;
+                case "JO11":
+                    position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);
+                    break;
+                case "JO12":
+                    buf.readUnsignedByte(); // pto engaged
+                    break;
+                case "JH1":
+                    position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);
+                    break;
+                case "JH2":
+                    position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);
+                    break;
+                case "JH3":
+                case "JH4":
+                case "JH5":
+                case "JH6":
+                case "JH7":
+                    int index = Integer.parseInt(key.substring(2)) - 2;
+                    position.set("axleWeight" + index, buf.readUnsignedShort() * 0.5);
+                    break;
+                case "JH8":
+                    position.set(Position.KEY_ODOMETER_SERVICE, buf.readUnsignedShort() * 5);
+                    break;
+                case "JH9":
+                    buf.readUnsignedShort(); // tachograph speed
+                    break;
+                case "JH10":
+                    buf.readUnsignedShort(); // ambient air temperature
+                    break;
+                case "JH11":
+                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.05);
+                    break;
+                case "JH12":
+                    buf.readUnsignedShort(); // fuel economy
+                    break;
+                case "JL1":
+                    position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.5);
+                    break;
+                case "JL2":
+                    position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
+                    break;
+                case "JL3":
+                    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);
+                    break;
+                case "JL4":
+                    position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.001);
+                    break;
+                case "JS1":
+                    position.set(Position.KEY_VIN, readString(buf));
+                    break;
+                case "JS2":
+                    readString(buf); // fms version supported
+                    break;
+                case "JS3":
+                    position.set("driver1", readString(buf));
+                    break;
+                case "JS4":
+                    position.set("driver2", readString(buf));
+                    break;
+                case "JN1":
+                    buf.readUnsignedInt(); // cruise control distance
+                    break;
+                case "JN2":
+                    buf.readUnsignedInt(); // excessive idling time
+                    break;
+                case "JN3":
+                    buf.readUnsignedInt(); // excessive idling fuel
+                    break;
+                case "JN4":
+                    buf.readUnsignedInt(); // pto time
+                    break;
+                case "JN5":
+                    buf.readUnsignedInt(); // pto fuel
+                    break;
                 default:
                     break;
             }
