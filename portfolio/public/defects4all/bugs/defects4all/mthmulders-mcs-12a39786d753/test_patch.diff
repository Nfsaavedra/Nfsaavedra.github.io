diff --git a/src/test/java/it/mulders/mcs/search/SearchCommandHandlerTest.java b/src/test/java/it/mulders/mcs/search/SearchCommandHandlerTest.java
index b73ad75..278eb9c 100644
--- a/src/test/java/it/mulders/mcs/search/SearchCommandHandlerTest.java
+++ b/src/test/java/it/mulders/mcs/search/SearchCommandHandlerTest.java
@@ -9,6 +9,8 @@ import org.junit.jupiter.api.DisplayNameGenerator;
 import org.junit.jupiter.api.Nested;
 import org.junit.jupiter.api.Test;
 
+import javax.net.ssl.SSLHandshakeException;
+
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.eq;
 import static org.mockito.Mockito.mock;
@@ -35,6 +37,9 @@ class SearchCommandHandlerTest implements WithAssertions {
     private final SearchClient searchClient = new SearchClient() {
         @Override
         public Result<SearchResponse> search(final SearchQuery query) {
+            if (query.toSolrQuery().contains("tls-error")) {
+                return new Result.Failure<>(new SSLHandshakeException("PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target"));
+            }
             if (query instanceof WildcardSearchQuery) {
                 return new Result.Success<>(new SearchResponse(null, wildcardResponse));
             } else if (query instanceof CoordinateQuery cq && cq.version().isBlank()) {
@@ -55,6 +60,12 @@ class SearchCommandHandlerTest implements WithAssertions {
             handler.search(SearchQuery.search("plexus-utils").build());
             verify(outputPrinter).print(any(WildcardSearchQuery.class), eq(wildcardResponse), any());
         }
+
+        @Test
+        void should_propagate_tls_exception_to_runtime_exception() {
+            assertThatThrownBy(() -> handler.search(SearchQuery.search("tls-error").build()))
+                    .isInstanceOf(RuntimeException.class);
+        }
     }
 
     @Nested
@@ -77,5 +88,11 @@ class SearchCommandHandlerTest implements WithAssertions {
             handler.search(SearchQuery.search("org.codehaus.plexus:plexus-utils:3.4.1").build());
             verify(outputPrinter).print(any(CoordinateQuery.class), eq(threePartCoordinateResponse), any());
         }
+
+        @Test
+        void should_propagate_tls_exception_to_runtime_exception() {
+            assertThatThrownBy(() -> handler.search(SearchQuery.search("org.codehaus.plexus:tls-error:3.4.1").build()))
+                    .isInstanceOf(RuntimeException.class);
+        }
     }
 }
\ No newline at end of file
