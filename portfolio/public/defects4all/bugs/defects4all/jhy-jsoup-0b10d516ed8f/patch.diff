diff --git a/src/main/java/org/jsoup/helper/W3CDom.java b/src/main/java/org/jsoup/helper/W3CDom.java
index 29296b1..eb25841 100644
--- a/src/main/java/org/jsoup/helper/W3CDom.java
+++ b/src/main/java/org/jsoup/helper/W3CDom.java
@@ -287,7 +287,8 @@ public class W3CDom {
             nodeList = (NodeList) expression.evaluate(contextNode, XPathConstants.NODESET); // love the strong typing here /s
             Validate.notNull(nodeList);
         } catch (XPathExpressionException | XPathFactoryConfigurationException e) {
-            throw new Selector.SelectorParseException("Could not evaluate XPath query [%s]: %s", xpath, e.getMessage());
+            throw new Selector.SelectorParseException(
+                e, "Could not evaluate XPath query [%s]: %s", xpath, e.getMessage());
         }
         return nodeList;
     }
diff --git a/src/main/java/org/jsoup/select/Selector.java b/src/main/java/org/jsoup/select/Selector.java
index 71d0bc2..5396be3 100644
--- a/src/main/java/org/jsoup/select/Selector.java
+++ b/src/main/java/org/jsoup/select/Selector.java
@@ -170,8 +170,12 @@ public class Selector {
             super(msg);
         }
 
-        public SelectorParseException(String msg, Object... params) {
-            super(String.format(msg, params));
+        public SelectorParseException(String msg, Object... msgArgs) {
+            super(String.format(msg, msgArgs));
+        }
+
+        public SelectorParseException(Throwable cause, String msg, Object... msgArgs) {
+            super(String.format(msg, msgArgs), cause);
         }
     }
 }
