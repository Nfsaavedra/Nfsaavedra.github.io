diff --git a/README.md b/README.md
index a4a6971..871ca58 100644
--- a/README.md
+++ b/README.md
@@ -64,6 +64,12 @@ if (detection.isBot()) {
 
 Contrary to the original PHP implementation, this project does not include any caching mechanism. Consider using an specialized tool for that purpose.
 
+## Contributing
+
+Please note that we use the fixture files directly from the original PHP project; if you want to contribute or fix a regex, please consider making a pull request on [that project](https://github.com/matomo-org/device-detector/pull/new/master), so that all derivative projects -including this one- can benefit from it.
+
+On the other hand, contributions of java code are very welcome.
+
 ## Tests
 
 This project uses the YAML fixture files of the original PHP version. To run the tests, execute `mvn test` from the project's root directory.
@@ -72,15 +78,15 @@ This project uses the YAML fixture files of the original PHP version. To run the
 
 The lists below are auto generated and updated from time to time. Some of them might not be complete.
 
-*Last update: 2020/04/29*
+*Last update: 2020/06/05*
 
 ### List of detected operating systems:
 
-AIX, Android, AmigaOS, Apple TV, Arch Linux, BackTrack, Bada, BeOS, BlackBerry OS, BlackBerry Tablet OS, Brew, CentOS, Chrome OS, CyanogenMod, Debian, DragonFly, Fedora, Firefox OS, Fire OS, FreeBSD, Gentoo, Google TV, HP-UX, Haiku OS, IRIX, Inferno, KaiOS, Knoppix, Kubuntu, GNU/Linux, Lubuntu, VectorLinux, Mac, Maemo, Mandriva, MeeGo, MocorDroid, Mint, MildWild, MorphOS, NetBSD, MTK / Nucleus, Nintendo, Nintendo Mobile, OS/2, OSF1, OpenBSD, Ordissimo, PlayStation Portable, PlayStation, Red Hat, RISC OS, Remix OS, RazoDroiD, Sabayon, SUSE, Sailfish OS, Slackware, Solaris, Syllable, Symbian, Symbian OS, Symbian OS Series 40, Symbian OS Series 60, Symbian^3, ThreadX, Tizen, Ubuntu, WebTV, Windows, Windows CE, Windows IoT, Windows Mobile, Windows Phone, Windows RT, Xbox, Xubuntu, YunOs, iOS, palmOS, webOS
+AIX, Android, AmigaOS, Apple TV, Arch Linux, BackTrack, Bada, BeOS, BlackBerry OS, BlackBerry Tablet OS, Brew, CentOS, Chrome OS, CyanogenMod, Debian, DragonFly, Fedora, Firefox OS, Fire OS, FreeBSD, Gentoo, Google TV, HP-UX, Haiku OS, IRIX, Inferno, KaiOS, Knoppix, Kubuntu, GNU/Linux, Lubuntu, VectorLinux, Mac, Maemo, Mandriva, MeeGo, MocorDroid, Mint, MildWild, MorphOS, NetBSD, MTK / Nucleus, Nintendo, Nintendo Mobile, OS/2, OSF1, OpenBSD, Ordissimo, PlayStation Portable, PlayStation, Red Hat, RISC OS, Remix OS, RazoDroiD, Sabayon, SUSE, Sailfish OS, Slackware, Solaris, Syllable, Symbian, Symbian OS, Symbian OS Series 40, Symbian OS Series 60, Symbian^3, ThreadX, Tizen, TmaxOS, Ubuntu, WebTV, Windows, Windows CE, Windows IoT, Windows Mobile, Windows Phone, Windows RT, Xbox, Xubuntu, YunOs, iOS, palmOS, webOS
 
 ### List of detected browsers:
 
-115 Browser, 2345 Browser, 360 Phone Browser, 360 Browser, Avant Browser, ABrowse, ANT Fresco, ANTGalio, Aloha Browser, Aloha Browser Lite, Amaya, Amigo, Android Browser, AOL Desktop, AOL Shield, Arora, Arctic Fox, Amiga Voyager, Amiga Aweb, Atom, Atomic Web Browser, Avast Secure Browser, AVG Secure Browser, Beaker Browser, Beamrise, BlackBerry Browser, Baidu Browser, Baidu Spark, Basilisk, Beonex, BlackHawk, Bunjalloo, B-Line, Brave, BriskBard, BrowseX, Camino, CCleaner, Centaury, Coc Coc, Comodo Dragon, Coast, Charon, CM Browser, Chrome Frame, Headless Chrome, Chrome, Chrome Mobile iOS, Conkeror, Chrome Mobile, CoolNovo, CometBird, COS Browser, ChromePlus, Chromium, Cyberfox, Cheshire, Crusta, Cunaguaro, Chrome Webview, dbrowser, Deepnet Explorer, Delta Browser, Dolphin, Dorado, Dooble, Dillo, DuckDuckGo Privacy Browser, Ecosia, Epic, Elinks, Element Browser, Elements Browser, eZ Browser, EUI Browser, GNOME Web, Espial TV Browser, Falkon, Faux Browser, Firefox Mobile iOS, Firebird, Fluid, Fennec, Firefox, Firefox Focus, Firefox Reality, Firefox Rocket, Flock, Firefox Mobile, Fireweb, Fireweb Navigator, FreeU, Galeon, Google Earth, Hawk Turbo Browser, hola! Browser, HotJava, Huawei Browser, IBrowse, iCab, iCab Mobile, Iridium, Iron Mobile, IceCat, IceDragon, Isivioo, Iceweasel, Internet Explorer, IE Mobile, Iron, Jasmine, Jig Browser, Jio Browser, K.Browser, Kindle Browser, K-meleon, Konqueror, Kapiko, Kinza, Kiwi, Kylo, Kazehakase, Cheetah Browser, LieBaoFast, LG Browser, Light, Links, Lovense Browser, LuaKit, Lunascape, Lynx, mCent, MicroB, NCSA Mosaic, Meizu Browser, Mercury, Mobile Safari, Midori, Mobicip, MIUI Browser, Mobile Silk, Minimo, Mint Browser, Maxthon, Mypal, Nokia Browser, Nokia OSS Browser, Nokia Ovi Browser, Nox Browser, NetSurf, NetFront, NetFront Life, NetPositive, Netscape, NTENT Browser, Oculus Browser, Opera Mini iOS, Obigo, Odyssey Web Browser, Off By One, ONE Browser, Opera GX, Opera Neon, Opera Devices, Opera Mini, Opera Mobile, Opera, Opera Next, Opera Touch, Ordissimo, Oregano, Origin In-Game Overlay, Origyn Web Browser, Openwave Mobile Browser, OmniWeb, Otter Browser, Palm Blazer, Pale Moon, Oppo Browser, Palm Pre, Puffin, Palm WebPro, Palmscape, Phoenix, Polaris, Polarity, Microsoft Edge, QQ Browser Mini, QQ Browser, Qutebrowser, QupZilla, Qwant Mobile, QtWebEngine, Realme Browser, Rekonq, RockMelt, Samsung Browser, Sailfish Browser, SEMC-Browser, Sogou Explorer, Safari, SalamWeb, Shiira, SimpleBrowser, Skyfire, Seraphic Sraf, Sleipnir, Snowshoe, Sogou Mobile Browser, Splash, Sputnik Browser, Sunrise, SuperBird, Super Fast Browser, surf, START Internet Browser, Steam In-Game Overlay, Streamy, Swiftfox, Seznam Browser, t-online.de Browser, Tao Browser, TenFourFox, Tenta Browser, Tizen Browser, TweakStyle, TV Bro, UBrowser, UC Browser, UC Browser Mini, UC Browser Turbo, Uzbl, Vivaldi, vivo Browser, Vision Mobile Browser, VMware AirWatch, Wear Internet Browser, Web Explorer, WebPositive, Waterfox, Whale Browser, wOSBrowser, WeTab Browser, Yandex Browser, Yandex Browser Lite, Xiino
+115 Browser, 2345 Browser, 360 Phone Browser, 360 Browser, Avant Browser, ABrowse, ANT Fresco, ANTGalio, Aloha Browser, Aloha Browser Lite, Amaya, Amigo, Android Browser, AOL Desktop, AOL Shield, Arora, Arctic Fox, Amiga Voyager, Amiga Aweb, Atom, Atomic Web Browser, Avast Secure Browser, AVG Secure Browser, Beaker Browser, Beamrise, BlackBerry Browser, Baidu Browser, Baidu Spark, Basilisk, Beonex, BlackHawk, Bunjalloo, B-Line, Brave, BriskBard, BrowseX, Camino, CCleaner, Centaury, Coc Coc, Colibri, Comodo Dragon, Coast, Charon, CM Browser, Chrome Frame, Headless Chrome, Chrome, Chrome Mobile iOS, Conkeror, Chrome Mobile, CoolNovo, CometBird, COS Browser, ChromePlus, Chromium, Cyberfox, Cheshire, Crusta, Cunaguaro, Chrome Webview, dbrowser, Deepnet Explorer, Delta Browser, Dolphin, Dorado, Dooble, Dillo, DuckDuckGo Privacy Browser, Ecosia, Epic, Elinks, Element Browser, Elements Browser, eZ Browser, EUI Browser, GNOME Web, Espial TV Browser, Falkon, Faux Browser, Firefox Mobile iOS, Firebird, Fluid, Fennec, Firefox, Firefox Focus, Firefox Reality, Firefox Rocket, Flock, Firefox Mobile, Fireweb, Fireweb Navigator, FreeU, Galeon, Glass Browser, Google Earth, Hawk Turbo Browser, hola! Browser, HotJava, Huawei Browser, IBrowse, iCab, iCab Mobile, Iridium, Iron Mobile, IceCat, IceDragon, Isivioo, Iceweasel, Internet Explorer, IE Mobile, Iron, Jasmine, Jig Browser, Jig Browser Plus, Jio Browser, K.Browser, Kindle Browser, K-meleon, Konqueror, Kapiko, Kinza, Kiwi, Kylo, Kazehakase, Cheetah Browser, LieBaoFast, LG Browser, Light, Links, Lovense Browser, LuaKit, Lulumi, Lunascape, Lunascape Lite, Lynx, mCent, MicroB, NCSA Mosaic, Meizu Browser, Mercury, Mobile Safari, Midori, Mobicip, MIUI Browser, Mobile Silk, Minimo, Mint Browser, Maxthon, Mypal, Nokia Browser, Nokia OSS Browser, Nokia Ovi Browser, Nox Browser, NetSurf, NetFront, NetFront Life, NetPositive, Netscape, NTENT Browser, Oculus Browser, Opera Mini iOS, Obigo, Odyssey Web Browser, Off By One, OhHai Browser, ONE Browser, Opera GX, Opera Neon, Opera Devices, Opera Mini, Opera Mobile, Opera, Opera Next, Opera Touch, Ordissimo, Oregano, Origin In-Game Overlay, Origyn Web Browser, Openwave Mobile Browser, OmniWeb, Otter Browser, Palm Blazer, Pale Moon, Polypane, Oppo Browser, Palm Pre, Puffin, Palm WebPro, Palmscape, Phoenix, Polaris, Polarity, Microsoft Edge, QQ Browser Mini, QQ Browser, Qutebrowser, Quark, QupZilla, Qwant Mobile, QtWebEngine, Realme Browser, Rekonq, RockMelt, Samsung Browser, Sailfish Browser, SEMC-Browser, Sogou Explorer, Safari, Safe Exam Browser, SalamWeb, Shiira, SimpleBrowser, Sizzy, Skyfire, Seraphic Sraf, Sleipnir, Snowshoe, Sogou Mobile Browser, Splash, Sputnik Browser, Sunrise, SuperBird, Super Fast Browser, surf, START Internet Browser, Steam In-Game Overlay, Streamy, Swiftfox, Seznam Browser, t-online.de Browser, Tao Browser, TenFourFox, Tenta Browser, Tizen Browser, Tungsten, ToGate, TweakStyle, TV Bro, UBrowser, UC Browser, UC Browser Mini, UC Browser Turbo, Uzbl, Vivaldi, vivo Browser, Vision Mobile Browser, VMware AirWatch, Wear Internet Browser, Web Explorer, WebPositive, Waterfox, Whale Browser, wOSBrowser, WeTab Browser, Yahoo! Japan Browser, Yandex Browser, Yandex Browser Lite, Xiino, Xvast, Zvu
 
 ### List of detected browser engines:
 
@@ -96,7 +102,7 @@ Audacious, Banshee, Boxee, Clementine, Deezer, FlyCast, Foobar2000, Google Podca
 
 ### List of detected mobile apps:
 
-AndroidDownloadManager, AntennaPod, Apple News, Baidu Box App, BeyondPod, BingWebApp, bPod, CastBox, Castro, Castro 2, CrosswalkApp, DoggCatcher, douban App, Facebook, Facebook Messenger, FeedR, Flipboard App, Google Go, Google Play Newsstand, Google Plus, Google Search App, iCatcher, Instacast, Instagram App, Line, NewsArticle App, Overcast, Pinterest, Player FM, Pocket Casts, Podcast & Radio Addict, Podcast Republic, Podcasts, Podcat, Podcatcher Deluxe, Podkicker, RSSRadio, Sina Weibo, Snapchat, SogouSearch App, tieba, TopBuzz, Twitter, WeChat, WhatsApp, Yahoo! Japan, Yelp Mobile, YouTube, and mobile apps using AFNetworking
+AndroidDownloadManager, AntennaPod, Apple News, Baidu Box App, BeyondPod, BingWebApp, bPod, CastBox, Castro, Castro 2, CrosswalkApp, DoggCatcher, douban App, Facebook, Facebook Messenger, FeedR, Flipboard App, Google Go, Google Play Newsstand, Google Plus, Google Search App, iCatcher, Instacast, Instagram App, Line, NewsArticle App, Overcast, Pinterest, Player FM, Pocket Casts, Podcast & Radio Addict, Podcast Republic, Podcasts, Podcat, Podcatcher Deluxe, Podkicker, RSSRadio, Sina Weibo, Snapchat, SogouSearch App, tieba, TopBuzz, Twitter, WeChat, WhatsApp, Yahoo! Japan, Yelp Mobile, YouTube and mobile apps using AFNetworking
 
 ### List of detected PIMs (personal information manager):
 
@@ -108,7 +114,7 @@ Akregator, Apple PubSub, BashPodder, Breaker, Downcast, FeedDemon, Feeddler RSS 
 
 ### List of brands with detected devices:
 
-3Q, 4Good, Ace, Acer, Advan, Advance, AGM, Ainol, Airness, Airties, AIS, Aiwa, Akai, Alba, Alcatel, Aligator, AllCall, AllDocube, Allview, Allwinner, Altech UEC, altron, Amazon, AMGOO, Amoi, ANS, Apple, Archos, Arian Space, Ark, ArmPhone, Arnova, ARRIS, Ask, Assistant, Asus, Atom, Audiovox, AVH, Avvio, Axxion, Azumi Mobile, BangOlufsen, Barnes & Noble, BBK, BDF, Becker, Beeline, Beetel, BenQ, BenQ-Siemens, Bezkam, BGH, Bird, Bitel, Black Fox, Blackview, Blaupunkt, Blu, Bluboo, Bluegood, Bmobile, bogo, Boway, bq, Bravis, Brondi, Bush, CAGI, Capitel, Captiva, Carrefour, Casio, Casper, Cat, Celkon, Changhong, Cherry Mobile, China Mobile, Chuwi, Clarmin, CnM, Coby Kyros, Comio, Compal, Compaq, ComTrade Tesla, Concord, ConCorde, Condor, Coolpad, Cowon, CreNova, Crescent, Cricket, Crius Mea, Crosscall, Cube, CUBOT, CVTE, Cyrus, Daewoo, Danew, Datang, Datsun, Dbtel, Dell, Denver, Desay, DeWalt, DEXP, Dialog, Dicam, Digi, Digicel, Digiland, Digma, Divisat, DMM, DNS, DoCoMo, Doogee, Doov, Dopod, Doro, Dune HD, E-Boda, E-tel, Easypix, EBEST, Echo Mobiles, ECS, EE, EKO, Eks Mobility, Element, Elenberg, Elephone, Energizer, Energy Sistem, Ergo, Ericsson, Ericy, Essential, Essentielb, Eton, eTouch, Etuline, Eurostar, Evercoss, Evertek, Evolio, Evolveo, EvroMedia, Explay, Extrem, Ezio, Ezze, Fairphone, Famoco, Fengxiang, FiGO, FinePower, Fly, FNB, Fondi, FORME, Forstar, Foxconn, Freetel, Fujitsu, G-TiDE, Garmin-Asus, Gateway, Gemini, General Mobile, Geotel, Ghia, Ghong, Gigabyte, Gigaset, Ginzzu, Gionee, Globex, GOCLEVER, Goly, Gome, GoMobile, Google, Gradiente, Grape, Grundig, Hafury, Haier, HannSpree, Hasee, Hi-Level, Highscreen, Hisense, Hoffmann, Homtom, Hoozo, Hosin, HP, HTC, Huadoo, Huawei, Humax, Hyrican, Hyundai, i-Joy, i-mate, i-mobile, iBall, iBerry, IconBIT, iGet, iHunt, Ikea, iKoMo, iLA, IMO Mobile, Impression, iNew, Infinix, InFocus, Inkti, InnJoo, Innostream, Inoi, INQ, Insignia, Intek, Intex, Inverto, iOcean, iPro, Irbis, iRola, iRulu, iTel, iVA, iView, iZotron, JAY-Tech, JFone, Jiayu, Jolla, Just5, K-Touch, Kaan, Kaiomy, Kalley, Kanji, Karbonn, KATV1, Kazam, KDDI, Kempler & Strauss, Keneksi, Kiano, Kingsun, Kivi, Kocaso, Kodak, Kogan, Komu, Konka, Konrow, Koobee, KOPO, Koridy, KRONO, Krüger&Matz, KT-Tech, Kumai, Kyocera, LAIQ, Land Rover, Landvo, Lanix, Lark, Lava, LCT, Leagoo, Ledstar, LeEco, Lemhoov, Lenco, Lenovo, Leotec, Le Pan, Lephone, Lexand, Lexibook, LG, Lingwin, Loewe, Logicom, Lumus, Luna, LYF, M.T.T., M4tel, Majestic, Mann, Manta Multimedia, Masstel, Maxcom, Maxwest, Maze, Mecer, Mecool, Mediacom, MediaTek, Medion, MEEG, MegaFon, Meitu, Meizu, Memup, Metz, MEU, MicroMax, Microsoft, Mio, Miray, Mitsubishi, MIXC, MLLED, Mobicel, Mobiistar, Mobiola, Mobistel, Modecom, Mofut, Motorola, Movic, Mpman, MSI, MTC, MTN, MYFON, MyPhone, Myria, Mystery, MyWigo, National, Navon, NEC, Neffos, Netgear, NeuImage, Newgen, NewsMy, NEXBOX, Nexian, Nextbit, NextBook, NGM, NG Optics, Nikon, Nintendo, NOA, Noain, Nobby, Noblex, Nokia, Nomi, Nous, NUU Mobile, Nuvo, Nvidia, NYX Mobile, O+, O2, Obi, Odys, Onda, OnePlus, OPPO, Opsson, Orange, Ordissimo, Ouki, Oukitel, OUYA, Overmax, Oysters, Palm, Panacom, Panasonic, Pantech, PCBOX, PCD, PCD Argentina, PEAQ, Pentagram, Phicomm, Philips, phoneOne, Pioneer, Pixus, Ployer, Plum, Point of View, Polaroid, PolyPad, Polytron, Pomp, Positivo, PPTV, Prestigio, Primepad, Proline, ProScan, Protruly, PULID, Q-Touch, Qilive, QMobile, Qtek, Quantum, Quechua, Qumo, R-TV, Ramos, Razer, RCA Tablets, Readboy, Rikomagic, RIM, Rinno, Ritmix, Ritzviva, Riviera, Roadrover, Rokit, Roku, Rombica, Ross&Moor, Rover, RoverPad, RT Project, RugGear, Runbo, Ryte, Safaricom, Sagem, Samsung, Sanei, Santin, Sanyo, Savio, Sega, Selevision, Selfix, Sencor, Sendo, Senseit, Senwa, SFR, Sharp, Shift Phones, Shuttle, Siemens, Sigma, Silent Circle, Simbans, Sky, Skyworth, Smart, Smartfren, Smartisan, Softbank, Sonim, Sony, Sony Ericsson, Soyes, Spectrum, Spice, Star, Starway, STF Mobile, STK, Stonex, Storex, Sumvision, SunVan, Sunvell, SuperSonic, Supra, SWISSMOBILITY, Symphony, Syrox, T-Mobile, TB Touch, TCL, TechniSat, TechnoTrend, TechPad, Teclast, Tecno Mobile, Telefunken, Telego, Telenor, Telit, Tesco, Tesla, teXet, ThL, Thomson, TIANYU, Timovi, TiPhone, Tolino, Tooky, Top House, Toplux, Toshiba, Touchmate, TrekStor, Trevi, True, Tunisie Telecom, Turbo, Turbo-X, TVC, U.S. Cellular, Ugoos, Uhans, Uhappy, Ulefone, Umax, UMIDIGI, Unihertz, Unimax, Uniscope, Unknown, Unnecto, Unonu, Unowhy, UTOK, UTStarcom, Vastking, Venso, Verizon, Vernee, Vertex, Vertu, Verykool, Vesta, Vestel, VGO TEL, Videocon, Videoweb, ViewSonic, Vinga, Vinsoc, Vitelcom, Vivax, Vivo, Vizio, VK Mobile, Vodafone, Vonino, Vontar, Vorago, Vorke, Voto, Voxtel, Voyo, Vsun, Vulcan, Walton, Web TV, Weimei, WellcoM, Wexler, Wieppo, Wigor, Wiko, Wileyfox, Wink, Wolder, Wolfgang, Wonu, Woo, Woxter, X-TIGI, X-View, Xiaolajiao, Xiaomi, Xion, Xolo, Xoro, Yandex, Yarvik, Yes, Yezz, Yota, Ytone, Yu, Yuandao, Yusun, Yxtel, Zeemi, Zen, Zenek, Zfiner, Zidoo, Zonda, Zopo, ZTE, Zuum, Zync, ZYQ, öwn
+3Q, 4Good, Ace, Acer, Advan, Advance, AGM, Ainol, Airness, Airties, AIS, Aiwa, Akai, Alba, Alcatel, Aligator, AllCall, AllDocube, Allview, Allwinner, Altech UEC, altron, Amazon, AMGOO, Amoi, ANS, Apple, Archos, Arian Space, Ark, ArmPhone, Arnova, ARRIS, Ask, Assistant, Asus, Atom, Audiovox, AVH, Avvio, Axxion, Azumi Mobile, BangOlufsen, Barnes & Noble, BBK, BDF, Becker, Beeline, Beetel, BenQ, BenQ-Siemens, Bezkam, BGH, Bird, Bitel, Bitmore, Black Fox, Blackview, Blaupunkt, Blu, Bluboo, Bluegood, Bmobile, bogo, Boway, bq, Bravis, Brondi, Bush, CAGI, Capitel, Captiva, Carrefour, Casio, Casper, Cat, Celkon, Changhong, Cherry Mobile, China Mobile, Chuwi, Clarmin, CnM, Coby Kyros, Comio, Compal, Compaq, ComTrade Tesla, Concord, ConCorde, Condor, Coolpad, Cowon, CreNova, Crescent, Cricket, Crius Mea, Crosscall, Cube, CUBOT, CVTE, Cyrus, Daewoo, Danew, Datang, Datawind, Datsun, Dbtel, Dell, Denver, Desay, DeWalt, DEXP, Dialog, Dicam, Digi, Digicel, Digiland, Digma, Divisat, DMM, DNS, DoCoMo, Doogee, Doov, Dopod, Doro, Droxio, Dune HD, E-Boda, E-tel, Easypix, EBEST, Echo Mobiles, ECS, EE, EKO, Eks Mobility, Element, Elenberg, Elephone, Energizer, Energy Sistem, Ergo, Ericsson, Ericy, Essential, Essentielb, Eton, eTouch, Etuline, Eurostar, Evercoss, Evertek, Evolio, Evolveo, EvroMedia, Explay, Extrem, Ezio, Ezze, Fairphone, Famoco, Fengxiang, FiGO, FinePower, Fly, FNB, Fondi, FORME, Forstar, Foxconn, Freetel, Fujitsu, G-TiDE, Garmin-Asus, Gateway, Gemini, General Mobile, Geotel, Ghia, Ghong, Gigabyte, Gigaset, Ginzzu, Gionee, Globex, GOCLEVER, Goly, Gome, GoMobile, Google, Goophone, Gradiente, Grape, Grundig, Hafury, Haier, HannSpree, Hasee, Hi-Level, Highscreen, Hisense, Hoffmann, Homtom, Hoozo, Hosin, HP, HTC, Huadoo, Huawei, Humax, Hyrican, Hyundai, i-Joy, i-mate, i-mobile, iBall, iBerry, IconBIT, iGet, iHunt, Ikea, iKoMo, iLA, IMO Mobile, Impression, iNew, Infinix, InFocus, Inkti, InnJoo, Innostream, Inoi, INQ, Insignia, Intek, Intex, Inverto, iOcean, iPro, Irbis, iRola, iRulu, iTel, iVA, iView, iZotron, JAY-Tech, JFone, Jiayu, Jolla, Just5, K-Touch, Kaan, Kaiomy, Kalley, Kanji, Karbonn, KATV1, Kazam, KDDI, Kempler & Strauss, Keneksi, Kiano, Kingsun, Kivi, Kocaso, Kodak, Kogan, Komu, Konka, Konrow, Koobee, KOPO, Koridy, KRONO, Krüger&Matz, KT-Tech, Kuliao, Kumai, Kyocera, LAIQ, Land Rover, Landvo, Lanix, Lark, Lava, LCT, Leagoo, Ledstar, LeEco, Lemhoov, Lenco, Lenovo, Leotec, Le Pan, Lephone, Lexand, Lexibook, LG, Lingwin, Loewe, Logicom, Lumus, Luna, LYF, M.T.T., M4tel, Majestic, Mann, Manta Multimedia, Masstel, Maxcom, Maxwest, Maze, Mecer, Mecool, Mediacom, MediaTek, Medion, MEEG, MegaFon, Meitu, Meizu, Memup, Metz, MEU, MicroMax, Microsoft, Mio, Miray, Mitsubishi, MIXC, MLLED, Mobicel, Mobiistar, Mobiola, Mobistel, Modecom, Mofut, Motorola, Movic, Mpman, MSI, MTC, MTN, MYFON, MyPhone, Myria, Mystery, MyWigo, National, Navon, NEC, Neffos, Netgear, NeuImage, Newgen, NewsMy, NEXBOX, Nexian, NEXON, Nextbit, NextBook, NGM, NG Optics, Nikon, Nintendo, NOA, Noain, Nobby, Noblex, Nokia, Nomi, Nous, NUU Mobile, Nuvo, Nvidia, NYX Mobile, O+, O2, Obi, Odys, Onda, OnePlus, ONN, OPPO, Opsson, Orange, Ordissimo, Ouki, Oukitel, OUYA, Overmax, Oysters, Palm, Panacom, Panasonic, Pantech, PCBOX, PCD, PCD Argentina, PEAQ, Pentagram, Phicomm, Philips, phoneOne, Pioneer, Pixus, Ployer, Plum, PocketBook, Point of View, Polaroid, PolyPad, Polytron, Pomp, Positivo, PPTV, Prestigio, Primepad, Proline, ProScan, Protruly, PULID, Q-Touch, Q.Bell, Qilive, QMobile, Qtek, Quantum, Quechua, Qumo, R-TV, Ramos, Razer, RCA Tablets, Readboy, Realme, Rikomagic, RIM, Rinno, Ritmix, Ritzviva, Riviera, Roadrover, Rokit, Roku, Rombica, Ross&Moor, Rover, RoverPad, RT Project, RugGear, Runbo, Ryte, Safaricom, Sagem, Samsung, Sanei, Santin, Sanyo, Savio, Sega, Selevision, Selfix, Sencor, Sendo, Senseit, Senwa, SFR, Sharp, Shift Phones, Shuttle, Siemens, Sigma, Silent Circle, Simbans, Sky, Skyworth, Smart, Smartfren, Smartisan, Softbank, Sonim, Sony, Sony Ericsson, Soyes, Spectrum, Spice, Star, Starway, STF Mobile, STK, Stonex, Storex, Sugar, Sumvision, SunVan, Sunvell, SuperSonic, Supra, SWISSMOBILITY, Symphony, Syrox, T-Mobile, TB Touch, TCL, TechniSat, TechnoTrend, TechPad, Teclast, Tecno Mobile, Telefunken, Telego, Telenor, Telit, Tesco, Tesla, teXet, ThL, Thomson, TIANYU, Timovi, TiPhone, Tolino, Tooky, Top House, Toplux, Toshiba, Touchmate, TrekStor, Trevi, True, Tunisie Telecom, Turbo, Turbo-X, TVC, U.S. Cellular, Ugoos, Uhans, Uhappy, Ulefone, Umax, UMIDIGI, Unihertz, Unimax, Uniscope, Unknown, Unnecto, Unonu, Unowhy, UTOK, UTStarcom, Vastking, Venso, Verizon, Vernee, Vertex, Vertu, Verykool, Vesta, Vestel, VGO TEL, Videocon, Videoweb, ViewSonic, Vinga, Vinsoc, Vitelcom, Vivax, Vivo, Vizio, VK Mobile, Vodafone, Vonino, Vontar, Vorago, Vorke, Voto, Voxtel, Voyo, Vsun, Vulcan, Walton, Web TV, Weimei, WellcoM, Wexler, Wieppo, Wigor, Wiko, Wileyfox, Wink, Wolder, Wolfgang, Wonu, Woo, Woxter, X-TIGI, X-View, Xiaolajiao, Xiaomi, Xion, Xolo, Xoro, Yandex, Yarvik, Yes, Yezz, Yota, Ytone, Yu, Yuandao, Yusun, Yxtel, Zeemi, Zen, Zenek, Zfiner, Zidoo, Zonda, Zopo, ZTE, Zuum, Zync, ZYQ, öwn
 
 ### List of detected bots:
 
diff --git a/src/main/resources/regexes/bots.yml b/src/main/resources/regexes/bots.yml
index a9866f4..4345123 100644
--- a/src/main/resources/regexes/bots.yml
+++ b/src/main/resources/regexes/bots.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
@@ -1723,9 +1723,9 @@
     name: 'HubPages'
     url: 'http://hubpages.com/'
 
-- regex: 'Pinterest/\d\.\d.*www\.pinterest\.com.*'
+- regex: 'Pinterest(bot)?/\d\.\d.*www\.pinterest\.com.*'
   name: 'Pinterest'
-  url: ''
+  url: 'http://www.pinterest.com/bot.html'
   category: 'Crawler'
   producer:
     name: 'Pinterest'
diff --git a/src/main/resources/regexes/client/browser_engine.yml b/src/main/resources/regexes/client/browser_engine.yml
index ba3f8c0..a4770de 100644
--- a/src/main/resources/regexes/client/browser_engine.yml
+++ b/src/main/resources/regexes/client/browser_engine.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/client/browsers.yml b/src/main/resources/regexes/client/browsers.yml
index aa815ef..8827be5 100644
--- a/src/main/resources/regexes/client/browsers.yml
+++ b/src/main/resources/regexes/client/browsers.yml
@@ -1,10 +1,69 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
+# Safe Exam Browser (https://safeexambrowser.org/)
+- regex: 'SEB/(?:(\d+[\.\d]+))?'
+  name: 'Safe Exam Browser'
+  version: '$1'
+
+# Colibri (https://colibri.opqr.co/)
+- regex: 'Colibri/(?:(\d+[\.\d]+))?'
+  name: 'Colibri'
+  version: '$1'
+
+# Xvast (https://www.xvast.com/)
+- regex: 'Xvast/(?:(\d+[\.\d]+))?'
+  name: 'Xvast'
+  version: '$1'
+
+# Tungsten (https://en.tungsten-start.net/)
+- regex: 'TungstenBrowser/(?:(\d+[\.\d]+))?'
+  name: 'Tungsten'
+  version: '$1'
+
+# Lulumi (https://github.com/LulumiProject/lulumi-browser)
+- regex: 'Lulumi-browser/(?:(\d+[\.\d]+))?'
+  name: 'Lulumi'
+  version: '$1'
+
+# Yahoo! Japan Browser (https://promo-ybrowser.yahoo.co.jp/)
+- regex: 'ybrowser/(?:(\d+[\.\d]+))?'
+  name: 'Yahoo! Japan Browser'
+  version: '$1'
+
+# Lunascape Lite (https://www.lunascape.tv/)
+- regex: 'iLunascapeLite/(?:(\d+[\.\d]+))?'
+  name: 'Lunascape Lite'
+  version: '$1'
+
+# Polypane (https://polypane.app/)
+- regex: 'Polypane/(?:(\d+[\.\d]+))?'
+  name: 'Polypane'
+  version: '$1'
+
+# OhHai Browser (https://ohhaibrowser.com/)
+- regex: 'OhHaiBrowser/(?:(\d+[\.\d]+))?'
+  name: 'OhHai Browser'
+  version: '$1'
+
+# Sizzy (https://sizzy.co/)
+- regex: 'Sizzy/(?:(\d+[\.\d]+))?'
+  name: 'Sizzy'
+  version: '$1'
+
+# Glass Browser (https://github.com/mitchas/glass-browser)
+- regex: 'GlassBrowser/(?:(\d+[\.\d]+))?'
+  name: 'Glass Browser'
+  version: '$1'
+
+# ToGate (https://tmaxanc.com/#!/product-introduce/ToGate)
+- regex: 'ToGate/(?:(\d+[\.\d]+))?'
+  name: 'ToGate'
+  version: '$1'
 
 # VMware AirWatch (https://www.air-watch.com/)
 - regex: 'AirWatch Browser v(?:(\d+[\.\d]+))?'
@@ -346,7 +405,7 @@
   version: '$1'
 
 # Avast Secure Browser | Avast SafeZone Browser (https://www.avast.com/)
-- regex: '(?:Avast|ASW)(?:/(\d+[\.\d]+))?'
+- regex: '(?:Avast|ASW|Safer)(?:/(\d+[\.\d]+))?'
   name: 'Avast Secure Browser'
   version: '$1'
 
@@ -475,6 +534,11 @@
     versions:
       3: 'WebKit'
 
+# Jig Browser Plus (https://jig.jp/)
+- regex: 'JigBrowserPlus/(?:(\d+[\.\d]+))?'
+  name: 'Jig Browser Plus'
+  version: '$1'
+
 #Jig Browser
 - regex: 'jig browser(?: web;|9i?)?(?:[/ ](\d+[\.\d]+))?'
   name: 'Jig Browser'
@@ -798,7 +862,7 @@
       4: '' # multiple (KHTML or WebKit)
 
 #Baidu Browser
-- regex: 'baidubrowser(?:[/ ](\d+[\.\d]*))?'
+- regex: '(?:baidubrowser|bdbrowser_i18n|bdbrowser)(?:[/ ](\d+[\.\d]*))?'
   name: 'Baidu Browser'
   version: '$1'
 - regex: 'FlyFlow(?:[/ ](\d+[\.\d]*))?'
@@ -1146,6 +1210,13 @@
   name: 'TV Bro'
   version: '$1'
 
+# Quark
+- regex: 'Chrome/.+ Quark(?:/(\d+[\.\d]+))?'
+  name: 'Quark'
+  version: '$1'
+  engine:
+    default: 'WebKit'
+
 # Chrome Webview
 - regex: 'Version/.* Chrome(?:/(\d+[\.\d]+))?'
   name: 'Chrome Webview'
@@ -1389,7 +1460,7 @@
       4: 'WebKit'
 
 #Lunascape
-- regex: 'Lunascape(?:[/ ](\d+[\.\d]+))?'
+- regex: 'i?Lunascape(?:[/ ](\d+[\.\d]+))?'
   name: 'Lunascape'
   version: '$1'
   engine:
@@ -1656,3 +1727,10 @@
 - regex: 'SimpleBrowser'
   name: 'SimpleBrowser'
   version: ''
+
+# Zvu
+- regex: 'Zvu(?:/(\d+[\.\d]+))?'
+  name: 'Zvu'
+  version: '$1'
+  engine:
+    default: 'Gecko'
\ No newline at end of file
diff --git a/src/main/resources/regexes/client/feed_readers.yml b/src/main/resources/regexes/client/feed_readers.yml
index 758cb36..96f02bb 100644
--- a/src/main/resources/regexes/client/feed_readers.yml
+++ b/src/main/resources/regexes/client/feed_readers.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/client/libraries.yml b/src/main/resources/regexes/client/libraries.yml
index 99f2fbb..0da288c 100644
--- a/src/main/resources/regexes/client/libraries.yml
+++ b/src/main/resources/regexes/client/libraries.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/client/mediaplayers.yml b/src/main/resources/regexes/client/mediaplayers.yml
index 11ab785..51e284b 100644
--- a/src/main/resources/regexes/client/mediaplayers.yml
+++ b/src/main/resources/regexes/client/mediaplayers.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/client/mobile_apps.yml b/src/main/resources/regexes/client/mobile_apps.yml
index a91e660..267d498 100644
--- a/src/main/resources/regexes/client/mobile_apps.yml
+++ b/src/main/resources/regexes/client/mobile_apps.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
@@ -211,7 +211,7 @@
   name: 'Baidu Box App'
   version: '$1'
 -
-  regex: 'Crosswalk(?!.*Streamy)/([\d\.]+)?'
+  regex: 'Crosswalk(?!.*(?:Streamy|QwantMobile))/([\d\.]+)?'
   name: 'CrosswalkApp'
   version: '$1'
 -
diff --git a/src/main/resources/regexes/client/pim.yml b/src/main/resources/regexes/client/pim.yml
index 408f2f4..7a16a55 100644
--- a/src/main/resources/regexes/client/pim.yml
+++ b/src/main/resources/regexes/client/pim.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/device/cameras.yml b/src/main/resources/regexes/device/cameras.yml
index 3d319c4..904423b 100644
--- a/src/main/resources/regexes/device/cameras.yml
+++ b/src/main/resources/regexes/device/cameras.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/device/car_browsers.yml b/src/main/resources/regexes/device/car_browsers.yml
index 24a1d7b..c5446b4 100644
--- a/src/main/resources/regexes/device/car_browsers.yml
+++ b/src/main/resources/regexes/device/car_browsers.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/device/consoles.yml b/src/main/resources/regexes/device/consoles.yml
index 2811e75..60047a3 100644
--- a/src/main/resources/regexes/device/consoles.yml
+++ b/src/main/resources/regexes/device/consoles.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/device/mobiles.yml b/src/main/resources/regexes/device/mobiles.yml
index 8cb5e45..a7e9636 100644
--- a/src/main/resources/regexes/device/mobiles.yml
+++ b/src/main/resources/regexes/device/mobiles.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
@@ -467,72 +467,75 @@ Apple:
     - regex: '(?:Apple-)?iPh(?:one)?1[C,_]2'
       model: 'iPhone 3G'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?2[C,_]1'
+    - regex: '(?:Apple-)?iPh(?:one)?2[C,_]1| 3GS\)$'
       model: 'iPhone 3GS'
       device: 'smartphone'
     - regex: '(?:Apple-)?iPh(?:one)?3[C,_][123]'
       model: 'iPhone 4'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi'
+    - regex: '(?:Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$'
       model: 'iPhone 4S'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?5[C,_][12]'
+    - regex: '(?:Apple-)?iPh(?:one)?5[C,_][12]| 5\)$'
       model: 'iPhone 5'
       device: 'smartphone'
     - regex: '(?:Apple-)?iPh(?:one)?5[C,_][34]'
       model: 'iPhone 5C'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?6[C,_][12]'
+    - regex: '(?:Apple-)?iPh(?:one)?6[C,_][12]| 5S\)$'
       model: 'iPhone 5S'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi'
+    - regex: '(?:Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$'
       model: 'iPhone 6 Plus'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?7[C,_]2'
+    - regex: '(?:Apple-)?iPh(?:one)?7[C,_]2| 6\)$'
       model: 'iPhone 6'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]2'
+    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]2| 6SPLUS\)$'
       model: 'iPhone 6s Plus'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]1|iPhone 6s'
+    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]1|iPhone 6s| 6S\)$'
       model: 'iPhone 6s'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]4'
+    - regex: '(?:Apple-)?iPh(?:one)?8[C,_]4| SE\)$'
       model: 'iPhone SE'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?9[C,_][13]'
+    - regex: '(?:Apple-)?iPh(?:one)?9[C,_][13]| 7\)$'
       model: 'iPhone 7'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?9[C,_][24]'
+    - regex: '(?:Apple-)?iPh(?:one)?9[C,_][24]| 7PLUS\)$'
       model: 'iPhone 7 Plus'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][14]'
+    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][14]| 8\)$'
       model: 'iPhone 8'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][25]'
+    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][25]| 8PLUS\)$'
       model: 'iPhone 8 Plus'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][36]|iPhone X'
+    - regex: '(?:Apple-)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$'
       model: 'iPhone X'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][2]'
+    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][2]| XS\)$'
       model: 'iPhone XS'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][46]'
+    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][46]| XSMAX\)$'
       model: 'iPhone XS Max'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][8]'
+    - regex: '(?:Apple-)?iPh(?:one)?11[C,_][8]| XR\)$'
       model: 'iPhone XR'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][1]'
+    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][1]| 11\)$'
       model: 'iPhone 11'
       device: 'smartphone'
-    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][3]'
+    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][3]| 11PRO\)$'
       model: 'iPhone 11 Pro'
       device: 'phablet'
-    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][5]'
+    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][5]| 11PROMAX\)$'
       model: 'iPhone 11 Pro Max'
       device: 'phablet'
+    - regex: '(?:Apple-)?iPh(?:one)?12[C,_][8]'
+      model: 'iPhone SE (2020)'
+      device: 'phablet'
 
     # specific tablet devices
     - regex: '(?:Apple-)?iPad1[C,_]1'
@@ -1313,7 +1316,7 @@ Alcatel:
 
 # Allview
 Allview:
-  regex: 'Allview|A4You|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[56789]_Lite|A5Smiley|A6_Duo|A10_Lite_2019|A10_Plus|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[13]_Viper|1_Viper_I|2_Viper_(?:E|I|S|X|X_plus|Xe))|X(?:[1234]_Soul_Xtreme|[12345]_Soul|3_Soul_Lite|[23456]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[234]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(H801|100[13]G|H1001_LTE)'
+  regex: 'Allview|A4You|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[56789]_Lite|A5Smiley|A6_Duo|A10_Lite_2019|A10_Plus|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[134]_Viper|1_Viper_I|2_Viper_(?:E|I|S|X|X_plus|Xe))|X(?:[1234]_Soul_Xtreme|[12345]_Soul|3_Soul_Lite|[23456]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[234]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(H801|100[13]G|H1001_LTE)'
   device: 'smartphone'
   models:
     - regex: 'A4You'
@@ -1380,7 +1383,7 @@ Allview:
       model: 'V$1 Viper I 4G'
     - regex: 'V1_Viper_I'
       model: 'V1 Viper I'
-    - regex: 'V([13])_Viper'
+    - regex: 'V([134])_Viper'
       model: 'V$1 Viper'
     - regex: 'V2_Viper_X_plus'
       model: 'V2 Viper X Plus'
@@ -2153,7 +2156,7 @@ Bluegood:
 
 # Blackview
 Blackview:
-  regex: 'Blackview|(BV([2456789]000|(5[589]|9[156])00|6800)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|(?<!Lenovo[_ ])A60(?:Pro)?\))'
+  regex: 'Blackview|(BV([2456789]000|(5[589]|9[1568])00|6800)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|(?<!Lenovo[_ ])A60(?:Pro)?\))'
   device: 'smartphone'
   models:
     - regex: 'A60Pro\)'
@@ -2170,7 +2173,7 @@ Blackview:
       model: 'BV9000 Pro F'
     - regex: '(BV([48]000|9[56]00|6800))Pro'
       model: '$1 Pro'
-    - regex: '(BV([2456789]000|(5[589]|9[15])00)(?:[ _](?:PRO))?)'
+    - regex: '(BV([2456789]000|(5[589]|9[1568])00)(?:[ _](?:PRO))?)'
       model: '$1'
     - regex: '(P10000(?:[ _](?:PRO))?)'
       model: '$1'
@@ -2294,11 +2297,15 @@ VGO TEL:
 
 # Vivo
 Vivo:
-  regex: '((?:VIV-|BBG-)?vivo)|V1730(D[AT]|GA)|V18(01A0|13B[AT]|18T|09[AT]|13[AT]|[13]8A|14A|24[B]?A|21A|36A)|V1731CA|V19[01]1A|V1932[AT]|V1923A|V1928A'
+  regex: '((?:VIV-|BBG-)?(?<!FBCR/)vivo(?!(?:Browser)))|V1730(D[AT]|GA)|V18(18CA|01A0|13B[AT]|18T|09[AT]|1[36][AT]|[13]8A|14A|24[B]?A|2[19][AT]|3[12][AT]|36A)|V1731CA|V1732A|V19[01]1A|V1932[AT]|V1916A|V1923A|V1928A|V1941A'
   device: 'smartphone'
   models:
     - regex: '(?:VIV-|BBG-)?vivo[ _]1601[);/ ]'
       model: 'V5'
+    - regex: 'V1831[AT]'
+      model: 'S1'
+    - regex: 'V1832[AT]'
+      model: 'S1 Pro'
     - regex: 'V1932[AT]'
       model: 'S5'
     - regex: 'V1801A0'
@@ -2313,6 +2320,8 @@ Vivo:
       model: 'Z5x'
     - regex: 'V1824[B]?A'
       model: 'iQOO'
+    - regex: 'V1916A'
+      model: 'iQOO Pro 5G'
     - regex: 'Vivo ONE'
       model: 'One'
     - regex: 'X9Plus'
@@ -2323,6 +2332,8 @@ Vivo:
       model: 'X23'
     - regex: 'V1818[AT]|vivo 181[45]'
       model: 'Y93'
+    - regex: 'V1818CA'
+      model: 'Y93s'
     - regex: 'V1813[AT]'
       model: 'Y97'
     - regex: 'V1901A'
@@ -2365,7 +2376,9 @@ Vivo:
       model: 'X21'
     - regex: 'V1814A'
       model: 'X21S'
-    - regex: 'V1838A'
+    - regex: 'V1816[AT]'
+      model: 'X23'
+    - regex: 'V18(38|29)[AT]'
       model: 'X27'
     - regex: 'V1836A'
       model: 'X27 Pro'
@@ -2383,20 +2396,24 @@ Vivo:
       model: 'Y95'
     - regex: 'vivo 180([38]|8i)'
       model: 'Y81'
+    - regex: 'V1732A'
+      model: 'Y81s'
+    - regex: 'vivo 1812'
+      model: 'Y81i'
     - regex: 'vivo 1818'
       model: 'V15 Pro'
     - regex: 'vivo 1902'
       model: 'Y17'
     - regex: 'vivo 1909'
       model: 'V17 Pro'
-    - regex: 'vivo 1812'
-      model: 'Y81i'
-    - regex: 'V1821A'
+    - regex: 'V1821[AT]'
       model: 'Nex Dual Display'
     - regex: 'V1923A'
       model: 'Nex 3'
     - regex: 'V1928A'
       model: 'U3X'
+    - regex: 'V1941A'
+      model: 'U3'
     - regex: '(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build'
       model: '$1'
     - regex: '(?:VIV-|BBG-)?vivo[ _]([^);/]+)[);/]+'
@@ -2511,8 +2528,14 @@ bq:
   models:
     - regex: 'BQ(ru)?-(5209L|5044)'
       model: 'Strike LTE'
+    - regex: 'BQ(ru)?-(6035L)'
+      model: 'Strike Power Max'
+    - regex: 'BQ(ru)?-(5535L)'
+      model: 'Strike Power Plus'
     - regex: 'BQ(S|ru)?-(5070|6040L)'
       model: 'Magic'
+    - regex: 'BQ(S|ru)?-(5730L)'
+      model: 'Magic C'
     - regex: 'BQ-9011(G)?'
       model: 'Vision'
       device: 'tablet'
@@ -2910,7 +2933,7 @@ Casio:
 
 # Casper
 Casper:
-  regex: 'CASPER_|VIA[- _](T7D|A3|F[12]|G4|M4|[LS]8|S7|P2|V8C|A1_Plus|A1|S10|S|T17_M|T17)[);/ ]'
+  regex: 'CASPER_|VIA[- _](T7D|A[34]|E3|F[123]|G4|M4|[LS]8|S7|P2|V8C|A1_Plus|A1|S10|S|T17_M|T17)[);/ ]'
   device: 'smartphone'
   models:
     - regex: 'CASPER_VIA_(G1|E1|[AE]2|M[123]|V[35689]|V10)[);/ ]'
@@ -2920,7 +2943,7 @@ Casper:
     - regex: 'VIA[- _](T7D|S10|[LS]8|S7|T17_M|T17)[);/ ]'
       model: 'VIA $1'
       device: 'tablet'
-    - regex: 'VIA_(A3|F[12]|G4|M4|P2|S|V8C|A1_Plus|A1)'
+    - regex: 'VIA[_ ](A[34]|E3|F[123]|G4|M4|P2|S|V8C|A1_Plus|A1)'
       model: 'VIA $1'
 
 # Cat (Caterpillar, Catphones)
@@ -3324,7 +3347,7 @@ Cube:
 
 # CUBOT
 CUBOT:
-  regex: 'CUBOT|RAINBOW 2'
+  regex: 'CUBOT|RAINBOW 2|KING_KONG_3|KINGKONG_MINI'
   device: 'smartphone'
   models:
     - regex: 'CHEETAH 2'
@@ -3333,6 +3356,10 @@ CUBOT:
       model: 'Rainbow 2'
     - regex: 'DINOSAUR'
       model: 'Dinosaur'
+    - regex: 'KINGKONG_MINI'
+      model: 'King Kong Mini'
+    - regex: 'KING_KONG_3'
+      model: 'King Kong 3'
     - regex: 'KING KONG'
       model: 'King Kong'
     - regex: 'CUBOT_MANITO'
@@ -3509,7 +3536,7 @@ Dicam:
 
 # Digi
 Digi:
-  regex: 'Digi[ _]([^);/]+)[);/ ]'
+  regex: '(?<!FBCR/)Digi[ _]([^);/]+)[);/ ]'
   device: 'smartphone'
   model: '$1'
 
@@ -3534,7 +3561,7 @@ Digiland:
 
 # Digma
 Digma:
-  regex: 'Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI 1902 3G|CITI Z530 3G|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _]C[ST](500[67]PG|8209MG|8139ML)|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx A400 3G LT4001PG|Linx C500 3G LT5001PG|Linx PS474S|LS504[01]PL|LT40(47|54)MG|LS405[01]MG|LS5053ML|LT5048MG|LT5052ML|HT5035PG|HT4039PG|LT4049PG|NS6902QL|NS9797MG|TT1004PG|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)'
+  regex: 'Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI Octa 80|CITI 1902 3G|CITI Z530 3G|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _]C[ST](500[67]PG|8209MG|8139ML)|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx A400 3G LT4001PG|Linx C500 3G LT5001PG|Linx PS474S|LS504[01]PL|LT40(47|54)MG|LS405[01]MG|LS5053ML|LT5048MG|LT5052ML|HT5035PG|HT4039PG|LT4049PG|NS6902QL|NS9797MG|TT1004PG|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)'
   device: 'smartphone'
   models:
     - regex: 'HIT HT707[10]MG'
@@ -3602,7 +3629,7 @@ Digma:
       device: 'tablet'
     - regex: '(CITI Z530 3G)'
       model: '$1'
-    - regex: '(CITI_8527_4G)'
+    - regex: '(CITI_8527_4G|CITI Octa 80)'
       model: '$1'
       device: 'tablet'
     - regex: '(CITI (?:[A-Z0-9]+) 3G) C[ST](500[67]PG|8209MG)'
@@ -4341,7 +4368,7 @@ Sony:
 
 # Ergo
 Ergo:
-  regex: 'ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|V551 Aura|V540_Level|V570_BIG_BEN)'
+  regex: 'ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|V551[ _]Aura|V540_Level|V570_BIG_BEN)'
   device: 'smartphone'
   models:
     - regex: 'B502 Basic'
@@ -4350,7 +4377,7 @@ Ergo:
       model: 'V550 Vision'
     - regex: 'B504[_ ]Unit'
       model: 'B504 Unit'
-    - regex: 'V551 Aura'
+    - regex: 'V551[ _]Aura'
       model: 'V551 Aura'
     - regex: 'V540_Level'
       model: 'V540 Level'
@@ -4913,7 +4940,7 @@ Goly:
 
 # Google
 Google:
-  regex: 'Nexus|GoogleTV|Glass|CrKey[^a-z0-9]|Pixel(?: Build|\))|Pixel (?:XL|C|[2-4]|[2-4] XL)|Google 2XL'
+  regex: 'Nexus|GoogleTV|Glass(?<!Browser)|CrKey[^a-z0-9]|Pixel(?: Build|\))|Pixel (?:XL|C|[2-4]|[2-4] XL)|Google 2XL'
   device: 'smartphone'
   models:
     - regex: 'Glass'
@@ -5129,7 +5156,7 @@ Hoozo:
 
 # Huawei
 Huawei:
-  regex: '(HW-)?(?:Huawei|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH|BAH2|BG2|BGO|BKK|BKL|BLA|BLL|BLN|BND|BTV|CAG|CAM|CAN|CAZ|CHC|CHE[12]?|CHM|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))[);/ ])|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-A21[Lw]|T1-701u|G7-L01|HW-01K|JNY-(LX1|AL10)|OXF-AN10|TAS-A[LN]00|WLZ-AL10|NIC-LX1A'
+  regex: '(HW-)?(?:Huawei|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[23]?|BG2|BGO|BKK|BKL|BLA|BLL|BLN|BND|BTV|CAG|CAM|CAN|CAZ|CHC|CHE[12]?|CHM|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))[);/ ])|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21[Lw]|A23L|701u|823L)|G7-L01|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-A[LN]00|WLZ-(AL10|AN00)|NIC-LX1A|MRX-(AL09|W09)|CDY-([AT]N00|AN90)|GLK-[AT]L00|JER-AN10|ELS-AN00|AKA-AL10|MON-(W|AL)19|BMH-AN10|AQM-AL[01]0|MOA-AL00|NTS-AL00|ART-AL00x'
   device: 'smartphone'
   models:
     - regex: 'ARS-([AT]L00|L22)[);/ ]'
@@ -5140,12 +5167,14 @@ Huawei:
       model: 'Enjoy 5S'
     - regex: 'DIG-(?:TL10|AL00)'
       model: 'Enjoy 6S'
-    - regex: 'NCE-AL[10]0'
+    - regex: 'NCE-(AL[10]0|TL10)'
       model: 'Enjoy 6'
     - regex: 'SLA-(?:AL00|TL10)'
       model: 'Enjoy 7'              # Nova Lite (2017)
     - regex: 'DUA-[TA]L00'
       model: 'Honor Play 7'
+    - regex: 'MOA-AL00'
+      model: 'Honor Play 9A'
     - regex: 'FIG-(?:AL[10]0|TL10)'
       model: 'Enjoy 7S'
     - regex: 'LDN-(?:AL[12]0|TL20)'
@@ -5208,12 +5237,24 @@ Huawei:
       model: 'Honor 20S'
     - regex: 'YAL-(L41|AL10)[);/ ]'
       model: 'Honor 20 Pro'
+    - regex: 'BMH-AN10[);/ ]'
+      model: 'Honor 30'
+    - regex: 'CDY-AN90[);/ ]'
+      model: 'Honor 30S'
     - regex: 'VOG-AL00[);/ ]'
       model: 'Honor P30 Pro'
     - regex: 'CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00'
       model: 'Honor 4X'
+    - regex: 'AQM-AL10'
+      model: 'Honor 4T Pro'
+    - regex: 'AQM-AL00'
+      model: 'Enjoy 10S'
+    - regex: 'ART-AL00x'
+      model: 'Enjoy 10'
     - regex: 'CHM-[CUT]L00[HM]?'
       model: 'Honor Play 4C'
+    - regex: 'AKA-AL10'
+      model: 'Honor Play 4T'
     - regex: 'ASK-AL00x'
       model: 'Honor Play 3'
     - regex: 'JDN-(?:AL00|W09)'
@@ -5228,7 +5269,7 @@ Huawei:
       model: 'Honor V8'
     - regex: 'DUK-AL20'
       model: 'Honor V9'
-    - regex: 'JMM-AL[10]0'
+    - regex: 'JMM-[AT]L[01]0'
       model: 'Honor V9 Play'
     - regex: 'BKL-(?:AL00|AL20|AL30|L09|TL10)'
       model: 'Honor V10'
@@ -5238,6 +5279,8 @@ Huawei:
       model: 'Honor View 10'
     - regex: 'PCT-L29'
       model: 'Honor View 20'
+    - regex: 'OXF-AN00'
+      model: 'Honor View 30'
     - regex: 'OXF-AN10'
       model: 'Honor View 30 Pro'
     - regex: '(?:Honor_|HW-)?G621-TL00M?[);/ ]'
@@ -5252,7 +5295,7 @@ Huawei:
       model: 'Honor 5A'
     - regex: '(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[124]|UL00)(?:_TD)?[);/ ]'
       model: 'Honor 5X'
-    - regex: '(?:Honor_|HW-)?CUN-AL00[);/ ]'
+    - regex: '(?:Honor_|HW-)?CUN-[AT]L00[);/ ]'
       model: 'Honor 5 Play'
     - regex: '(?:Honor_|HW-)?CHM-U01(?:_TD)?[);/ ]'
       model: 'Honor 4C'
@@ -5296,7 +5339,7 @@ Huawei:
       model: 'Honor 8'
     - regex: 'JAT-L(29|X[13])'
       model: 'Honor 8A'
-    - regex: 'BKK-(?:AL[10]0|L21|L22|LX2)'
+    - regex: 'BKK-(?:AL[10]0|L21|L22|LX2|TL00)'
       model: 'Honor 8C'
     - regex: 'JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?'
       model: 'Honor 8X'
@@ -5332,6 +5375,8 @@ Huawei:
       model: 'Honor Holly 3'
     - regex: 'TRT-AL00'
       model: 'Honor Holly 4 Plus'
+    - regex: 'NTS-AL00'
+      model: 'Honor Magic'
     - regex: 'TNY-[AT]L00'
       model: 'Honor Magic 2'
     - regex: 'COR-(?:AL[01]0|L29|TL10)'
@@ -5374,8 +5419,14 @@ Huawei:
       model: 'Nova 4'
     - regex: 'WLZ-AL10'
       model: 'Nova 6'
+    - regex: 'WLZ-AN00'
+      model: 'Nova 6 5G'
     - regex: 'JNY-AL10'
       model: 'Nova 6 SE'
+    - regex: 'CDY-[AT]N00'
+      model: 'Nova 7 SE 5G'
+    - regex: 'JER-AN10'
+      model: 'Nova 7 Pro 5G'
     - regex: 'MAR-AL00'
       model: 'Nova 4e'
     - regex: 'WAS-AL00'
@@ -5418,13 +5469,19 @@ Huawei:
       model: 'P30 Lite Dual SIM'
     - regex: 'JNY-LX1'
       model: 'P40 Lite'
+    - regex: 'JNY-LX2'
+      model: 'Nova 7i'
+    - regex: 'ELS-AN00'
+      model: 'P40 Pro'
     - regex: 'FIG-L(?:A1|X[123])'
       model: 'P smart'
     - regex: 'STK-LX1'
       model: 'P smart Z'
-    - regex: 'POT-LX([13]|2J)'
+    - regex: 'POT-AL10[);/ ]'
+      model: 'Maimang 8'
+    - regex: 'POT-(LX(?:[13]|2J)|AL00)[);/ ]'
       model: 'P smart (2019)'
-    - regex: 'POT-[TA]L00a'
+    - regex: 'POT-[TA]L00a[);/ ]'
       model: '9S'
     - regex: 'CRO-(?:L[02]2|U00)'
       model: 'Y3 (2017)'
@@ -5444,7 +5501,7 @@ Huawei:
       model: 'Y5 Lite (2017)'
     - regex: 'CAG-L[02]3'
       model: 'Y5 Lite (2018)'
-    - regex: 'DRA-(?:LX2|AL00)'
+    - regex: 'DRA-(?:LX2|[AT]L00)'
       model: 'Y5 Prime (2018)'
     - regex: 'DRA-LX5'
       model: 'Y5 lite'
@@ -5488,7 +5545,7 @@ Huawei:
       model: 'Y9 (2019)'
     - regex: 'STK-(L2[12]|LX3)'
       model: 'Y9 Prime (2019)'
-    - regex: 'STK-AL00'
+    - regex: 'STK-[AT]L00'
       model: 'Enjoy 10 Plus'
     - regex: 'Y625-U03'
       model: 'Y625'
@@ -5520,7 +5577,7 @@ Huawei:
       model: 'Mate 20 Pro'
     - regex: 'SNE-(?:AL00|LX[0-3])'
       model: 'Mate 20 Lite'
-    - regex: 'EVR-(?:[TA]L00|L29|N29)'
+    - regex: 'EVR-(?:[TA]L00|L29|N29|AN00)'
       model: 'Mate 20 X'
     - regex: 'CRR-(?:L09|UL00)'
       model: 'Mate S'
@@ -5536,6 +5593,8 @@ Huawei:
       model: 'Mate 30 5G'
     - regex: 'SPN-AL00'
       model: 'Mate 30 Lite' # Nova 5i Pro
+    - regex: 'GLK-[AT]L00'
+      model: 'Nova 5i'
     - regex: 'LIO-(?:[TA]L00|L29|AN00)'
       model: 'Mate 30 Pro'
     - regex: 'Bucare Y330-U05'
@@ -5544,6 +5603,13 @@ Huawei:
       model: 'Y5 (2018)'
     - regex: 'ATH-UL0[16]'
       model: 'ShotX'
+
+    - regex: 'MON-(W|AL)19'
+      device: 'tablet'
+      model: 'MatePad C5 8'
+    - regex: 'MRX-(AL09|W09)'
+      device: 'tablet'
+      model: 'MatePad Pro'
     - regex: 'CMR-(?:AL[01]9|W09)'
       device: 'tablet'
       model: 'MediaPad M5 10.8'
@@ -5553,9 +5619,9 @@ Huawei:
     - regex: 'GEM-70[1-3]L'
       device: 'tablet'
       model: 'MediaPad X2'
-    - regex: 'JDN2-(:?L09|AL00)|BAH2-(?:L09|W19)'
+    - regex: 'JDN2-(:?L09|AL00)|BAH2-(?:AL10|L09|W19)'
       device: 'tablet'
-      model: 'MediaPad M5 lite'
+      model: 'MediaPad M5 Lite'
     - regex: 'SHT-(?:AL|W)09'
       device: 'tablet'
       model: 'MediaPad M5 8.4'
@@ -5571,12 +5637,15 @@ Huawei:
     - regex: 'BAH-W09|CPN-(?:L|W)09|CPN-AL00'
       device: 'tablet'
       model: 'MediaPad M3 Lite'
-    - regex: 'BAH-(?:L09|AL00)'
+    - regex: 'BAH-(?:L09|AL00)|BAH3-W09'
       device: 'tablet'
       model: 'MediaPad M3 Lite 10'
     - regex: 'BTV-DL09'
       device: 'tablet'
       model: 'MediaPad M3'
+    - regex: 'AGS2-AL00HN'
+      device: 'tablet'
+      model: 'Honor Tab 5'
     - regex: 'AGS2-(?:[LW]09|L03)'
       device: 'tablet'
       model: 'MediaPad T5 10'
@@ -5598,15 +5667,19 @@ Huawei:
     - regex: 'JDN-L01'
       device: 'tablet'
       model: 'MediaPad T2 8.0 Pro'
-    - regex: 'FDR-A01(?:L|w)'
+    - regex: 'FDR-(A01[LW]|A03L)'
       device: 'tablet'
       model: 'MediaPad T2 10.0 Pro'
-    - regex: 'T1-A21[Lw]'
+    - regex: 'T1-(A21[LW]|A23L)'
       device: 'tablet'
       model: 'MediaPad T1 10'
     - regex: 'T1-701u'
       device: 'tablet'
       model: 'MediaPad T1 7'
+    - regex: 'T1-823L'
+      device: 'tablet'
+      model: 'MediaPad T1 8'
+
 
       # smart watch regex
     - regex: 'LEO-BX9'
@@ -5878,9 +5951,9 @@ LYF:
 
 # Lumus
 Lumus:
-  regex: 'NEOSR620[;)/ ]'
+  regex: 'NEO(SR620|SC600)[;)/ ]'
   device: 'smartphone'
-  model: 'Neo SR620'
+  model: 'Neo $1'
 
 # M4tel
 M4tel:
@@ -6828,13 +6901,16 @@ LeEco:
 
 # Leotec
 Leotec:
-  regex: 'LESPH501[14]'
+  regex: 'LESPH501[14]|SUPERNOVA (Qi16|i3G96[X]?)'
   device: 'smartphone'
   models:
     - regex: 'LESPH5011'
       model: 'Argon e250'
     - regex: 'LESPH5014'
       model: 'Krypton K150'
+    - regex: 'SUPERNOVA (Qi16|i3G96[X]?)'
+      device: 'tablet'
+      model: 'Supernova $1'
 
 # Lephone
 Lephone:
@@ -6857,7 +6933,7 @@ Lenco:
 
 # lenovo
 Lenovo:
-  regex: '(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|TB2-X30L|TB3-710I|YT3-X50[ML]|ZUK[ -_]|K50a40|TB-(8504F|X304F|X704V|X704A)|A2107A-H|S6000[ ;)]|(Z2 Plus|VIBE Z2|Vibe K5 Plus|P2A42)[/;) ]'
+  regex: '(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|TB2-X30L|TB3-710I|YT3-X50[ML]|ZUK[ -_]|K50a40|TB-(8504F|X304F|X704V|X704A)|A2107A-H|S6000[ ;)]|(Z2 Plus|VIBE Z2|Vibe K5( Plus)?|P2A42)[/;) ]'
   device: 'smartphone'
   models:
     - regex: 'Lenovo ?G780'
@@ -6996,6 +7072,8 @@ Lenovo:
       model: 'K5 Vibe'
     - regex: 'A6020a46(?: Build|\))|Vibe K5 Plus'
       model: 'K5 Vibe Plus'
+    - regex: 'Vibe K5'
+      model: 'K5 Vibe'
     - regex: 'VIBE Z2[);/ ]'
       model: 'Vibe Z2'
     - regex: 'k33a48(?: Build|\))'
@@ -7225,6 +7303,8 @@ LG:
       model: 'X6'
     - regex: 'LM-X625N'
       model: 'X6 (2019)'
+    - regex: 'LGMS210'
+      model: 'Aristo'
     - regex: 'LM-X210[G]?'
       model: 'Aristo 2'
     - regex: 'LM-X220'
@@ -7299,6 +7379,8 @@ LG:
       model: 'Optimus 4X HD'
     - regex: '(?:LG-)?(H340n?|H324)'
       model: 'Leon'
+    - regex: '(?:LG-)?H342'
+      model: 'Leon 4G LTE'
     - regex: '(?:LG-)?H422'
       model: 'Spirit'
     - regex: '(?:LG)?C660'
@@ -7348,6 +7430,8 @@ LG:
       model: '$1'
     - regex: 'LGE(?: |-LG| LG-AX|-)([a-z0-9]+)'
       model: '$1'
+    - regex: 'FBDV/LG-([a-z0-9]+);FBSV'
+      model: '$1'
     - regex: 'LGE;([a-z0-9\-]+)'
       model: '$1'
     - regex: 'LG[ _\-](V90.*|Optimus[ _\-]Pad.*) Build'
@@ -7646,6 +7730,9 @@ Mediacom:
     - regex: 'M-MP5303G[);/ ]'
       model: 'SmartPad Mini Mobile'
       device: 'phablet'
+    - regex: 'M-PPxB400[);/ ]'
+      model: 'PhonePad Duo B400'
+      device: 'phablet'
     - regex: 'M-PPAG550[);/ ]'
       model: 'PhonePad Duo G550'
       device: 'phablet'
@@ -7787,7 +7874,7 @@ Meitu:
       model: 'M8s'
     - regex: 'Meitu2[ ;/)]'
       model: '2'
-    - regex: 'Meitu (Kiss|M4)[ ;/)]'
+    - regex: 'Meitu (Kiss|[MV]4)[ ;/)]'
       model: '$1'
 
 # Memup
@@ -7820,9 +7907,13 @@ Mecer:
 
 # mio
 Mio:
-  regex: 'MIO(?:/)?([a-z0-9]+)'
+  regex: 'MIO(?:/)?([a-z0-9]+)|MOBIX M6[);/ ]'
   device: 'smartphone'
-  model: '$1'
+  models:
+    - regex: 'MOBIX M6[);/ ]'
+      model: 'Mobix M6'
+    - regex: 'MIO(?:/)?([a-z0-9]+)'
+      model: '$1'
 
 # Miray
 Miray:
@@ -7990,11 +8081,13 @@ Mobistel:
 
 # Mecool
 Mecool:
-  regex: '(KM9PRO|BB2 PRO|KII PRO)[);/ ]'
+  regex: '(KM9PRO|BB2 PRO|KII PRO|KM9_TV_BOX)[);/ ]'
   device: 'tv'
   models:
     - regex: 'KM9PRO'
       model: 'KM9 Pro'
+    - regex: 'KM9_TV_BOX'
+      model: 'KM9 TV Box'
     - regex: 'BB2 PRO'
       model: 'BB2 Pro'
     - regex: 'KII PRO'
@@ -8552,7 +8645,7 @@ O+:
 
 # o2
 O2:
-  regex: 'Xda|O2[ \-]|COCOON'
+  regex: 'Xda|(?<!FBCR/)O2[ \-]|COCOON'
   device: 'smartphone'
   models:
     - regex: '(Xda[ _][a-z0-9_]+)'
@@ -8566,13 +8659,15 @@ O2:
 
 # Odys
 Odys:
-  regex: 'ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|FUSION'
+  regex: 'ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|FUSION|THANOS_10'
   device: 'tablet'
   models:
     - regex: 'XELIO[_ ]A10'
       model: 'Xelio A10'
     - regex: 'XELIOPHONETAB3'
       model: 'Xelio Phonetab 3'
+    - regex: 'THANOS_10'
+      model: 'Thanos 10'
     - regex: 'XELIO_NEXT_10_PLUS_3G'
       model: 'Xelio Next 10 Plus 3G'
     - regex: 'XELIO_PHONE_TAB7_3G'
@@ -8722,9 +8817,53 @@ OnePlus:
     - regex: '(?:du_)?ONEPLUS ?([^;/]+) Build'
       model: '$1'
 
+# Realme (sub brand Oppo)
+Realme:
+  regex: '(?:RMX(?:19(03|4[1235]|9[23]|2[157]|[01379]1)|2030|2051|18(0[1579]|11|3[13]|2[157]|[45]1|45))|(?:OPPO[ _]?)?CPH1861)[ ;/)]'
+  device: 'smartphone'
+  models:
+    - regex: '(?:OPPO[ _]?)?CPH1861[);/ ]'
+      model: '1'
+    - regex: 'RMX180[59]'
+      model: '2'
+    - regex: 'RMX180[17]'
+      model: '2 Pro'
+    - regex: 'RMX(1833|182[15])'
+      model: '3'
+    - regex: 'RMX1827'
+      model: '3i'
+    - regex: 'RMX1851'
+      model: '3 Pro'
+    - regex: 'RMX190[13]'
+      model: 'X'
+    - regex: 'RMX199[12]'
+      model: 'X2'
+    - regex: 'RMX1993'
+      model: 'X2 Dual'
+    - regex: 'RMX1931'
+      model: 'X2 Pro'
+    - regex: 'RMX1921'
+      model: 'XT'
+    - regex: 'RMX19(11|27)'
+      model: '5'
+    - regex: 'RMX1971'
+      model: '5 Pro'
+    - regex: 'RMX2030'
+      model: '5i'
+    - regex: 'RMX1925'
+      model: '5S'
+    - regex: 'RMX1811'
+      model: 'C1'
+    - regex: 'RMX194[1235]'
+      model: 'C2'
+    - regex: 'RMX1831'
+      model: 'U1'
+    - regex: 'RMX2051'
+      model: 'X50 5G'
+
 # oppo
 OPPO:
-  regex: '(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|(?:X90[07][0679]|U707T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?|N520[79]|N5117|A33f|A33fw|A37fw?|PAAM00|PAC[T|M]00|PBAM00)[);/ ]|R7kf|R7plusf|R7Plusm|A1601|CPH[0-9]{4}|PCAM10|PADM00|PBBT00|PBBM[03]0|RMX18(0[1579]|11|3[13]|2[15]|[45]1|45)|CPH19(69|79|23|1[179])|RMX(1827|194[1235]|199[23]|19[01379]1|192[157])|PC[CDG]M00|PB(AT00|BT30|CM[13]0|[FD]M00)|P[CB]E[MT]00|P(AFM00|ADT00|AHM00|CA[MT]00|CDM10|CHM[13]0|CKM[08]0|CLM10|DBM00|DCM00)'
+  regex: '(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|(?:X90[07][0679]|U707T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?|N520[79]|N5117|A33f|A33fw|A37fw?|PAAM00|PBCT10|PAAT00|PAC[T|M]00|PBAM00)[);/ ]|R7kf|R7plusf|R7Plusm|A1601|CPH[0-9]{4}|PCAM10|PADM00|PBBT00|PBBM[03]0|CPH19(69|79|23|1[179])|PC[CDG]M00|PB(AT00|BT30|CM[13]0|[FD]M00)|P[CB]E[MT]00|P(AFM00|ADT00|AHM00|CA[MT]00|CDM10|CHM[13]0|CKM[08]0|CLM10|DBM00|DCM00|CNM00)|PCPM00|PBFT00|PDHM00|PCRM00|PDKM00'
   device: 'smartphone'
   models:
     - regex: '(?:OPPO[ _]?)?U707T?[);/ ]'
@@ -8741,10 +8880,14 @@ OPPO:
       model: 'Reno'
     - regex: 'PCLM10'
       model: 'Reno Ace'
+    - regex: 'PDHM00'
+      model: 'Reno Ace 2'
     - regex: 'PCKM00'
       model: 'Reno 2'
     - regex: 'PDCM00'
       model: 'Reno 3 5G'
+    - regex: 'PCRM00'
+      model: 'Reno 3 Pro'
     - regex: 'PCKM80'
       model: 'Reno 2Z'
     - regex: 'CPH1921'
@@ -8781,6 +8924,8 @@ OPPO:
       model: 'R7 Plus F'
     - regex: '(?:OPPO[ _]?)?R7Plusm[);/ ]'
       model: 'R7 Plus'
+    - regex: '(?:OPPO[ _]?)?PAAT00[);/ ]'
+      model: 'R15 Pro'
     - regex: '(?:OPPO[ _]?)?R8111[);/ ]'
       model: 'Find Melody'
     - regex: '(?:OPPO[ _]?)?R8113[);/ ]'
@@ -8847,8 +8992,12 @@ OPPO:
       model: 'A9 (EN)'
     - regex: 'CPH1937|PCHM30'
       model: 'A9 (2020)'
+    - regex: 'PCPM00'
+      model: 'A91'
     - regex: 'PCHM10'
       model: 'A11'
+    - regex: 'PDKM00'
+      model: 'A93s'
     - regex: '(?:OPPO[ _]?)?CPH18(19|21)[);/ ]'
       model: 'F7'
     - regex: '(?:OPPO[ _]?)?CPH1823[);/ ]'
@@ -8865,16 +9014,10 @@ OPPO:
       model: 'AX5s'
     - regex: '(?:OPPO[ _]?)?CPH1859[);/ ]'
       model: 'F7'
-    - regex: '(?:OPPO[ _]?)?CPH1861[);/ ]'
-      model: 'RealMe 1'
-    - regex: '(?:OPPO[ _]?)?PBCM30[);/ ]'
+    - regex: '(?:OPPO[ _]?)?(PBC(?:M30|T10))[);/ ]'
       model: 'K1'
-    - regex: 'RMX1811'
-      model: 'RealMe C1'
-    - regex: 'RMX194[1235]'
-      model: 'RealMe C2'
-    - regex: 'RMX1831'
-      model: 'RealMe U1'
+    - regex: '(?:OPPO[ _]?)?(PCNM00)[);/ ]'
+      model: 'K5'
     - regex: '(?:OPPO[ _]?)?(?:CPH187[15]|PAFM00)[);/ ]'
       model: 'Find X'
     - regex: '(?:OPPO[ _]?)?(?:PAHM00)[);/ ]'
@@ -8887,7 +9030,7 @@ OPPO:
       model: 'F9'
     - regex: '(?:OPPO[ _]?)?CPH1893[);/ ]'
       model: 'R17 Neo'
-    - regex: '(?:OPPO[ _]?)?(?:CPH1901|PBFM00)[);/ ]'
+    - regex: '(?:OPPO[ _]?)?(?:CPH1901|PBF[TM]00)[);/ ]'
       model: 'A7'
     - regex: '(?:OPPO[ _]?)?(?:PDBM00)[);/ ]'
       model: 'A8'
@@ -8895,6 +9038,8 @@ OPPO:
       model: 'AX7'
     - regex: '(?:OPPO[ _]?)?A37f(w)?(?: Build|\))'
       model: 'A37f$1'
+    - regex: 'A37f'
+      model: 'A37f'
     - regex: '(?:OPPO[ _]?)?(CPH1837|PADM00)[);/ ]'
       model: 'A3'
     - regex: '(?:OPPO[ _]?)?PBAM00'
@@ -8907,32 +9052,6 @@ OPPO:
       model: 'R15'
     - regex: 'PBCM10[);/ ]'
       model: 'R15x'
-    - regex: 'RMX180[59]'
-      model: 'Realme 2'
-    - regex: 'RMX180[17]'
-      model: 'Realme 2 Pro'
-    - regex: 'RMX1833|RMX182[15]'
-      model: 'Realme 3'
-    - regex: 'RMX1827'
-      model: 'Realme 3i'
-    - regex: 'RMX1851'
-      model: 'Realme 3 Pro'
-    - regex: 'RMX1901'
-      model: 'Realme X'
-    - regex: 'RMX199[12]'
-      model: 'Realme X2'
-    - regex: 'RMX1993'
-      model: 'Realme X2 Dual'
-    - regex: 'RMX1931'
-      model: 'Realme X2 Pro'
-    - regex: 'RMX1921'
-      model: 'Realme XT'
-    - regex: 'RMX19(11|27)'
-      model: 'Realme 5'
-    - regex: 'RMX1971'
-      model: 'Realme 5 Pro'
-    - regex: 'RMX1925'
-      model: 'Realme 5S'
     - regex: '(PBBT00|PBBM00)[);/ ]'
       model: 'A7x'
     - regex: 'PCDM00[);/ ]'
@@ -8972,7 +9091,7 @@ Opsson:
 
 # orange
 Orange:
-  regex: 'SPV[ \-]?([a-z0-9]+)|Orange[ _-](?!Tahiti-LS\))([^/;]+)( Build|\))(?<!Tahiti-LS\))|SC/IHD92|FunTab ([^/;]+) Build'
+  regex: 'SPV[ \-]?([a-z0-9]+)|(?<!FBCR/)Orange[ _-](?!Tahiti-LS\))([^/;]+)( Build|\))(?<!Tahiti-LS\))|SC/IHD92|FunTab ([^/;]+) Build'
   device: 'smartphone'
   models:
     - regex: 'SC/IHD92'
@@ -9039,9 +9158,12 @@ Overmax:
 
 # Oysters
 Oysters:
-  regex: 'Oysters|T84ERI[ _]3G|T72HM(s_)?3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T84Ni[_ ][34]G'
+  regex: 'Oysters|T84ERI[ _]3G|T72HM(s_)?3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T84Ni[_ ][34]G|Pacific[ ]?800i'
   device: 'tablet'
   models:
+    - regex: 'Pacific[ ]?800i'
+      device: 'smartphone'
+      model: 'Pacific 800i'
     - regex: 'Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build'
       device: 'smartphone'
       model: '$1'
@@ -10373,7 +10495,7 @@ Smartfren:
 
 # Smartisan
 Smartisan:
-  regex: 'SM(?:70[15]|801|901|919)|OD10[35]|YQ60[1357][ /;\)]'
+  regex: '(SM(?:70[15]|801|901|919)|OD10[35]|YQ60[1357]|DE106)[ /;\)]'
   device: 'smartphone'
   models:
     - regex: 'SM70[15]'
@@ -10388,6 +10510,8 @@ Smartisan:
       model: 'U1'
     - regex: 'OD10[35]'
       model: 'Pro'
+    - regex: 'DE106'
+      model: 'R1'
 
 # STF Mobile
 STF Mobile:
@@ -11141,6 +11265,8 @@ Tecno Mobile:
       model: 'Phantom 6 Plus'
     - regex: 'Phantom6'
       model: 'Phantom 6'
+    - regex: 'TECNO-W3'
+      model: 'W3'
     - regex: 'TECNO[ _]ID6[);/ ]'
       model: 'Camon iClick 2'
     - regex: 'Tecno[ _]7C[);/ ]'
@@ -11305,7 +11431,7 @@ Telego:
 
 # Telenor
 Telenor:
-  regex: 'Telenor'
+  regex: '(?<!FBCR/)Telenor'
   device: 'smartphone'
   models:
     - regex: 'Telenor[ _]([^;/]+) Build'
@@ -11732,8 +11858,12 @@ Verykool:
   regex: 'verykool'
   device: 'smartphone'
   models:
+    - regex: 'verykoolS5004'
+      model: 'Lotus JR.'
     - regex: 'verykool[ _]?([^/;]+) Build'
       model: '$1'
+    - regex: 'verykool[ _]?([^/;]+);'
+      model: '$1'
 
 # Vestel
 Vestel:
@@ -11782,7 +11912,7 @@ Videocon:
 
 # Vodafone
 Vodafone:
-  regex: 'Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|VFD[ _][0-9]+[;/) ]|VFD320|VF6[89]5|VF-(696|1397|795|895N|1497)'
+  regex: '(?<!FBCR/)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|VFD[ _][0-9]+[;/) ]|VFD320|VF6[89]5|VF-(696|1397|795|895N|1497)'
   device: 'smartphone'
   models:
     - regex: 'VFD 100'
@@ -12031,7 +12161,7 @@ Wexler:
 
 # Wiko
 Wiko:
-  regex: '(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa(?!nna)|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 Go|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C800|K[346]00|P200)|WC300|W-(V720|V800|P[36]11|K510)-EEA|WIM Lite'
+  regex: '(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa(?!nna)|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 Go|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C800|K[346]00|P200)|WC300|W-(V720|V800|P[36]11|K420|K510)-(TVM|EEA|SUN|OPE)|WIM Lite|W-K360-TV'
   device: 'smartphone'
   models:
     - regex: '(?:Wiko-)?Cink([^/;]*) Build'
@@ -12116,6 +12246,8 @@ Wiko:
       model: 'Sunny 2 Plus'
     - regex: '(?:WIKO-)?Sunny2'
       model: 'Sunny 2'
+    - regex: 'W-K360-TV'
+      model: 'Sunny 4 Plus'
     - regex: '(?:WIKO-)?Sunny'
       model: 'Sunny'
     - regex: '(W_K600|Tommy3)'
@@ -12164,13 +12296,15 @@ Wiko:
       model: 'View 2'
     - regex: 'W_P200'
       model: 'View Max'
-    - regex: 'W-V720-EEA'
-      model: 'Y80'
-    - regex: 'W-V800-EEA'
+    - regex: 'W-V800-(TVM|EEA|OPE)'
       model: 'View 3 Lite'
-    - regex: 'W-K510-EEA'
+    - regex: 'W-K420-EEA'
+      model: 'Y50'
+    - regex: 'W-K510-(TVM|EEA|OPE|SUN)'
       model: 'Y60'
-    - regex: 'W-P311-EEA'
+    - regex: 'W-V720-(EEA|OPE)'
+      model: 'Y80'
+    - regex: 'W-P311-(EEA|OPE)'
       model: 'View 3'
     - regex: 'W-P611-EEA'
       model: 'View 3 Pro'
@@ -12270,7 +12404,7 @@ X-View:
 
 # Xiaomi
 Xiaomi:
-  regex: 'Xiaomi(?!/(?:Miui|Mint[ ])Browser)|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?)[);/ ]|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|MI_NOTE_Pro|POCOPHONE|SKR-[AH]0|SKW-[AH]0|POCO F1|DLT-[AH]0|MIBOX[34]([_ ]PRO)?|MiTV4[CSX]?|MiTV-MSSP1|AWM-A0'
+  regex: 'Xiaomi(?!/(?:Miui|Mint[ ])Browser)|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?)[);/ ]|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|MI_NOTE_Pro|POCOPHONE|(?:SHARK )?KLE-A0|SKR-[AH]0|SKW-[AH]0|POCO F1|DLT-[AH]0|MIBOX[34]([_ ]PRO)?|MiTV4[CSX]?|MiTV-(MSSP1|AXSO0)|AWM-A0'
   device: 'smartphone'
   models:
     # specific smartphone models
@@ -12282,6 +12416,8 @@ Xiaomi:
       model: 'Black Shark 2'
     - regex: 'DLT-[AH]0'
       model: 'Black Shark 2 Pro'
+    - regex: '(?:SHARK )?KLE-A0'
+      model: 'Black Shark 3'
     - regex: 'Xiaomi_2014501|2014501 Build'
       model: 'Hongmi 4G'
     - regex: 'Xiaomi_2014011|2014011 Build'
@@ -12296,6 +12432,8 @@ Xiaomi:
       model: 'Hongmi 2 4G'
     - regex: 'Mi 9 SE[);/ ]'
       model: 'MI 9 SE'
+    - regex: 'Mi9 Pro 5G[);/ ]'
+      model: 'MI 9 Pro 5G'
     - regex: 'MI 8 Lite[);/ ]'
       model: 'MI 8 Lite'
     - regex: 'MI 5s Plus[);/ ]'
@@ -12352,6 +12490,9 @@ Xiaomi:
     - regex: ' MiTV-MSSP1[);/ ]'
       model: 'MiTV 4S'
       device: 'tv'
+    - regex: ' MiTV-AXSO0[);/ ]'
+      model: 'MiTV 4A'
+      device: 'tv'
     - regex: '(MiTV)(4[CSX]|4)[);/ ]'
       model: '$1 $2'
       device: 'tv'
@@ -13960,7 +14101,7 @@ Luna:
 
 # Protruly
 Protruly:
-  regex: 'PROTRULY[ _](D[78])[);/ ]'
+  regex: 'PROTRULY[ _](D[78]|V10S)[);/ ]'
   device: 'smartphone'
   model: '$1'
 
@@ -14086,4 +14227,72 @@ Vorke:
 Wigor:
   regex: 'Wigor (V4)[);/ ]'
   device: 'smartphone'
+  model: '$1'
+
+# NEXON
+NEXON:
+   regex: 'NEXON (X[19])[);/ ]'
+   device: 'tv'
+   model: '$1'
+
+# ONN
+ONN:
+  regex: '(ONA19TB00[27])[);/ ]'
+  device: 'tablet'
+  model: '$1'
+
+# Q.Bell
+'Q.Bell':
+  regex: '(QPHONE_10.1)[);/ ]'
+  device: 'smartphone'
+  model: '$1'
+
+# Datawind
+Datawind:
+  regex: '(DW-PS3G5)[);/ ]'
+  device: 'smartphone'
+  model: 'Pocket Surfer 3G5'
+
+# Droxio
+Droxio:
+  regex: 'DROXIO (C40|B45)[);/ ]'
+  device: 'smartphone'
+  model: '$1'
+
+# Goophone
+Goophone:
+  regex: '(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP)[/]A[);/ ]'
+  device: 'smartphone'
+  models:
+    - regex: '(MG492CH|MGA92ZP)[/]A[);/ ]'
+      model: 'I6 Plus'
+    - regex: 'ML7[JK]2CH[/]A[);/ ]'
+      model: 'I6'
+    - regex: 'MN4A2ZP[/]A[);/ ]'
+      model: 'I7'
+    - regex: 'MN8J2ZP[/]A[);/ ]'
+      model: 'I7 Plus'
+
+# PocketBook
+PocketBook:
+  regex: 'PocketBook SURFpad 3 \(([\d]+).([\d]+)["]?\)[);/ ]'
+  device: 'tablet'
+  model: 'Surfpad 3 $1.$2"'
+
+# Bitmore
+Bitmore:
+  regex: '(Mobitab)(10)c-3G[);/ ]'
+  device: 'tablet'
+  model: '$1 $2C 3G'
+
+# Kuliao
+Kuliao:
+  regex: 'KULIAO (K10)[);/ ]'
+  device: 'smartphone'
+  model: '$1'
+
+# Sugar
+Sugar:
+  regex: 'SUGAR (C21|[YF]11|[YF]9|C6|Y7|Y15)[);/ ]'
+  device: 'smartphone'
   model: '$1'
\ No newline at end of file
diff --git a/src/main/resources/regexes/device/portable_media_player.yml b/src/main/resources/regexes/device/portable_media_player.yml
index 8f5b271..3972fe9 100644
--- a/src/main/resources/regexes/device/portable_media_player.yml
+++ b/src/main/resources/regexes/device/portable_media_player.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
diff --git a/src/main/resources/regexes/device/televisions.yml b/src/main/resources/regexes/device/televisions.yml
index f3eaa1e..941951a 100644
--- a/src/main/resources/regexes/device/televisions.yml
+++ b/src/main/resources/regexes/device/televisions.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 #
 #  ATTENTION: This file may only include tv user agents that contain 'HbbTV/([1-9]{1}(\.[0-9]{1}){1,2})'
diff --git a/src/main/resources/regexes/oss.yml b/src/main/resources/regexes/oss.yml
index 9bc9462..e53c3a0 100644
--- a/src/main/resources/regexes/oss.yml
+++ b/src/main/resources/regexes/oss.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
@@ -111,6 +111,10 @@
   name: 'Android'
   version: '$1'
 
+- regex: 'FB4A.*FBSV/(\d+[\.\d]*);'
+  name: 'Android'
+  version: '$1'
+
 - regex: 'BeyondPod|AntennaPod|Podkicker|DoggCatcher|Player FM|okhttp|Podcatcher Deluxe'
   name: 'Android'
   version: ''
@@ -151,6 +155,10 @@
   name: 'Ordissimo'
   version: ''
 
+- regex: 'TOS; Linux'
+  name: 'TmaxOS'
+  version: ''
+
 - regex: 'Maemo'
   name: 'Maemo'
   version: ''
@@ -417,6 +425,10 @@
   name: 'iOS'
   version: '$1'
 
+- regex: 'FBIOS.*FBSV/(\d+[\.\d]*);'
+  name: 'iOS'
+  version: '$1'
+
 - regex: '(?:Apple-)?(?:iPhone|iPad|iPod)(?:.*Mac OS X.*Version/(\d+\.\d+)|; Opera)?'
   name: 'iOS'
   version: '$1'
diff --git a/src/main/resources/regexes/vendorfragments.yml b/src/main/resources/regexes/vendorfragments.yml
index 2c55dcc..f18f995 100644
--- a/src/main/resources/regexes/vendorfragments.yml
+++ b/src/main/resources/regexes/vendorfragments.yml
@@ -1,7 +1,7 @@
 ###############
 # Device Detector - The Universal Device Detection library for parsing User Agents
 #
-# @link http://piwik.org
+# @link https://matomo.org
 # @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
 ###############
 
