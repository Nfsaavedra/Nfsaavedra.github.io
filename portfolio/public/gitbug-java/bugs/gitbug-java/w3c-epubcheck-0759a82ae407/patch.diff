diff --git a/src/main/java/com/adobe/epubcheck/opf/OPFChecker30.java b/src/main/java/com/adobe/epubcheck/opf/OPFChecker30.java
index 9fc2495..0338efa 100644
--- a/src/main/java/com/adobe/epubcheck/opf/OPFChecker30.java
+++ b/src/main/java/com/adobe/epubcheck/opf/OPFChecker30.java
@@ -565,7 +565,7 @@ public class OPFChecker30 extends OPFChecker
 
   public static boolean isBlessedAudioType(String type)
   {
-    return type.equals("audio/mpeg") || type.equals("audio/mp4") || type.equals("audio/opus");
+    return type.equals("audio/mpeg") || type.equals("audio/mp4") || type.matches("audio/ogg\\s*;\\s*codecs=opus");
   }
 
   public static boolean isVideoType(String type)
diff --git a/src/main/java/com/adobe/epubcheck/ops/OPSHandler30.java b/src/main/java/com/adobe/epubcheck/ops/OPSHandler30.java
index 290a042..7e48144 100644
--- a/src/main/java/com/adobe/epubcheck/ops/OPSHandler30.java
+++ b/src/main/java/com/adobe/epubcheck/ops/OPSHandler30.java
@@ -644,6 +644,14 @@ public class OPSHandler30 extends OPSHandler
       // remove any params from the given MIME type string
       mimetype = MIMEType.removeParams(mimetype);
 
+      // hack: remove the codecs parameter in the resource type for OPUS audio
+      // so that the equality check works
+      // TODO remove this when we implement proper MIME type parsing
+      if (resourceMimetype != null && resourceMimetype.matches("audio/ogg\\s*;\\s*codecs=opus"))
+      {
+        resourceMimetype = "audio/ogg";
+      }
+
       // report any MIME type mismatch as a warning
       if (resourceMimetype != null && !resourceMimetype.equals(mimetype))
       {
