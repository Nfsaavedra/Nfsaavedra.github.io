diff --git a/.github/workflows/workflow.yml b/.github/workflows/workflow.yml
index 120fcda..8e89975 100644
--- a/.github/workflows/workflow.yml
+++ b/.github/workflows/workflow.yml
@@ -11,55 +11,93 @@ on:
 #    - cron: '42 3 * * 0'
 
 jobs:
-  build_test_maybe_release:
+  build:
     strategy:
+      fail-fast: false
       matrix:
         php_version: ['8.1','8.0','7.4', '7.3','7.2']
         variant: ['apache','cli','fpm']
-    runs-on: ubuntu-latest
+#        builder: [ {arch: "amd64", os: "ubuntu-latest"}, {arch: "arm64", os: "macos-latest"}]
+        builder: [ {arch: "amd64", os: "ubuntu-latest"}, {arch: "arm64", os: "ubuntu-latest"}]
+    runs-on: ${{ matrix.builder.os }}
+#    runs-on: self-hosted
+    name: Build & test ${{ matrix.php_version }}-${{ matrix.variant }} (${{ matrix.builder.arch }})
     steps:
+      - name: Checkout
+        uses: actions/checkout@v3
+      - name: Set up Docker
+        # /!\ this action is marked as experimental
+        # It's required only for macos
+        if: ${{ matrix.builder.os == 'macos-latest' }}
+        uses: docker-practice/actions-setup-docker@master
       - name: Set up QEMU
-        uses: docker/setup-qemu-action@v1
+        uses: docker/setup-qemu-action@v2
       - name: Set up Docker Buildx
-        uses: docker/setup-buildx-action@v1
+        uses: docker/setup-buildx-action@v2
+      - name: Build
+        run: |
+          PHP_VERSION="${{ matrix.php_version }}"
+          TAG_PREFIX="rc${GITHUB_SHA::7}-" \
+          docker buildx bake \
+            --set "*.platform=linux/${{ matrix.builder.arch }}" \
+            --set "*.output=type=docker" \
+            --load \
+            php${PHP_VERSION//.}-${{ matrix.variant }}-all
+      - name: Display tags built
+        run: |
+          docker image ls --filter="reference=thecodingmachine/php"  --format "{{.CreatedAt}}\t{{.Size}}\t{{.Repository}}:{{.Tag}}"
+      - name: Test
+        run: |
+          TAG_PREFIX="rc${GITHUB_SHA::7}-" \
+          PHP_VERSION="${{ matrix.php_version }}" \
+          BRANCH="v4" \
+          VARIANT="${{ matrix.variant }}" \
+          PLATFORM="linux/${{ matrix.builder.arch }}" \
+          ./tests-suite/bash_unit -f tap ./tests-suite/*.sh
+
+  publish:
+    # push ~ schedule
+    # FIXME : re-enable after testing
+#    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
+    needs:
+      - build
+    runs-on: ubuntu-latest
+    name: Publish multi-arch to dockerhub
+    strategy:
+      fail-fast: false
+      matrix:
+        php_version: ['8.1','8.0','7.4', '7.3','7.2']
+        variant: ['apache','cli','fpm']
+    steps:
       - name: Checkout
-        uses: actions/checkout@v1
-#      - name: Build locally
-#        run: |
-#          PHP_VERSION="${{ matrix.php_version }}"
-#          docker buildx bake --load \
-#            --set "*.platform=linux/amd64" \
-#            php${PHP_VERSION//.}-slim-${{ matrix.variant }}
-#          docker buildx bake --load \
-#            --set "*.platform=linux/amd64" \
-#            php${PHP_VERSION//.}-${{ matrix.variant }}-all
-#          PHP_VERSION_MINOR=`docker run --rm thecodingmachine/php:${PHP_VERSION}-v4-slim-cli php -v | head -n1 | grep -P '\d+\.\d+\.\d+' -o | head -n1`
-#          echo "PHP_VERSION_MINOR=${PHP_VERSION_MINOR}" >> $GITHUB_ENV
-#          echo "PHP Version : ${PHP_VERSION_MINOR}" >> $GITHUB_STEP_SUMMARY
-#          docker images --filter=reference=thecodingmachine/php >> $GITHUB_STEP_SUMMARY
-#      - name: Test ${{ matrix.variant }}
-#        run:  |
-#          PHP_VERSION="${{ matrix.php_version }}" BRANCH=v4 VARIANT=${{ matrix.variant }} ./test-image.sh
-#          echo "${{ matrix.variant }} variant OK" >> $GITHUB_STEP_SUMMARY
+        uses: actions/checkout@v3
+      - name: Set up QEMU
+        uses: docker/setup-qemu-action@v2
+      - name: Set up Docker Buildx
+        uses: docker/setup-buildx-action@v2
       - name: Login to DockerHub
-        # Merge ~ push.
-        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
         uses: docker/login-action@v1
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}
-      - name: Build and push to repository
-        # Merge ~ push.
-        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
+      - name: Build and push ${{ matrix.php_version }}-${{ matrix.variant }} as multiarch (amd64 and arm64)
         run: |
           PHP_VERSION="${{ matrix.php_version }}"
+          
+          TAG_PREFIX="rc${GITHUB_SHA::7}-" \
           docker buildx bake \
             --set "*.platform=linux/amd64,linux/arm64" \
             --set "*.output=type=registry" \
             php${PHP_VERSION//.}-slim-${{ matrix.variant }}
-          PHP_PATCH_MINOR=`docker run --rm thecodingmachine/php:${PHP_VERSION}-v4-slim-cli php -v | head -n1 | grep -P '\d+\.\d+\.\d+' -o | head -n1` \
+          PHP_PATCH_MINOR=`docker run --rm thecodingmachine/php:rc-${GITHUB_SHA::7}-${{ matrix.php_version }}-v4-slim-${{ matrix.variant }} php -v | head -n1 | grep -P '\d+\.\d+\.\d+' -o | head -n1`
+          PHP_VERSION="${{ matrix.php_version }}"
+          
+          TAG_PREFIX="rc${GITHUB_SHA::7}-" \
+          PHP_PATCH_MINOR="${PHP_VERSION_MINOR}" \
           docker buildx bake \
             --set "*.platform=linux/amd64,linux/arm64" \
             --set "*.output=type=registry" \
             php${PHP_VERSION//.}-${{ matrix.variant }}-all
-          docker images --filter=reference=thecodingmachine/php >> $GITHUB_STEP_SUMMARY
+      - name: Display tags built
+        run: |
+          docker image ls --filter="reference=thecodingmachine/php"  --format "{{.CreatedAt}}\t{{.Size}}\t{{.Repository}}:{{.Tag}}"
