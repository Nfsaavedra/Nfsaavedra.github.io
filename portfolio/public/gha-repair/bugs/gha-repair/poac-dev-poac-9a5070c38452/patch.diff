diff --git a/.github/disabled_workflows/appveyor-disabled.yml b/.github/disabled_workflows/appveyor-disabled.yml
new file mode 100644
index 0000000..91d6d4b
--- /dev/null
+++ b/.github/disabled_workflows/appveyor-disabled.yml
@@ -0,0 +1,153 @@
+version: "#{build}"
+
+cache:
+  - '%BOOST_BUILT_PATH%'
+  - 'C:\Libraries\libgit2-%LIBGIT2_VERSION%'
+  - 'C:\Libraries\toml11-%TOML11_VERSION%'
+  - '%CYG_ROOT%\var\cache\setup'
+
+branches:
+  only:
+    - master
+
+configuration:
+  - Debug
+  - Release
+
+build:
+  verbosity: minimal
+
+environment:
+  global:
+    CYG_PACKAGES: gcc-g++,git,make,cmake,libssl-devel,libboost-devel,libgit2-devel
+    LIBGIT2_VERSION: 0.28.2
+    TOML11_VERSION: 3.1.0
+
+#  matrix: # FIXME: Temporarily unsupported cygwin and mingw because of std::filesystem
+#    - COMPILER: cygwin-gcc
+#      CYG_ROOT: 'C:\cygwin'
+#      CYG_SETUP: setup-x86.exe
+#    - COMPILER: cygwin-gcc
+#      CYG_ROOT: 'C:\cygwin64'
+#      CYG_SETUP: setup-x86_64.exe
+#
+#    - COMPILER: gcc  # gcc-7.3.0-posix
+#      GENERATOR: "MinGW Makefiles"
+#      CXX_PATH: 'C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin'
+#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
+#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
+#    - COMPILER: gcc  # gcc-8.1.0-posix
+#      GENERATOR: "MinGW Makefiles"
+#      CXX_PATH: 'C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin'
+#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
+#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
+
+#    - COMPILER: msvc
+#      GENERATOR: "Visual Studio 15 2017"
+#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
+#      PLATFORM: x86
+#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
+#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
+#    - COMPILER: msvc
+#      GENERATOR: "Visual Studio 15 2017"
+#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
+#      PLATFORM: x64
+#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
+#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
+
+install:
+  - if %COMPILER% == cygwin-gcc (
+      %CYG_ROOT%\%CYG_SETUP% --quiet-mode ^
+        --no-shortcuts --upgrade-also ^
+        --local-package-dir "%CYG_ROOT%\var\cache\setup" ^
+        --packages %CYG_PACKAGES% &&
+      %CYG_ROOT%\bin\bash -lc
+        "git clone -q -b v%TOML11_VERSION% https://github.com/ToruNiina/toml11.git &&
+        mkdir toml11/build && cd toml11/build &&
+        cmake .. -Dtoml11_BUILD_TEST=OFF &&
+        make install"
+    )
+
+  # Build boost
+  - ps: |
+      $env:config_lower = $env:configuration.ToLower()
+      if ($env:generator -eq "MinGW Makefiles") {
+        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
+        if ($env:cxx_path -ne "") {
+          $env:path += ";$env:cxx_path"
+        }
+      }
+  - if not %COMPILER% == cygwin-gcc if not exist %BOOST_BUILT_PATH% (
+      pushd %BOOST_DEFAULT_PATH% && mkdir %BOOST_BUILT_PATH% &&
+      bootstrap.bat && b2.exe install ^
+        toolset=%COMPILER% ^
+        variant=%CONFIG_LOWER% ^
+        runtime-link=static ^
+        -j2 --prefix=%BOOST_BUILT_PATH% &&
+      popd &&
+      dir %BOOST_BUILT_PATH%\include &&
+      dir %BOOST_BUILT_PATH%\lib
+    )
+  - ps: |
+      if ($env:generator -eq "MinGW Makefiles") {
+        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib" |
+          Rename-Item -NewName { $_.name -replace '-x64','' }
+        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib"
+      }
+
+  # Install libgit2 and toml11
+  - ps: |
+      if ($env:compiler -eq "msvc") {
+        if ($env:platform -eq "x86") {
+          $env:CMAKE_GENERATOR_PLATFORM = 'Win32'
+        } else {
+          $env:CMAKE_GENERATOR_PLATFORM = 'x64'
+        }
+      }
+      $env:GIT_REDIRECT_STDERR = '2>&1'
+      @(@{ owner="libgit2"; repo="libgit2"; version="$env:LIBGIT2_VERSION"; opts="" },
+        @{ owner="ToruNiina"; repo="toml11"; version="$env:TOML11_VERSION"; opts="-Dtoml11_BUILD_TEST=OFF" }
+      ) | foreach {
+        $library_path = "C:\Libraries\$($_.repo)-$($_.version)"
+        if ("$env:compiler" -ne "cygwin-gcc" -and !(Test-Path "$library_path")) {
+          git clone -q -b "v$($_.version)" "https://github.com/$($_.owner)/$($_.repo).git"
+          mkdir "$($_.repo)\build"; pushd "$($_.repo)\build"
+          cmake .. -G "$env:generator" -DCMAKE_INSTALL_PREFIX="$library_path" "$($_.opts)"
+          cmake --build . --target install --config "$env:configuration"
+          popd
+        }
+      }
+
+build_script:
+  - if %COMPILER% == cygwin-gcc (
+      %CYG_ROOT%\bin\bash -lc
+        "cd $APPVEYOR_BUILD_FOLDER &&
+        mkdir build && cd build &&
+        cmake -DBUILD_TESTING=ON .. &&
+        make install &&
+        poac help"
+    ) else (
+      mkdir build && cd build &&
+      cmake .. -G "%GENERATOR%" ^
+        -DENABLE_STATIC=ON ^
+        -DBoost_USE_STATIC_LIBS=ON ^
+        -DBoost_USE_STATIC_RUNTIME=ON ^
+        -DBOOST_ROOT=%BOOST_BUILT_PATH% ^
+        -DBOOST_LIBRARYDIR=%BOOST_BUILT_PATH%\lib ^
+        -DGIT2_DIR=C:\Libraries\libgit2-%LIBGIT2_VERSION% ^
+        -DTOML11_DIR=C:\Libraries\toml11-%TOML11_VERSION% &&
+      cmake --build . --target install --config %CONFIGURATION%
+    )
+
+artifacts:
+  - path: build\Release\poac.exe
+    name: release_msvc
+  - path: build\poac.exe
+    name: release_mingw
+
+notifications:
+  - provider: Slack
+    incoming_webhook:
+      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
+    on_build_success: true
+    on_build_failure: true
diff --git a/.github/disabled_workflows/windows.yml b/.github/disabled_workflows/windows.yml
new file mode 100644
index 0000000..e612e60
--- /dev/null
+++ b/.github/disabled_workflows/windows.yml
@@ -0,0 +1,149 @@
+name: Windows
+
+on:
+  push:
+    branches: [ master ]
+  pull_request:
+    branches: [ master ]
+env:
+  LIBGIT2_VERSION: 0.28.4
+  TOML11_VERSION: 3.6.0
+  LIBSSL_VERSION: 1.1.1.4
+
+jobs:
+  win32-vs2019:
+    name: Visual Studio 2019
+    runs-on: windows-2019
+    strategy:
+      matrix:
+        build_type: [ Debug, Release ]
+    env:
+      GENERATOR: 'Visual Studio 16 2019'
+    steps:
+      - uses: actions/checkout@v1
+
+      - name: Restore & Cache libgit2
+        uses: actions/cache@v1
+        id: libgit2-cache
+        with:
+          path: 'C:/Program Files (x86)/libgit2'
+          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-libgit2-${{ env.LIBGIT2_VERSION }}
+      - name: Install libgit2 (${{ env.LIBGIT2_VERSION }})
+        if: steps.libgit2-cache.outputs.cache-hit != 'true'
+        run: |
+          git clone -q -b v${{ env.LIBGIT2_VERSION }} https://github.com/libgit2/libgit2.git
+          mkdir libgit2/build
+          cd libgit2/build
+          cmake .. -G "${{ env.GENERATOR }}"
+          cmake --build . --target install --config ${{ matrix.build_type }}
+        working-directory: ${{ runner.temp }}
+
+      - name: Restore & Cache toml11
+        uses: actions/cache@v1
+        id: toml11-cache
+        with:
+          path: 'C:/Program Files (x86)/toml11'
+          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-toml11-${{ env.TOML11_VERSION }}
+      - name: Install toml11 (${{ env.TOML11_VERSION }})
+        if: steps.toml11-cache.outputs.cache-hit != 'true'
+        run: |
+          git clone -q -b v${{ env.TOML11_VERSION }} https://github.com/ToruNiina/toml11.git
+          mkdir toml11/build
+          cd toml11/build
+          cmake .. -G "${{ env.GENERATOR }}" -Dtoml11_BUILD_TEST=OFF
+          cmake --build . --target install --config ${{ matrix.build_type }}
+        working-directory: ${{ runner.temp }}
+
+      - name: Restore & Cache libssl
+        uses: actions/cache@v1
+        id: libssl-cache
+        with:
+          path: 'C:/Program Files/OpenSSL-Win64'
+          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-libssl-${{ env.LIBSSL_VERSION }}
+      - name: Install libssl (${{ env.LIBSSL_VERSION }})
+        if: steps.libssl-cache.outputs.cache-hit != 'true'
+        run: choco install openssl --version ${{ env.LIBSSL_VERSION }}
+
+#      - name: Build Poac
+#        run: |
+#          mkdir build
+#          cd build
+#          cmake .. -G "${{ env.GENERATOR }}"              `
+#            -DBUILD_TESTING=OFF                         `
+#            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}   `
+#            -DGIT2_DIR="C:/Program Files (x86)/libgit2"   `
+#            -DTOML11_DIR="C:/Program Files (x86)/toml11/" `
+#            -DBoost_INCLUDE_DIR="$env:BOOST_ROOT_1_69_0/include"
+#          cmake --build . --target install --config ${{ matrix.build_type }}
+
+#      - name: Upload pre-built binary
+#        uses: actions/upload-artifact@v1
+#        if: matrix.build_type == 'Release'
+#        with:
+#          name: ${{ github.job }}
+#          path: 'C:/Program Files (x86)/poac/bin/poac.exe'
+
+# TODO: https://github.com/poacpm/poac/pull/190/checks?check_run_id=345212483
+  # See also: https://github.com/actions/virtual-environments/issues/111
+#  win32-mingw-8:
+#    name: MinGW 8.1.0
+#    runs-on: windows-2019
+#    strategy:
+#      matrix:
+#        build_type: [Debug, Release]
+#    env:
+#      GENERATOR: 'MinGW Makefiles'
+#    steps:
+#      - uses: actions/checkout@v1
+#
+#      - name: libgit2 cache
+#        uses: actions/cache@v1
+#        id: libgit2-cache
+#        with:
+#          path: 'C:/Program Files (x86)/libgit2'
+#          key: ${{ runner.os }}-mingw-8-${{ matrix.build_type }}-libgit2-${{ env.LIBGIT2_VERSION }}
+#      - name: Install libgit2
+#        if: steps.libgit2-cache.outputs.cache-hit != 'true'
+#        run: |
+#          git clone -q -b v${{ env.LIBGIT2_VERSION }} https://github.com/libgit2/libgit2.git
+#          mkdir libgit2/build
+#          cd libgit2/build
+#          cmake .. -G "${{ env.GENERATOR }}" -DCMAKE_SH=CMAKE_SH-NOTFOUND
+#          mingw32-make
+#          mingw32-make install
+#        working-directory: ${{ runner.temp }}
+#
+#      - name: toml11 cache
+#        uses: actions/cache@v1
+#        id: toml11-cache
+#        with:
+#          path: 'C:/Program Files (x86)/toml11'
+#          key: ${{ runner.os }}-mingw-8-${{ matrix.build_type }}-toml11-${{ env.TOML11_VERSION }}
+#      - name: Install toml11
+#        if: steps.toml11-cache.outputs.cache-hit != 'true'
+#        run: |
+#          git clone -q -b v${{ env.TOML11_VERSION }} https://github.com/ToruNiina/toml11.git
+#          mkdir toml11/build
+#          cd toml11/build
+#          cmake .. -G "${{ env.GENERATOR }}" -Dtoml11_BUILD_TEST=OFF -DCMAKE_SH=CMAKE_SH-NOTFOUND
+#          mingw32-make install
+#        working-directory: ${{ runner.temp }}
+#
+#      - name: Build
+#        run: |
+#          mkdir build
+#          cd build
+#          cmake .. -G "${{ env.GENERATOR }}" `
+#            -DCMAKE_SH=CMAKE_SH-NOTFOUND `
+#            -DBUILD_TESTING=OFF `
+#            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
+#            -DGIT2_DIR="C:/Program Files (x86)/libgit2" `
+#            -DTOML11_DIR="C:/Program Files (x86)/toml11/"
+#          mingw32-make
+#          mingw32-make install
+#
+#      - uses: actions/upload-artifact@v1
+#        if: matrix.build_type == 'Release'
+#        with:
+#          name: mingw
+#          path: 'C:/Program Files (x86)/poac/bin/poac.exe'
diff --git a/.github/workflows/linux.yml b/.github/workflows/linux.yml
index 556fbf4..2d4ce76 100644
--- a/.github/workflows/linux.yml
+++ b/.github/workflows/linux.yml
@@ -155,10 +155,9 @@ jobs:
           sudo make install
         working-directory: ${{ runner.temp }}
 
-      - run: mkdir build
-
       - name: Build Poac
         run: |
+          mkdir build && cd build
           cmake ..                                               \
             -DBUILD_TESTING=ON                                 \
             -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}          \
@@ -169,19 +168,16 @@ jobs:
             -DCLIPP_DIR=${{ runner.temp }}/libs/clipp            \
             -DFMT_DIR=${{ runner.temp }}/libs/fmt
           make
-        working-directory: build
 
-      - name: Test Poac
-        run: ctest --output-on-failure --verbose
-        working-directory: build
+#      TODO:
+#      - name: Test Poac
+#        run: cd build && ctest --output-on-failure --verbose
 
-      - name: Running test
-        run: ./poac help
-        working-directory: build
+#      TODO:
+#        - name: Running test
+#        run: ./build/poac help
 
-      - name: Print info of the executable file
-        run: file ./poac
-        working-directory: build
+      - run: file ./build/poac
 
       - name: Upload pre-built binary
         uses: actions/upload-artifact@v1
@@ -337,10 +333,9 @@ jobs:
           sudo make install
         working-directory: ${{ runner.temp }}
 
-      - run: mkdir build
-
       - name: Build Poac
         run: |
+          mkdir build && cd build
           cmake ..                                               \
             -DBUILD_TESTING=ON                                 \
             -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}          \
@@ -352,11 +347,8 @@ jobs:
             -DCLIPP_DIR=${{ runner.temp }}/libs/clipp            \
             -DFMT_DIR=${{ runner.temp }}/libs/fmt
           make
-        working-directory: build
 
-      - name: Print info of the executable file
-        run: file ./poac
-        working-directory: build
+      - run: file ./build/poac
 
       - name: Upload pre-built binary
         uses: actions/upload-artifact@v1
diff --git a/.github/workflows/windows.yml b/.github/workflows/windows.yml
deleted file mode 100644
index e612e60..0000000
--- a/.github/workflows/windows.yml
+++ /dev/null
@@ -1,149 +0,0 @@
-name: Windows
-
-on:
-  push:
-    branches: [ master ]
-  pull_request:
-    branches: [ master ]
-env:
-  LIBGIT2_VERSION: 0.28.4
-  TOML11_VERSION: 3.6.0
-  LIBSSL_VERSION: 1.1.1.4
-
-jobs:
-  win32-vs2019:
-    name: Visual Studio 2019
-    runs-on: windows-2019
-    strategy:
-      matrix:
-        build_type: [ Debug, Release ]
-    env:
-      GENERATOR: 'Visual Studio 16 2019'
-    steps:
-      - uses: actions/checkout@v1
-
-      - name: Restore & Cache libgit2
-        uses: actions/cache@v1
-        id: libgit2-cache
-        with:
-          path: 'C:/Program Files (x86)/libgit2'
-          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-libgit2-${{ env.LIBGIT2_VERSION }}
-      - name: Install libgit2 (${{ env.LIBGIT2_VERSION }})
-        if: steps.libgit2-cache.outputs.cache-hit != 'true'
-        run: |
-          git clone -q -b v${{ env.LIBGIT2_VERSION }} https://github.com/libgit2/libgit2.git
-          mkdir libgit2/build
-          cd libgit2/build
-          cmake .. -G "${{ env.GENERATOR }}"
-          cmake --build . --target install --config ${{ matrix.build_type }}
-        working-directory: ${{ runner.temp }}
-
-      - name: Restore & Cache toml11
-        uses: actions/cache@v1
-        id: toml11-cache
-        with:
-          path: 'C:/Program Files (x86)/toml11'
-          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-toml11-${{ env.TOML11_VERSION }}
-      - name: Install toml11 (${{ env.TOML11_VERSION }})
-        if: steps.toml11-cache.outputs.cache-hit != 'true'
-        run: |
-          git clone -q -b v${{ env.TOML11_VERSION }} https://github.com/ToruNiina/toml11.git
-          mkdir toml11/build
-          cd toml11/build
-          cmake .. -G "${{ env.GENERATOR }}" -Dtoml11_BUILD_TEST=OFF
-          cmake --build . --target install --config ${{ matrix.build_type }}
-        working-directory: ${{ runner.temp }}
-
-      - name: Restore & Cache libssl
-        uses: actions/cache@v1
-        id: libssl-cache
-        with:
-          path: 'C:/Program Files/OpenSSL-Win64'
-          key: ${{ runner.os }}-vs2019-${{ matrix.build_type }}-libssl-${{ env.LIBSSL_VERSION }}
-      - name: Install libssl (${{ env.LIBSSL_VERSION }})
-        if: steps.libssl-cache.outputs.cache-hit != 'true'
-        run: choco install openssl --version ${{ env.LIBSSL_VERSION }}
-
-#      - name: Build Poac
-#        run: |
-#          mkdir build
-#          cd build
-#          cmake .. -G "${{ env.GENERATOR }}"              `
-#            -DBUILD_TESTING=OFF                         `
-#            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}   `
-#            -DGIT2_DIR="C:/Program Files (x86)/libgit2"   `
-#            -DTOML11_DIR="C:/Program Files (x86)/toml11/" `
-#            -DBoost_INCLUDE_DIR="$env:BOOST_ROOT_1_69_0/include"
-#          cmake --build . --target install --config ${{ matrix.build_type }}
-
-#      - name: Upload pre-built binary
-#        uses: actions/upload-artifact@v1
-#        if: matrix.build_type == 'Release'
-#        with:
-#          name: ${{ github.job }}
-#          path: 'C:/Program Files (x86)/poac/bin/poac.exe'
-
-# TODO: https://github.com/poacpm/poac/pull/190/checks?check_run_id=345212483
-  # See also: https://github.com/actions/virtual-environments/issues/111
-#  win32-mingw-8:
-#    name: MinGW 8.1.0
-#    runs-on: windows-2019
-#    strategy:
-#      matrix:
-#        build_type: [Debug, Release]
-#    env:
-#      GENERATOR: 'MinGW Makefiles'
-#    steps:
-#      - uses: actions/checkout@v1
-#
-#      - name: libgit2 cache
-#        uses: actions/cache@v1
-#        id: libgit2-cache
-#        with:
-#          path: 'C:/Program Files (x86)/libgit2'
-#          key: ${{ runner.os }}-mingw-8-${{ matrix.build_type }}-libgit2-${{ env.LIBGIT2_VERSION }}
-#      - name: Install libgit2
-#        if: steps.libgit2-cache.outputs.cache-hit != 'true'
-#        run: |
-#          git clone -q -b v${{ env.LIBGIT2_VERSION }} https://github.com/libgit2/libgit2.git
-#          mkdir libgit2/build
-#          cd libgit2/build
-#          cmake .. -G "${{ env.GENERATOR }}" -DCMAKE_SH=CMAKE_SH-NOTFOUND
-#          mingw32-make
-#          mingw32-make install
-#        working-directory: ${{ runner.temp }}
-#
-#      - name: toml11 cache
-#        uses: actions/cache@v1
-#        id: toml11-cache
-#        with:
-#          path: 'C:/Program Files (x86)/toml11'
-#          key: ${{ runner.os }}-mingw-8-${{ matrix.build_type }}-toml11-${{ env.TOML11_VERSION }}
-#      - name: Install toml11
-#        if: steps.toml11-cache.outputs.cache-hit != 'true'
-#        run: |
-#          git clone -q -b v${{ env.TOML11_VERSION }} https://github.com/ToruNiina/toml11.git
-#          mkdir toml11/build
-#          cd toml11/build
-#          cmake .. -G "${{ env.GENERATOR }}" -Dtoml11_BUILD_TEST=OFF -DCMAKE_SH=CMAKE_SH-NOTFOUND
-#          mingw32-make install
-#        working-directory: ${{ runner.temp }}
-#
-#      - name: Build
-#        run: |
-#          mkdir build
-#          cd build
-#          cmake .. -G "${{ env.GENERATOR }}" `
-#            -DCMAKE_SH=CMAKE_SH-NOTFOUND `
-#            -DBUILD_TESTING=OFF `
-#            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
-#            -DGIT2_DIR="C:/Program Files (x86)/libgit2" `
-#            -DTOML11_DIR="C:/Program Files (x86)/toml11/"
-#          mingw32-make
-#          mingw32-make install
-#
-#      - uses: actions/upload-artifact@v1
-#        if: matrix.build_type == 'Release'
-#        with:
-#          name: mingw
-#          path: 'C:/Program Files (x86)/poac/bin/poac.exe'
diff --git a/appveyor-disabled.yml b/appveyor-disabled.yml
deleted file mode 100644
index 91d6d4b..0000000
--- a/appveyor-disabled.yml
+++ /dev/null
@@ -1,153 +0,0 @@
-version: "#{build}"
-
-cache:
-  - '%BOOST_BUILT_PATH%'
-  - 'C:\Libraries\libgit2-%LIBGIT2_VERSION%'
-  - 'C:\Libraries\toml11-%TOML11_VERSION%'
-  - '%CYG_ROOT%\var\cache\setup'
-
-branches:
-  only:
-    - master
-
-configuration:
-  - Debug
-  - Release
-
-build:
-  verbosity: minimal
-
-environment:
-  global:
-    CYG_PACKAGES: gcc-g++,git,make,cmake,libssl-devel,libboost-devel,libgit2-devel
-    LIBGIT2_VERSION: 0.28.2
-    TOML11_VERSION: 3.1.0
-
-#  matrix: # FIXME: Temporarily unsupported cygwin and mingw because of std::filesystem
-#    - COMPILER: cygwin-gcc
-#      CYG_ROOT: 'C:\cygwin'
-#      CYG_SETUP: setup-x86.exe
-#    - COMPILER: cygwin-gcc
-#      CYG_ROOT: 'C:\cygwin64'
-#      CYG_SETUP: setup-x86_64.exe
-#
-#    - COMPILER: gcc  # gcc-7.3.0-posix
-#      GENERATOR: "MinGW Makefiles"
-#      CXX_PATH: 'C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin'
-#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
-#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
-#    - COMPILER: gcc  # gcc-8.1.0-posix
-#      GENERATOR: "MinGW Makefiles"
-#      CXX_PATH: 'C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin'
-#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
-#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
-
-#    - COMPILER: msvc
-#      GENERATOR: "Visual Studio 15 2017"
-#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
-#      PLATFORM: x86
-#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
-#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
-#    - COMPILER: msvc
-#      GENERATOR: "Visual Studio 15 2017"
-#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
-#      PLATFORM: x64
-#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
-#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
-
-install:
-  - if %COMPILER% == cygwin-gcc (
-      %CYG_ROOT%\%CYG_SETUP% --quiet-mode ^
-        --no-shortcuts --upgrade-also ^
-        --local-package-dir "%CYG_ROOT%\var\cache\setup" ^
-        --packages %CYG_PACKAGES% &&
-      %CYG_ROOT%\bin\bash -lc
-        "git clone -q -b v%TOML11_VERSION% https://github.com/ToruNiina/toml11.git &&
-        mkdir toml11/build && cd toml11/build &&
-        cmake .. -Dtoml11_BUILD_TEST=OFF &&
-        make install"
-    )
-
-  # Build boost
-  - ps: |
-      $env:config_lower = $env:configuration.ToLower()
-      if ($env:generator -eq "MinGW Makefiles") {
-        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
-        if ($env:cxx_path -ne "") {
-          $env:path += ";$env:cxx_path"
-        }
-      }
-  - if not %COMPILER% == cygwin-gcc if not exist %BOOST_BUILT_PATH% (
-      pushd %BOOST_DEFAULT_PATH% && mkdir %BOOST_BUILT_PATH% &&
-      bootstrap.bat && b2.exe install ^
-        toolset=%COMPILER% ^
-        variant=%CONFIG_LOWER% ^
-        runtime-link=static ^
-        -j2 --prefix=%BOOST_BUILT_PATH% &&
-      popd &&
-      dir %BOOST_BUILT_PATH%\include &&
-      dir %BOOST_BUILT_PATH%\lib
-    )
-  - ps: |
-      if ($env:generator -eq "MinGW Makefiles") {
-        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib" |
-          Rename-Item -NewName { $_.name -replace '-x64','' }
-        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib"
-      }
-
-  # Install libgit2 and toml11
-  - ps: |
-      if ($env:compiler -eq "msvc") {
-        if ($env:platform -eq "x86") {
-          $env:CMAKE_GENERATOR_PLATFORM = 'Win32'
-        } else {
-          $env:CMAKE_GENERATOR_PLATFORM = 'x64'
-        }
-      }
-      $env:GIT_REDIRECT_STDERR = '2>&1'
-      @(@{ owner="libgit2"; repo="libgit2"; version="$env:LIBGIT2_VERSION"; opts="" },
-        @{ owner="ToruNiina"; repo="toml11"; version="$env:TOML11_VERSION"; opts="-Dtoml11_BUILD_TEST=OFF" }
-      ) | foreach {
-        $library_path = "C:\Libraries\$($_.repo)-$($_.version)"
-        if ("$env:compiler" -ne "cygwin-gcc" -and !(Test-Path "$library_path")) {
-          git clone -q -b "v$($_.version)" "https://github.com/$($_.owner)/$($_.repo).git"
-          mkdir "$($_.repo)\build"; pushd "$($_.repo)\build"
-          cmake .. -G "$env:generator" -DCMAKE_INSTALL_PREFIX="$library_path" "$($_.opts)"
-          cmake --build . --target install --config "$env:configuration"
-          popd
-        }
-      }
-
-build_script:
-  - if %COMPILER% == cygwin-gcc (
-      %CYG_ROOT%\bin\bash -lc
-        "cd $APPVEYOR_BUILD_FOLDER &&
-        mkdir build && cd build &&
-        cmake -DBUILD_TESTING=ON .. &&
-        make install &&
-        poac help"
-    ) else (
-      mkdir build && cd build &&
-      cmake .. -G "%GENERATOR%" ^
-        -DENABLE_STATIC=ON ^
-        -DBoost_USE_STATIC_LIBS=ON ^
-        -DBoost_USE_STATIC_RUNTIME=ON ^
-        -DBOOST_ROOT=%BOOST_BUILT_PATH% ^
-        -DBOOST_LIBRARYDIR=%BOOST_BUILT_PATH%\lib ^
-        -DGIT2_DIR=C:\Libraries\libgit2-%LIBGIT2_VERSION% ^
-        -DTOML11_DIR=C:\Libraries\toml11-%TOML11_VERSION% &&
-      cmake --build . --target install --config %CONFIGURATION%
-    )
-
-artifacts:
-  - path: build\Release\poac.exe
-    name: release_msvc
-  - path: build\poac.exe
-    name: release_mingw
-
-notifications:
-  - provider: Slack
-    incoming_webhook:
-      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
-    on_build_success: true
-    on_build_failure: true
