diff --git a/.github/workflows/linux.yml b/.github/workflows/linux.yml
index a46c257..3fd9af2 100644
--- a/.github/workflows/linux.yml
+++ b/.github/workflows/linux.yml
@@ -11,9 +11,9 @@ env:
   TOML11_VERSION: 3.6.0
   LIBARCHIVE_VERSION: 3.5.0
   LIBGIT2_VERSION: 1.1.0
-  CLIPP_VERSION: master
+  CLIPP_VERSION: 2c32b2f1f7cc530b1ec1f62c92f698643bb368db
   FMT_VERSION: 7.1.3
-  MITAMA_RESULT_VERSION: develop
+  MITAMA_RESULT_VERSION: 37e80b09e8dcf10ef4c2925de87a92cc750ecd90
   PLOG_VERSION: 1.1.5
 
 jobs:
@@ -22,60 +22,45 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
+        compiler: [ clang, gcc ]
+        compiler_version: [ 7, 8, 9, 10 ]
         build_type: [ Debug ] # TODO: Release
-        compiler:
-          - {
-            cc: clang-7, cxx: clang++-7,
-            pacakge: clang-7,
-          }
-          - {
-            cc: clang-8, cxx: clang++-8,
-            pacakge: clang-8,
-          }
-          - {
-            cc: clang-9, cxx: clang++-9,
-            pacakge: clang-9,
-          }
-          - {
-            cc: clang-10, cxx: clang++-10,
-            pacakge: clang-10,
-          }
-          - {
-            cc: gcc-8, cxx: g++-8,
-            pacakge: g++-8,
-          }
-          - {
-            cc: gcc-9, cxx: g++-9,
-            pacakge: g++-9,
-          }
-          - {
-            cc: gcc-10, cxx: g++-10,
-            pacakge: g++-10,
-          }
+        exclude:
+          - compiler: gcc
+            compiler_version: 7
+        include:
+          - compiler: clang
+            cc_prefix: clang-
+            cxx_prefix: clang++-
+            package_prefix: clang-
+          - compiler: gcc
+            cc_prefix: gcc-
+            cxx_prefix: g++-
+            package_prefix: g++-
     env:
-      CC: ${{ matrix.compiler.cc }}
-      CXX: ${{ matrix.compiler.cxx }}
-      CACHE_KEY_PREFIX: ${{ github.job }}-${{ matrix.compiler.pacakge }}-${{ matrix.build_type }}
+      CC: ${{ matrix.cc_prefix }}${{ matrix.compiler_version }}
+      CXX: ${{ matrix.cxx_prefix }}${{ matrix.compiler_version }}
+      CACHE_KEY_PREFIX: ${{ github.job }}-${{ matrix.package_prefix }}${{ matrix.compiler_version }}-${{ matrix.build_type }}
     steps:
       - uses: actions/checkout@v2.3.4
 
       - run: sudo apt-get -qq update
-      - name: Install ${{ matrix.compiler.pacakge }}
-        run: sudo apt-get install -y -qq pkg-config cmake ${{ matrix.compiler.pacakge }}
+      - name: Install ${{ matrix.package_prefix }}${{ matrix.compiler_version }}
+        run: sudo apt-get install -y -qq pkg-config cmake ${{ matrix.package_prefix }}${{ matrix.compiler_version }}
 
       - name: Install openssl
-        if: startsWith(matrix.compiler.cc, 'clang')
+        if: matrix.compiler == 'clang'
         run: sudo apt-get install -y -qq libssl-dev
 
       - name: Restore & Cache openssl (${{ env.OPENSSL_VERSION }})
-        if: startsWith(matrix.compiler.cc, 'gcc')
+        if: matrix.compiler == 'gcc'
         uses: actions/cache@v2.1.3
         id: openssl-cache
         with:
           path: ${{ runner.temp }}/libs/openssl
           key: ${{ env.CACHE_KEY_PREFIX }}-openssl-${{ env.OPENSSL_VERSION }}
       - name: Install openssl (${{ env.OPENSSL_VERSION }}) as static
-        if: startsWith(matrix.compiler.cc, 'gcc') && steps.openssl-cache.outputs.cache-hit != 'true'
+        if: matrix.compiler == 'gcc' && steps.openssl-cache.outputs.cache-hit != 'true'
         run: |
           mkdir -p ${{ runner.temp }}/libs/openssl
           git clone -q -b ${{ env.OPENSSL_VERSION }} https://github.com/openssl/openssl.git
@@ -155,8 +140,9 @@ jobs:
         if: steps.clipp-cache.outputs.cache-hit != 'true'
         run: |
           mkdir -p ${{ runner.temp }}/libs/clipp
-          git clone -q -b ${{ env.CLIPP_VERSION }} https://github.com/muellan/clipp.git
+          git clone -q https://github.com/muellan/clipp.git
           mkdir clipp/build && cd clipp/build
+          git checkout ${{ env.CLIPP_VERSION }}
           cmake .. -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/libs/clipp
           sudo make install
         working-directory: ${{ runner.temp }}
@@ -177,18 +163,19 @@ jobs:
           sudo make install
         working-directory: ${{ runner.temp }}
 
-#      - name: Restore & Cache mitama-cpp-result (${{ env.MITAMA_RESULT_VERSION }})
-#        uses: actions/cache@v2.1.3
-#        id: mitama-cpp-result-cache
-#        with:
-#          path: ${{ runner.temp }}/libs/mitama-cpp-result
-#          key: ${{ env.CACHE_KEY_PREFIX }}-mitama-cpp-result-${{ env.MITAMA_RESULT_VERSION }}
+      - name: Restore & Cache mitama-cpp-result (${{ env.MITAMA_RESULT_VERSION }})
+        uses: actions/cache@v2.1.3
+        id: mitama-cpp-result-cache
+        with:
+          path: ${{ runner.temp }}/libs/mitama-cpp-result
+          key: ${{ env.CACHE_KEY_PREFIX }}-mitama-cpp-result-${{ env.MITAMA_RESULT_VERSION }}
       - name: Install LoliGothick/mitama-cpp-result (${{ env.MITAMA_RESULT_VERSION }}) (header-only) (always up-to-date)
-#        if: steps.mitama-cpp-result-cache.outputs.cache-hit != 'true'
+        if: steps.mitama-cpp-result-cache.outputs.cache-hit != 'true'
         run: |
           mkdir -p ${{ runner.temp }}/libs/mitama-cpp-result
-          git clone -q -b ${{ env.MITAMA_RESULT_VERSION }} https://github.com/LoliGothick/mitama-cpp-result.git
+          git clone -q https://github.com/LoliGothick/mitama-cpp-result.git
           mkdir mitama-cpp-result/build && cd mitama-cpp-result/build
+          git checkout ${{ env.MITAMA_RESULT_VERSION }}
           cmake .. -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/libs/mitama-cpp-result
           sudo make install
         working-directory: ${{ runner.temp }}
@@ -221,12 +208,12 @@ jobs:
         working-directory: build
 
       - name: Test Poac
-        if: matrix.compiler.cxx != 'g++-8'
+        if: matrix.compiler == 'clang' || (matrix.compiler == 'gcc' && matrix.compiler_version != 8)
         run: ctest --output-on-failure --verbose
         working-directory: build
 
       - name: Running test
-        if: matrix.compiler.cxx != 'g++-8'
+        if: matrix.compiler == 'clang' || (matrix.compiler == 'gcc' && matrix.compiler_version != 8)
         run: ./poac help
         working-directory: build
 
@@ -238,5 +225,5 @@ jobs:
         uses: actions/upload-artifact@v2.2.1
         if: matrix.build_type == 'Release'
         with:
-          name: ${{ github.job }}-${{ matrix.compiler.pacakge }}
+          name: ${{ github.job }}-${{ matrix.package_prefix }}${{ matrix.compiler_version }}
           path: poac
