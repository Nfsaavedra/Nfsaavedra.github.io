diff --git a/.github/workflows/container.yml b/.github/workflows/container.yml
index 2d43358..dd218fd 100644
--- a/.github/workflows/container.yml
+++ b/.github/workflows/container.yml
@@ -30,8 +30,8 @@ jobs:
           key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
       - run: rustup update stable && rustup default stable
       - run: cargo install cross
-      - run: cross build --release --target aarch64-unknown-linux-gnu
-      - run: cross build --release --target x86_64-unknown-linux-gnu
+      - run: CROSS_CONFIG=Cross.toml cross -v build --release --target aarch64-unknown-linux-gnu
+      - run: CROSS_CONFIG=Cross.toml cross build --release --target x86_64-unknown-linux-gnu
       - name: archive nasl-cli aarch64-unknown-linux-gnu
         uses: actions/upload-artifact@v3
         with:
diff --git a/rust/Cross.toml b/rust/Cross.toml
new file mode 100644
index 0000000..78dde07
--- /dev/null
+++ b/rust/Cross.toml
@@ -0,0 +1,4 @@
+[target.aarch64-unknown-linux-gnu]
+dockerfile = "cross_aarch64.Dockerfile"
+[target.x86_64-unknown-linux-gnu]
+dockerfile = "cross.Dockerfile"
diff --git a/rust/cross.Dockerfile b/rust/cross.Dockerfile
new file mode 100644
index 0000000..15a9a24
--- /dev/null
+++ b/rust/cross.Dockerfile
@@ -0,0 +1,4 @@
+ARG CROSS_BASE_IMAGE
+FROM $CROSS_BASE_IMAGE
+RUN apt-get update && apt-get install -y \
+  libpcap-dev
diff --git a/rust/cross_aarch64.Dockerfile b/rust/cross_aarch64.Dockerfile
new file mode 100644
index 0000000..9be6157
--- /dev/null
+++ b/rust/cross_aarch64.Dockerfile
@@ -0,0 +1,20 @@
+FROM ghcr.io/cross-rs/aarch64-unknown-linux-gnu:latest
+# it is based on xenial and therefore doesn't have
+# libpcap-dev available as a install candidate for aarach64.
+# The edge version (as written in 2023-03-08) is based on 
+# 20.4 and would have a candidate ready; however the build time
+# is very bad on edge therefore we wait until it is stable.
+RUN apt-get update && apt-get install -y \
+  bison \
+  flex \
+  curl
+RUN curl -o /tmp/pcap.tar.gz https://www.tcpdump.org/release/libpcap-1.10.3.tar.gz
+WORKDIR /tmp
+RUN tar xvf pcap.tar.gz
+RUN ls -las
+WORKDIR /tmp/libpcap-1.10.3
+ENV CC=aarch64-linux-gnu-gcc
+ENV CFLAGS='-Os'
+RUN ./configure --host=aarch64-unknown-linux-gnu --with-pcap=linux
+RUN cat config.log
+RUN make install
