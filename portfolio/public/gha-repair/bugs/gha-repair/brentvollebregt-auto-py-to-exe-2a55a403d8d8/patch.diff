diff --git a/.github/workflows/publish.yml b/.github/workflows/publish.yml
index a5b3f2c..9f65392 100644
--- a/.github/workflows/publish.yml
+++ b/.github/workflows/publish.yml
@@ -89,24 +89,34 @@ jobs:
         id: get_documented_changes
         shell: python
         run: |
-          import string
-          import os
-          import random
           import re
 
-          with open("CHANGELOG.md", "r") as f:
+          # Read in the changelog
+          with open("CHANGELOG.md", "r", encoding='utf-8') as f:
               changelog = f.read()
-
+          
           version = "${{ steps.get_module_version.outputs.version }}"
-          pattern = r"##\s*{}\s*\n((?:.|\n)*?)(?:\n##\s*|\Z)".format(re.escape(version))
-          changes = re.search(pattern, changelog).group(1).strip()
-
-          if changes == "":
-              print(f"Changes were not detected in CHANGELOG.md for version {version}")
-              exit(1)
-
-          footer = f"\n\n---\n\n[üåê auto-py-to-exe {version} on PyPI](https://pypi.org/project/auto-py-to-exe/{version}/)"
+          
+          # Get the changes for the current version
+          changes_for_target_version_regex = r"##\s*{}\s*\n((?:.|\n)*?)(?:\n##\s*|\Z)".format(re.escape(version))
+          match = re.search(changes_for_target_version_regex, changelog)
+          if match is None:
+              raise Exception(f"Changes were not detected in CHANGELOG.md for version {version}")
+          changes = re.search(changes_for_target_version_regex, changelog).group(1).strip()
+          
+          # Get the previous version
+          versions_regex = r"^## (\d+\.\d+\.\d+)(?=^## \d+\.\d+\.\d+|$)"
+          versions = re.findall(versions_regex, changelog, re.MULTILINE)
+          current_version_index = [i for i, v in enumerate(versions) if v == version][0]
+          previous_version = versions[current_version_index + 1]
+          
+          # Build up the changelog
+          footer = f"\n\n---"
+          footer += f"\n\n[üåê auto-py-to-exe {version} on PyPI](https://pypi.org/project/auto-py-to-exe/{version}/)"
+          footer += f"\n[v{previous_version} ‚û°Ô∏è v{version} changes](https://github.com/brentvollebregt/auto-py-to-exe/compare/v{previous_version}...v{version})"
           changes += footer
+          
+          # Output the changelog
           print(changes)
 
           # Writing multiline strings to output: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
